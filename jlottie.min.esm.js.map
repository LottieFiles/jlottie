{"version":3,"file":"jlottie.min.esm.js","sources":["../src/jlottie.js"],"sourcesContent":["const xmlns = 'http://www.w3.org/2000/svg';\n\nexport let animation = [];\nexport let frame = [];\nexport let animationCount = -1;\nconst animationLength = 0;\nlet animationLoading = 0;\nconst frozen = false;\nlet playStarted = false;\nvar smallestFrameTime = 0;\nlet debugAnimation = false;\n\n/**\n * Exposes a near-zero cost console logger.\n *\n * @example debug(() => 'My logging statement'); // only prints if debugAnimation is set\n * @example debug(() => ['My logging statement', { state }]); // Prints the message and state if debugAnimation is set\n */\nexport function debug(loggerFn) {\n  if (!debugAnimation) return;\n\n  const loggingArgs = loggerFn();\n\n  if (Array.isArray(loggingArgs)) {\n    console.log(...loggingArgs);\n  } else {\n    console.log(loggingArgs);\n  }\n}\n\n/// ////////// BEZIER\nexport function arcLength(p1, p2) {\n  let result = Math.sqrt(Math.pow((p2[0] - p1[0]), 2) + Math.pow((p2[1] - p1[1]), 2));\n  return result;\n}\n\nexport function bezierCurve(\n  p1,\n  c1,\n  c2,\n  p2,\n  fromT,\n  toT,\n  isLayer,\n  animationId,\n  refKey,\n  addTransformation,\n  objectId,\n  depth,\n  customFlag,\n) {\n  const newNodes = [];\n\n  if (c1.hasOwnProperty('x')) {\n  } else if (c1.length >= 1) {\n    c1.x = c1[0];\n    if (refKey == 'p' || refKey == 's') {\n      c1.y = c1[1];\n    }\n  }\n  if (c2.hasOwnProperty('x')) {\n  } else if (c2.length >= 1) {\n    c2.x = c1[0];\n    if (refKey == 'p' || refKey == 's') {\n      c2.y = c1[1];\n    }\n  }\n  if (refKey == 's') {\n    if (c1.x.length > 1) {\n      c1.x = c1.x[0];\n      c1.y = c1.y[0];\n    }\n    if (c2.x.length > 1) {\n      c2.x = c2.x[0];\n      c2.y = c2.y[0];\n    }\n  }\n  const frames = toT - fromT;\n  let timeTick;\n  let oneMinusT;\n  let currentFrame = fromT;\n  for (let i = 1; i < frames; i++) {\n    timeTick = i / frames;\n    oneMinusT = 1 - timeTick;\n    newNodes.push({ _comp: 1, t: 0 });\n    currentFrame++;\n    newNodes[newNodes.length - 1]._frame = parseInt(currentFrame);\n    newNodes[newNodes.length - 1].t = parseInt(currentFrame);\n    newNodes[newNodes.length - 1].s = [];\n    if (refKey != 'ks') {\n      if (p1.length > 4) {\n        for (var m = 0; m < (p1.length / 4); m++) {\n          newNodes[newNodes.length - 1].s.push(\n            Math.pow(oneMinusT, 3) * p1[m * 4] +\n              3 * Math.pow(oneMinusT, 2) * timeTick * (c1.x + p1[m * 4]) +\n              3 * oneMinusT * Math.pow(timeTick, 2) * (c2.x + p2[m * 4]) +\n              Math.pow(timeTick, 3) * p2[m * 4],\n          );\n          for (var n = 1; n < 4; n++) {\n            newNodes[newNodes.length - 1].s.push(\n              Math.pow(oneMinusT, 3) * p1[(m * 4) + n] +\n                3 * Math.pow(oneMinusT, 2) * timeTick * (c1.y + p1[(m * 4) + n]) +\n                3 * oneMinusT * Math.pow(timeTick, 2) * (c2.y + p2[(m * 4) + n]) +\n                Math.pow(timeTick, 3) * p2[(m * 4) + n],\n            )\n          }\n        }\n      } else {\n        newNodes[newNodes.length - 1].s.push(\n        Math.pow(oneMinusT, 3) * p1[0] +\n          3 * Math.pow(oneMinusT, 2) * timeTick * (c1.x + p1[0]) +\n          3 * oneMinusT * Math.pow(timeTick, 2) * (c2.x + p2[0]) +\n          Math.pow(timeTick, 3) * p2[0],\n        );\n        if (refKey != 'x' && refKey != 'y') {\n          if (refKey == 'p' || refKey == 's') {\n            newNodes[newNodes.length - 1].s.push(\n              Math.pow(oneMinusT, 3) * p1[1] +\n                3 * Math.pow(oneMinusT, 2) * timeTick * (c1.y + p1[1]) +\n                3 * oneMinusT * Math.pow(timeTick, 2) * (c2.y + p2[1]) +\n                Math.pow(timeTick, 3) * p2[1],\n            );\n          }\n        }\n      }\n    } else {\n      newNodes[newNodes.length - 1].s.push({ i: [], o: [], v: [] });\n      const j = 0;\n      for (let k = 0; k < p1[j].i.length; k++) {\n        newNodes[newNodes.length - 1].s[newNodes[newNodes.length - 1].s.length - 1].i.push([\n          Math.pow(oneMinusT, 3) * p1[j].i[k][0] +\n            3 * Math.pow(oneMinusT, 2) * timeTick * (c1.x + p1[j].i[k][0]) +\n            3 * oneMinusT * Math.pow(timeTick, 2) * (c2.x + p2[j].i[k][0]) +\n            Math.pow(timeTick, 3) * p2[j].i[k][0],\n          Math.pow(oneMinusT, 3) * p1[j].i[k][1] +\n            3 * Math.pow(oneMinusT, 2) * timeTick * (c1.y + p1[j].i[k][1]) +\n            3 * oneMinusT * Math.pow(timeTick, 2) * (c2.y + p2[j].i[k][1]) +\n            Math.pow(timeTick, 3) * p2[j].i[k][1],\n        ]);\n\n        newNodes[newNodes.length - 1].s[newNodes[newNodes.length - 1].s.length - 1].o.push([\n          Math.pow(oneMinusT, 3) * p1[j].o[k][0] +\n            3 * Math.pow(oneMinusT, 2) * timeTick * (c1.x + p1[j].o[k][0]) +\n            3 * oneMinusT * Math.pow(timeTick, 2) * (c2.x + p2[j].o[k][0]) +\n            Math.pow(timeTick, 3) * p2[j].o[k][0],\n          Math.pow(oneMinusT, 3) * p1[j].o[k][1] +\n            3 * Math.pow(oneMinusT, 2) * timeTick * (c1.y + p1[j].o[k][1]) +\n            3 * oneMinusT * Math.pow(timeTick, 2) * (c2.y + p2[j].o[k][1]) +\n            Math.pow(timeTick, 3) * p2[j].o[k][1],\n        ]);\n\n        newNodes[newNodes.length - 1].s[newNodes[newNodes.length - 1].s.length - 1].v.push([\n          Math.pow(oneMinusT, 3) * p1[j].v[k][0] +\n            3 * Math.pow(oneMinusT, 2) * timeTick * (c1.x + p1[j].v[k][0]) +\n            3 * oneMinusT * Math.pow(timeTick, 2) * (c2.x + p2[j].v[k][0]) +\n            Math.pow(timeTick, 3) * p2[j].v[k][0],\n          Math.pow(oneMinusT, 3) * p1[j].v[k][1] +\n            3 * Math.pow(oneMinusT, 2) * timeTick * (c1.y + p1[j].v[k][1]) +\n            3 * oneMinusT * Math.pow(timeTick, 2) * (c2.y + p2[j].v[k][1]) +\n            Math.pow(timeTick, 3) * p2[j].v[k][1],\n        ]);\n      }\n    }\n    if (addTransformation > -1 && refKey != 'ks' && customFlag != 'length') {\n      if (newNodes[newNodes.length - 1].hasOwnProperty('s')) {\n        addGroupPositionTransform(\n          currentFrame,\n          newNodes[newNodes.length - 1].s,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n        );\n      }\n    }\n  }\n\n  return newNodes;\n}\n\n/// ////////// ANIMATOR\n\nexport function loadFrame(i, _currentFrame) {\n  for (let ref = 0; ref < animation[i]._refObj.length; ref++) {\n    const refObj = animation[i]._refObj[ref];\n    let nextObj = false;\n    for (let m = _currentFrame - 1; m >= 0; m--) {\n      for (let n = 0; n < animation[i]._scene[m]._transform.length; n++) {\n        /*\n        if (animation[i]._scene[m]._transform[n].refObj == refObj) {\n          currentObj = document.getElementById(animation[i]._scene[m]._transform[n].refObj);\n          currentObjOther = document.getElementById(animation[i]._scene[m]._transform[n].refObjOther);\n          if (\n            animation[i]._scene[m]._transform[n].isTween ||\n            animation[i]._scene[m]._transform[n].combined.length > 0\n          ) {\n            if (animation[i]._scene[m]._transform[n].isTween) {\n              currentObj.setAttribute('d', animation[i]._scene[m]._transform[n].dataString);\n            }\n            currentObj.setAttribute('transform', animation[i]._scene[m]._transform[n].combined);\n            currentObjOther.setAttribute('opacity', animation[i]._scene[m]._transform[n].opacity);\n            nextObj = true;\n            break;\n          }\n        }\n        */\n        if (animation[i]._scene[m]._transform[n].refObj == refObj) {\n          if (animation[i]._scene[m]._transform[n].fillSet) {\n            if (animation[i]._scene[m]._transform[n].isGradient) {\n              const stops = document.getElementById(animation[i]._scene[m]._transform[n].fillObj).querySelectorAll(\"stop\");\n              for (var o = 0; o < stops.length; o++) {\n                stops[o].setAttribute(\"offset\", animation[i]._scene[m]._transform[n].offsets[m]);\n                stops[o].setAttribute(\"style\", animation[i]._scene[m]._transform[n].styles[m]);\n              }\n            } else {\n\n            }\n          } else {\n            if (animation[i]._scene[m]._transform[n].refObjSet) {\n              const currentObj = document.getElementById(animation[i]._scene[m]._transform[n].refObj);\n              const currentObjOther = document.getElementById(\n                animation[i]._scene[m]._transform[n].refObjOther,\n              );\n              if (animation[i]._scene[m]._transform[n].isTween) {\n                currentObj.setAttribute('d', animation[i]._scene[m]._transform[n].dataString);\n              }\n              if (animation[i]._scene[m]._transform[n].combined.length > 0) {\n                currentObj.setAttribute(\n                  'transform',\n                  animation[i]._scene[m]._transform[n].combined,\n                );\n              }\n              if (animation[i]._scene[m]._transform[n].fillSet) {\n                currentObj.setAttribute(\n                  'fill',\n                  animation[i]._scene[m]._transform[n].fill,\n                );\n              }\n              if (animation[i]._scene[m]._transform[n].strokeWidth > -1) {\n                currentObj.setAttribute(\n                  'stroke-width',\n                  animation[i]._scene[m]._transform[n].strokeWidth,\n                );\n              }\n              currentObjOther.setAttribute(\n                'opacity',\n                animation[i]._scene[m]._transform[n].opacity,\n              );\n              nextObj = true;\n              break;\n            }\n            if (animation[i]._scene[m]._transform[n].hide && animation[i]._scene[m]._transform[n].stageEvent) {\n              document.getElementById(\n                animation[i]._scene[m]._transform[n].stageObj,\n              ).style.display = 'none';\n            }\n            if (animation[i]._scene[m]._transform[n].show && animation[i]._scene[m]._transform[n].stageEvent) {\n              document.getElementById(\n                animation[i]._scene[m]._transform[n].stageObj,\n              ).style.display = 'block';\n            }            \n          }\n        }\n\n        if (nextObj) break;\n      }\n      if (nextObj) break;\n    }\n    //if (nextObj) continue;\n  }\n}\n\nexport function lottiemate() {\n  const currentDate = Date.now();\n  for (let i = 0; i <= animationCount; i++) {\n    if (animation[i]._loaded && currentDate - animation[i]._lastTime >= animation[i]._frameTime) {\n      if (animation[i]._removed || animation[i]._paused) {\n        continue;\n        //return;\n      }\n      if (animation[i]._debugAnimation) {\n        // DEBUG\n        animation[i]._timeElapsed = animation[i]._timeElapsed + (currentDate - animation[i]._lastTime);\n      }\n      animation[i]._lastTime = currentDate;\n      //animation[i]._lastFrame = animation[i]._currentFrame;\n      animation[i]._currentFrame++;\n      if (animation[i]._currentFrame >= animation[i]._totalFrames) {\n        animation[i]._loopCount++;\n        animation[i]._renderObj.dispatchEvent(new CustomEvent(\"onLoopComplete\", {bubbles: true, detail: {\"count\": animation[i]._loopCount, \"animation\": i, \"frame\": animation[i]._currentFrame} }));\n        animation[i]._renderObj.dispatchEvent(new CustomEvent(\"loopComplete\", {bubbles: true, detail: {\"count\": animation[i]._loopCount, \"animation\": i, \"frame\": animation[i]._currentFrame} }));\n        if (!animation[i]._loop) {\n          animation[i]._currentFrame--;\n          animation[i]._paused = true;\n          goToAndStop(animation[i]._currentFrame, '', animation[i]._elementId);\n          continue;   \n          //return;\n        } else {\n          animation[i]._currentFrame = 0;\n        }\n      }\n\n      //setTimeout(function () {\n        for (let j = 0; j < animation[i]._scene[animation[i]._currentFrame]._transform.length; j++) {\n          if (animation[i]._scene[animation[i]._currentFrame]._transform[j].fillSet) {\n            if (animation[i]._scene[animation[i]._currentFrame]._transform[j].isGradient) {\n              const stops = document.getElementById(animation[i]._scene[animation[i]._currentFrame]._transform[j].fillObj).querySelectorAll(\"stop\");\n              for (var m = 0; m < stops.length; m++) {\n                stops[m].setAttribute(\"offset\", animation[i]._scene[animation[i]._currentFrame]._transform[j].offsets[m]);\n                stops[m].setAttribute(\"style\", animation[i]._scene[animation[i]._currentFrame]._transform[j].styles[m]);\n              }\n            } else {\n\n            }\n          } else {\n            if (animation[i]._scene[animation[i]._currentFrame]._transform[j].refObjSet) {\n              const currentObj = document.getElementById(animation[i]._scene[animation[i]._currentFrame]._transform[j].refObj);\n              const currentObjOther = document.getElementById(\n                animation[i]._scene[animation[i]._currentFrame]._transform[j].refObjOther,\n              );\n              if (animation[i]._scene[animation[i]._currentFrame]._transform[j].isTween) {\n                currentObj.setAttribute('d', animation[i]._scene[animation[i]._currentFrame]._transform[j].dataString);\n              }\n              if (animation[i]._scene[animation[i]._currentFrame]._transform[j].combined.length > 0) {\n                currentObj.setAttribute(\n                  'transform',\n                  animation[i]._scene[animation[i]._currentFrame]._transform[j].combined,\n                );\n              }\n              if (animation[i]._scene[animation[i]._currentFrame]._transform[j].fillSet) {\n                currentObj.setAttribute(\n                  'fill',\n                  animation[i]._scene[animation[i]._currentFrame]._transform[j].fill,\n                );\n              }\n              if (animation[i]._scene[animation[i]._currentFrame]._transform[j].strokeWidth > -1) {\n                currentObj.setAttribute(\n                  'stroke-width',\n                  animation[i]._scene[animation[i]._currentFrame]._transform[j].strokeWidth,\n                );\n              }\n              currentObjOther.setAttribute(\n                'opacity',\n                animation[i]._scene[animation[i]._currentFrame]._transform[j].opacity,\n              );\n            }\n            if (animation[i]._scene[animation[i]._currentFrame]._transform[j].hide && animation[i]._scene[animation[i]._currentFrame]._transform[j].stageEvent) {\n              document.getElementById(\n                animation[i]._scene[animation[i]._currentFrame]._transform[j].stageObj,\n              ).style.display = 'none';\n            }\n            if (animation[i]._scene[animation[i]._currentFrame]._transform[j].show && animation[i]._scene[animation[i]._currentFrame]._transform[j].stageEvent) {\n              document.getElementById(\n                animation[i]._scene[animation[i]._currentFrame]._transform[j].stageObj,\n              ).style.display = 'block';\n            }\n          }\n        }\n      //}, 0);\n    }\n    \n    var postRender = Date.now();\n    if (animation[i]._debugAnimation) {\n      // DEBUG\n      var debugDate = Date.now();\n      animation[i]._timeElapsed = animation[i]._timeElapsed + (debugDate - currentDate);\n      //animation[i]._debugObj.innerHTML = `required fps: ${animation[i].fr}, current fps: ${animation[i]._timeElapsed}`;\n      if (animation[i]._timeElapsed >= 2000) {\n        animation[i]._curFPS = (animation[i]._timeElapsed / 2) * animation[i].fr;\n        animation[i]._debugObj.innerHTML = `required fps: ${animation[i].fr}, current fps: ${\n          animation[i]._curFPS / 1000\n        }`;\n        animation[i]._timeElapsed = 0;\n      }\n    }\n      \n  }\n  setTimeout(() => {\n    requestAnimationFrame(lottiemate);\n  }, smallestFrameTime - 16 /* 1 animation frame */ - (postRender - currentDate));\n}\n\n/// ////////// BUILD SCENE GRAPH\nlet lastRefObj;\n\nexport function getEmptyTransform() {\n  const transforms = {};\n  transforms.translateX = 0;\n  transforms.translateY = 0;\n  transforms.scaleFactorX = 0;\n  transforms.scaleFactorY = 0;\n  transforms.rotateAngle = 0;\n  transforms.opacityFactor = 0;\n  transforms.anchorX = 0;\n  transforms.anchorY = 0;\n  transforms.paddingX = 0;\n  transforms.paddingY = 0;\n  transforms.paddingAnchorX = 0;\n  transforms.paddingAnchorY = 0;\n  transforms.isTranslate = false;\n\n  transforms.fillSet = false;\n\n  transforms.dataString = '';\n  transforms.isTween = false;\n  transforms.tweenShape = '';\n  transforms.refObj = '';\n  transforms.combined = '';\n  transforms.refObjOther = '';\n  transforms.refObjSet = false;\n\n  transforms.hide = false;\n  transforms.show = false;\n  transforms.stageEvent = false;\n\n  transforms.translate = '';\n  transforms.rotate = '';\n  transforms.scale = '';\n  transforms.opacity = 1;\n  transforms.inPoint = -1;\n  transforms.outPoint = -1;\n  transforms.isLayer = true;\n  transforms.stageObj = '';\n  transforms.isSet = false;\n\n  // related to strokes\n  transforms.strokeWidth = -1;\n\n  return transforms;\n}\n\nexport function getEmptyFillTransform() {\n  const transforms = {};\n  transforms.fillSet = true;\n  transforms.isGradient = false;\n  transforms.fill = '';\n  transforms.gradientFill = [];\n  transforms.fillObj = '';\n  return transforms;\n}\n\nexport function getEmptyStageTransform() {\n  const transforms = {};\n  transforms.fillSet = false;\n  transforms.stageObj = '';\n  transforms.refObj = '';\n  transforms.hide = false;\n  transforms.show = false;\n  return transforms;\n}\n\nexport function findExistingTransform(transforms, animationId, frame, forFill, getIndex) {\n  let found = 0;\n  if (animation[animationId]._scene[parseInt(frame)] === undefined) {\n    //console.log(frame);\n    if (getIndex) {\n      return -1;\n    }\n    return transforms;\n  }\n  for (let i = 0; i < animation[animationId]._scene[parseInt(frame)]._transform.length; i++) {\n    if (forFill) {\n      if (animation[animationId]._scene[parseInt(frame)]._transform[i].fillObj == transforms.fillObj) {\n        if (getIndex) {\n          return i;\n        }\n        found = 1;\n        break;\n      }\n    } else {\n      if (animation[animationId]._scene[parseInt(frame)]._transform[i].refObj == transforms.refObj) {\n        if (getIndex) {\n          return i;\n        }\n        transforms = animation[animationId]._scene[parseInt(frame)]._transform[i];\n        found = 1;\n        break;\n      }\n    }\n  }\n  return transforms;\n}\n\nexport function updateTransform(transforms, animationId, frame, forFill) {\n  let existing = findExistingTransform(transforms, animationId, frame, forFill, true);\n\n  if (existing == -1) {\n    animation[animationId]._scene[parseInt(frame)]._transform.push(transforms);\n  } else {\n    animation[animationId]._scene[parseInt(frame)]._transform[existing] = transforms;\n  }\n}\n\nexport function stageSequence(animationId, stageObj, inPoint, outPoint) {\n  if (outPoint > animation[animationId]._totalFrames) {\n    outPoint = animation[animationId]._totalFrames;\n  }\n  if (inPoint < 0) {\n    inPoint = 0;\n  }\n  if (inPoint > animation[animationId]._totalFrames) {\n    inPoint = animation[animationId]._totalFrames;\n  }\n  let transforms = getEmptyStageTransform();\n  let found = 0;\n  if (inPoint > -1) {\n    frame = inPoint;\n    for (var i = 0; i < animation[animationId]._scene[parseInt(frame)]._transform.length; i++) {\n      if (animation[animationId]._scene[parseInt(frame)]._transform[i].stageObj == stageObj) {\n        transforms = animation[animationId]._scene[parseInt(frame)]._transform[i];\n        found = 1;\n        break;\n      }\n    }\n    transforms.stageObj = stageObj;\n    transforms.show = true;\n    transforms.stageEvent = true;\n    animation[animationId]._scene[parseInt(frame)]._transform.push(transforms);\n  }\n\n  transforms = getEmptyStageTransform();\n  found = 0;\n  if (outPoint > -1) {\n    frame = outPoint;\n    for (var i = 0; i < animation[animationId]._scene[parseInt(frame)]._transform.length; i++) {\n      if (animation[animationId]._scene[parseInt(frame)]._transform[i].stageObj == stageObj) {\n        transforms = animation[animationId]._scene[parseInt(frame)]._transform[i];\n        found = 1;\n        break;\n      }\n    }\n    transforms.stageObj = stageObj;\n    transforms.hide = true;\n    transforms.stageEvent = true;\n    animation[animationId]._scene[parseInt(frame)]._transform.push(transforms);\n  } else {\n    frame = 0;\n  }\n\n  transforms = getEmptyStageTransform();\n  found = 0;\n  if (outPoint > -1 && inPoint > 0) {\n    frame = 0;\n    for (var i = 0; i < animation[animationId]._scene[parseInt(frame)]._transform.length; i++) {\n      if (animation[animationId]._scene[parseInt(frame)]._transform[i].stageObj == stageObj) {\n        transforms = animation[animationId]._scene[parseInt(frame)]._transform[i];\n        found = 1;\n        break;\n      }\n    }\n    transforms.stageObj = stageObj;\n    transforms.hide = true;\n    transforms.stageEvent = true;\n    animation[animationId]._scene[parseInt(frame)]._transform.push(transforms);\n  }\n\n  let lastState = 0;\n  if (frame > 0) {\n    for (let j = 0; j <= animation[animationId]._totalFrames; j++) {\n      for (var i = 0; i < animation[animationId]._scene[j]._transform.length; i++) {\n        if (animation[animationId]._scene[j]._transform[i].stageObj == stageObj) {\n          if (animation[animationId]._scene[j]._transform[i].show) {\n            lastState = 1;\n          }\n          if (animation[animationId]._scene[j]._transform[i].hide) {\n            lastState = 0;\n          }\n          if (lastState == 1) {\n            animation[animationId]._scene[j]._transform[i].show = true;\n          } else {\n            animation[animationId]._scene[j]._transform[i].hide = true;\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function addGroupPositionTransform(\n  frame,\n  position,\n  isLayer,\n  animationId,\n  refKey,\n  addTransformation,\n  objectId,\n  depth,\n) {\n  if (frame < 0 || addTransformation < 1) {\n    return;\n  }\n  if (frame > animation[animationId]._totalFrames) {\n    return;\n  }\n  let transforms = getEmptyTransform();\n\n  let posX = 0;\n\n  if (isLayer) {\n    if (objectId.hasOwnProperty('_currentLayerGroup')) {\n      //if (objectId._currentLayerGroup._layer > 0) {\n      //console.log('inpoint');\n      if (objectId._currentLayerGroup._inPoint >= 0) {\n        //console.log('inpoint');\n        transforms.inPoint = parseInt(objectId._currentLayerGroup._inPoint);\n      }\n      if (objectId._currentLayerGroup._outPoint > 0) {\n        transforms.outPoint = parseInt(objectId._currentLayerGroup._outPoint);\n      }\n    } else {\n      if (objectId.hasOwnProperty('_currentLayer')) {\n        if (objectId._currentLayer._inPoint >= 0) {\n          //console.log('inpoint');\n          transforms.inPoint = parseInt(objectId._currentLayer._inPoint);\n        }\n        if (objectId._currentLayer._outPoint > 0) {\n          transforms.outPoint = parseInt(objectId._currentLayer._outPoint);\n        }\n      }\n    }\n  } else {\n  }\n\n  if (transforms.inPoint < 0 && transforms.outPoint < 0) {\n    if (frame != transforms.inPoint && frame != transforms.outPoint) {\n      if (Array.isArray(position)) {\n        posX = position[0];\n        if (Number.isNaN(posX)) {\n          return;\n        }\n      } else {\n        posX = position;\n        if (Number.isNaN(posX)) {\n          posX = position[0];\n          if (Number.isNaN(posX)) {\n            return;\n          }\n        }\n      }\n    }\n  }\n\n  if (isLayer) {\n    transforms.isLayer = true;\n    if (objectId.td > 0) {\n      transforms.refObj = `${animationId}_${depth}_layerGroup${objectId._layer}`;\n    } else {\n      transforms.refObj = `${animationId}_${depth}_layerTranslate${objectId._layer}`;\n    }\n    transforms.refObjOther = `${animationId}_${depth}_layerGroup${objectId._layer}`;\n  } else {\n    transforms.isLayer = false;\n    transforms.refObj = `${animationId}_group${animation[animationId]._currentShapeGroup}`;\n    transforms.refObjOther = `${animationId}_group${animation[animationId]._currentShapeGroup}`;\n  }\n\n  transforms.anchorX = objectId._anchorX;\n  transforms.anchorY = objectId._anchorY;\n\n  transforms = findExistingTransform(transforms, animationId, frame);\n\n  if (animation[animationId]._instated.hasOwnProperty(transforms.refObj)) {\n  } else {\n    animation[animationId]._refObj.push(transforms.refObj);\n    animation[animationId]._objSize[transforms.refObj] = [];\n    animation[animationId]._objSize[transforms.refObj][0] = document\n      .getElementById(transforms.refObj)\n      .getBoundingClientRect().width;\n    animation[animationId]._objSize[transforms.refObj][1] = document\n      .getElementById(transforms.refObj)\n      .getBoundingClientRect().height;\n  }\n  const sizeObjFromTransform = animation[animationId]._objSize[transforms.refObj];\n  if (objectId._layer == 3) {\n    debug(() => [\n      'GroupPositionTransform: Layer 3',\n      [sizeObjFromTransform[0], sizeObjFromTransform[1]],\n      [transforms.anchorX, transforms.anchorY],\n    ]);\n  }\n  transforms.refObjSet = true;\n\n  let posY = 0;\n\n  if (refKey == 'r') {\n    transforms.rotateAngle += posX;\n    if (objectId.hasOwnProperty('_anchorX') && objectId.hasOwnProperty('_anchorY')) {\n      transforms.rotate = `rotate(${transforms.rotateAngle},${objectId._anchorX},${objectId._anchorY}) `;\n    } else {\n      transforms.rotate = `rotate(${transforms.rotateAngle},${\n        document.getElementById(transforms.refObj).getBoundingClientRect().width / 2\n      },${document.getElementById(transforms.refObj).getBoundingClientRect().height / 2}) `;\n    }\n  }\n  let tempBoundingW;\n  let tempBoundingH;\n  if (refKey == 's') {\n    transforms.scaleFactorX += posX;\n    tempBoundingW = sizeObjFromTransform[0];\n    tempBoundingH = sizeObjFromTransform[1];\n    let currentScaleX;\n    let currentScaleY;\n    if (position.length > 1) {\n      transforms.scaleFactorY += position[1];\n      currentScaleX = 1 - transforms.scaleFactorX / 100;\n      currentScaleY = 1 - transforms.scaleFactorY / 100;\n    } else {\n      currentScaleX = 1 - transforms.scaleFactorX / 100;\n      currentScaleY = 1 - transforms.scaleFactorX / 100;\n    }\n    transforms.scale = `scale(${transforms.scaleFactorX / 100},${transforms.scaleFactorY / 100}) `;\n    transforms.paddingX = (transforms.anchorX - tempBoundingW) * currentScaleX + tempBoundingW * currentScaleX;\n    transforms.paddingY = (transforms.anchorY - tempBoundingH) * currentScaleY + tempBoundingH * currentScaleY;\n    transforms.paddingAnchorX = transforms.anchorX * currentScaleX;\n    transforms.paddingAnchorY = transforms.anchorY * currentScaleY;\n  }\n  if (refKey == 'p') {\n    posY = position[1];\n    if (objectId.hasOwnProperty('_anchorX')) {\n      transforms.translateX += posX;\n    }\n    if (objectId.hasOwnProperty('_anchorY')) {\n      transforms.translateY += posY;\n    }\n    transforms.translate = `translate(${transforms.translateX - transforms.anchorX},${\n      transforms.translateY - transforms.anchorY\n    }) `;\n    transforms.isTranslate = true;\n  }\n\n  if (!transforms.isTranslate) {\n    transforms.translate = `translate(${transforms.paddingX},${transforms.paddingY}) `;\n    transforms.isTranslate = true;\n  }\n\n  if (refKey == 'o') {\n    transforms.opacityFactor += posX;\n    transforms.opacity = transforms.opacityFactor / 100;\n  }\n\n  transforms.combined = transforms.translate + transforms.scale + transforms.rotate;\n  transforms.isSet = true;\n  animation[animationId]._scene[parseInt(frame)]._transform.push(transforms);\n\n  // Add this transformation head to the root frame if no previous transformations for this refObj exists\n  if (frame > 1) {\n    let foundPrevious = false;\n    for (let i = parseInt(frame) - 1; i > 0; i--) {\n      if (animation[animationId]._scene[i]._transform.refObj == transforms.refObj) {\n        if (animation[animationId]._scene[i]._transform.isTranslate) {\n          foundPrevious = true;\n          break;\n        }\n      }\n    }\n    if (! foundPrevious) {\n      /*for (let i = parseInt(frame) - 1; i > 0; i--) {\n        animation[animationId]._scene[i]._transform.push(transforms);\n      }*/\n    }\n  }\n\n  lastRefObj = transforms.refObj;\n\n  if (animation[animationId]._instated.hasOwnProperty(transforms.refObj)) {\n  } else {\n    animation[animationId]._instated[transforms.refObj] = 1;\n    animation[animationId]._scene[0]._transform.push(transforms);\n  }\n}\n\n/// ////////// PREP JSON\n\nexport function extrapolateValueKeyframe(valueKeyframeObj) {\n  return valueKeyframeObj;\n}\n\nexport function extrapolateOffsetKeyframe(\n  offsetKeyframeObj,\n  refKey,\n  isLayer,\n  animationId,\n  addTransformation,\n  objectId,\n  depth,\n) {\n  let i = 0;\n  let objLength = offsetKeyframeObj[refKey].k.length;\n  let oldLength = objLength;\n  const emptyPos = { x: 0, y: 0 };\n  let p2;\n  let gotI;\n  let gotO;\n\n\n  while (i < objLength - 1) {\n    gotI = true;\n    gotO = true;\n\n    if (offsetKeyframeObj[refKey].k[i].hasOwnProperty('_comp')) {\n    } else {\n      if (addTransformation > -1) {\n        if (offsetKeyframeObj[refKey].k[i].hasOwnProperty('s')) {\n          addGroupPositionTransform(\n            offsetKeyframeObj[refKey].k[i].t,\n            offsetKeyframeObj[refKey].k[i].s,\n            isLayer,\n            animationId,\n            refKey,\n            addTransformation,\n            objectId,\n            depth,\n          );\n        } else {\n          if (offsetKeyframeObj[refKey].k[i].hasOwnProperty('e')) {\n            addGroupPositionTransform(\n              offsetKeyframeObj[refKey].k[i].t,\n              offsetKeyframeObj[refKey].k[i].e,\n              isLayer,\n              animationId,\n              refKey,\n              addTransformation,\n              objectId,\n              depth,\n            );\n          }  \n        }\n      }\n      /*if (offsetKeyframeObj[refKey].k[i].hasOwnProperty('e')) {\n        p2 = offsetKeyframeObj[refKey].k[i].e;\n      } else if (offsetKeyframeObj[refKey].k[i + 1].hasOwnProperty('s')) {\n        p2 = offsetKeyframeObj[refKey].k[i + 1].s;\n      }*/\n      p2 = offsetKeyframeObj[refKey].k[i + 1].s;\n\n      if (offsetKeyframeObj[refKey].k[i + 1].hasOwnProperty('i') && refKey != 'ks' && addTransformation > -1) {\n        if (offsetKeyframeObj[refKey].k[i + 1].i.x < 1) offsetKeyframeObj[refKey].k[i + 1].i.x = 0.0;\n        if (offsetKeyframeObj[refKey].k[i + 1].i.y < 1) offsetKeyframeObj[refKey].k[i + 1].i.y = 0.0;\n      }\n      if (offsetKeyframeObj[refKey].k[i].hasOwnProperty('o') && refKey != 'ks' && addTransformation > -1) {\n        if (offsetKeyframeObj[refKey].k[i].o.x < 1) offsetKeyframeObj[refKey].k[i].o.x = 0.0;\n        if (offsetKeyframeObj[refKey].k[i].o.y < 1) offsetKeyframeObj[refKey].k[i].o.y = 0.0;\n      }\n\n      var returnedKeyframeObj;\n      if (\n        offsetKeyframeObj[refKey].k[i].hasOwnProperty('e') &&\n        offsetKeyframeObj[refKey].k[i].hasOwnProperty('s')\n      ) {\n        returnedKeyframeObj = bezierCurve(\n          offsetKeyframeObj[refKey].k[i].s,\n          offsetKeyframeObj[refKey].k[i].o,\n          offsetKeyframeObj[refKey].k[i].i,\n          offsetKeyframeObj[refKey].k[i].e,\n          offsetKeyframeObj[refKey].k[i].t,\n          offsetKeyframeObj[refKey].k[i + 1].t,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n        );\n      } else if (\n        offsetKeyframeObj[refKey].k[i + 1].hasOwnProperty('i') &&\n        offsetKeyframeObj[refKey].k[i].hasOwnProperty('o') &&\n        gotI\n      ) {\n        returnedKeyframeObj = bezierCurve(\n          offsetKeyframeObj[refKey].k[i].s,\n          offsetKeyframeObj[refKey].k[i].o,\n          offsetKeyframeObj[refKey].k[i + 1].i,\n          p2,\n          offsetKeyframeObj[refKey].k[i].t,\n          offsetKeyframeObj[refKey].k[i + 1].t,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n        );\n      } else if (offsetKeyframeObj[refKey].k[i].hasOwnProperty('o') && gotO) {\n        returnedKeyframeObj = bezierCurve(\n          offsetKeyframeObj[refKey].k[i].s,\n          offsetKeyframeObj[refKey].k[i].o,\n          emptyPos,\n          p2,\n          offsetKeyframeObj[refKey].k[i].t,\n          offsetKeyframeObj[refKey].k[i + 1].t,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n        );\n      } else {\n        returnedKeyframeObj = bezierCurve(\n          offsetKeyframeObj[refKey].k[i].s,\n          emptyPos,\n          emptyPos,\n          p2,\n          offsetKeyframeObj[refKey].k[i].t,\n          offsetKeyframeObj[refKey].k[i + 1].t,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n        );\n      }\n      for (let s = returnedKeyframeObj.length - 1; s >= 0; s--) {\n        offsetKeyframeObj[refKey].k.splice(i + 1, 0, returnedKeyframeObj[s]);\n      }\n\n      objLength = offsetKeyframeObj[refKey].k.length;\n      i += objLength - oldLength;\n      oldLength = objLength;\n    }\n    i += 1;\n  }\n\n  return offsetKeyframeObj;\n}\n\nexport function extrapolatePathPosition(\n  currentObj,\n  parentObj,\n  refKey,\n  isLayer,\n  animationId,\n  addTransformation,\n  objectId,\n  depth,\n) {\n  currentObj[refKey].k = [];\n  if (currentObj[refKey].x.k.length > 1) {\n    currentObj[refKey] = extrapolateOffsetKeyframe(\n      currentObj[refKey],\n      'x',\n      isLayer,\n      animationId,\n      false,\n      objectId,\n      depth,\n    );\n  } else {\n  }\n  if (currentObj[refKey].y.k.length > 1) {\n    currentObj[refKey] = extrapolateOffsetKeyframe(\n      currentObj[refKey],\n      'y',\n      isLayer,\n      animationId,\n      false,\n      objectId,\n      depth,\n    );\n  } else {\n  }\n\n  if (!Array.isArray(currentObj[refKey].x.k)) {\n    for (var i = 0; i < currentObj[refKey].y.k.length; i++) {\n      if (currentObj[refKey].y.k[i].hasOwnProperty('s')) {\n        currentObj[refKey].k.push({\n          i: [0, 0, 0],\n          o: [0, 0, 0],\n          s: [currentObj[refKey].x.k, currentObj[refKey].y.k[i].s[0], 0],\n          t: currentObj[refKey].y.k[i].t,\n        });\n      }\n    }\n\n    /*for (var i = 0; i < currentObj[refKey].k.length; i++) {\n      if (currentObj[refKey].k[i].hasOwnProperty('s')) {\n        addGroupPositionTransform(\n          currentObj[refKey].k[i].t,\n          currentObj[refKey].k[i].s,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n        );\n      } else {\n        if (currentObj[refKey].k[i].hasOwnProperty('e')) {\n          addGroupPositionTransform(\n            currentObj[refKey].k[i].t,\n            currentObj[refKey].k[i].e,\n            isLayer,\n            animationId,\n            refKey,\n            addTransformation,\n            objectId,\n            depth,\n          );\n        }\n      }\n    }\n\n    return currentObj;*/\n  }\n\n  if (!currentObj[refKey].y.k.isArray) {\n    for (var i = 0; i < currentObj[refKey].x.k.length; i++) {\n      if (currentObj[refKey].x.k[i].hasOwnProperty('s')) {\n        currentObj[refKey].k.push({\n          i: [0, 0, 0],\n          o: [0, 0, 0],\n          s: [currentObj[refKey].x.k[i].s[0], currentObj[refKey].y.k, 0],\n          t: currentObj[refKey].x.k[i].t,\n        });\n      }\n    }\n\n    /*for (var i = 0; i < currentObj[refKey].k.length; i++) {\n      if (currentObj[refKey].k[i].hasOwnProperty('s')) {\n        addGroupPositionTransform(\n          currentObj[refKey].k[i].t,\n          currentObj[refKey].k[i].s,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n        );\n      } else {\n        if (currentObj[refKey].k[i].hasOwnProperty('e')) {\n          addGroupPositionTransform(\n            currentObj[refKey].k[i].t,\n            currentObj[refKey].k[i].e,\n            isLayer,\n            animationId,\n            refKey,\n            addTransformation,\n            objectId,\n            depth,\n          );\n        }\n      }\n    }\n\n    return currentObj;*/\n  }\n\n  if (currentObj[refKey].x.k.length > currentObj[refKey].y.k.length) {\n    for (var i = 0; i < currentObj[refKey].x.k.length; i++) {\n      currentObj[refKey].k.push({\n        i: [0, 0, 0],\n        o: [0, 0, 0],\n        s: [currentObj[refKey].x.k[i].s[0], 0, 0],\n        t: currentObj[refKey].x.k[i].t,\n      });\n    }\n    for (var i = 0; i < currentObj[refKey].y.k.length; i++) {\n      if (currentObj[refKey].k[0].t > currentObj[refKey].y.k[i].t) {\n        currentObj[refKey].k.splice(i, 0, {\n          i: [0, 0, 0],\n          o: [0, 0, 0],\n          s: [0, currentObj[refKey].y.k[i].s[0], 0],\n          t: currentObj[refKey].y.k[i].t,\n        });\n      } else if (currentObj[refKey].k[0].t < currentObj[refKey].y.k[i].t) {\n        currentObj[refKey].k.push({\n          i: [0, 0, 0],\n          o: [0, 0, 0],\n          s: [0, currentObj[refKey].y.k[i].s[0], 0],\n          t: currentObj[refKey].y.k[i].t,\n        });\n      } else if (currentObj[refKey].k[0].t == currentObj[refKey].y.k[i].t) {\n        currentObj[refKey].k.s[1] = currentObj[refKey].y.k[i].s[0];\n      }\n    }\n\n    /*for (var i = 0; i < currentObj[refKey].k.length; i++) {\n      if (currentObj[refKey].k[i].hasOwnProperty('s')) {\n        addGroupPositionTransform(\n          currentObj[refKey].k[i].t,\n          currentObj[refKey].k[i].s,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n        );\n      } else {\n        if (currentObj[refKey].k[i].hasOwnProperty('e')) {\n          addGroupPositionTransform(\n            currentObj[refKey].k[i].t,\n            currentObj[refKey].k[i].e,\n            isLayer,\n            animationId,\n            refKey,\n            addTransformation,\n            objectId,\n            depth,\n          );\n        }\n      }\n    }\n\n    return currentObj;*/\n  }\n\n  if (currentObj[refKey].x.k.length < currentObj[refKey].y.k.length) {\n    for (var i = 0; i < currentObj[refKey].y.k.length; i++) {\n      currentObj[refKey].k.push({\n        i: [0, 0, 0],\n        o: [0, 0, 0],\n        s: [0, currentObj[refKey].y.k[i].s[0], 0],\n        t: currentObj[refKey].y.k[i].t,\n      });\n    }\n    for (var i = 0; i < currentObj[refKey].x.k.length; i++) {\n      if (currentObj[refKey].k[0].t > currentObj[refKey].x.k[i].t) {\n        currentObj[refKey].k.splice(i, 0, {\n          i: [0, 0, 0],\n          o: [0, 0, 0],\n          s: [currentObj[refKey].x.k[i].s[0], 0, 0],\n          t: currentObj[refKey].x.k[i].t,\n        });\n      } else if (currentObj[refKey].k[0].t < currentObj[refKey].x.k[i].t) {\n        currentObj[refKey].k.push({\n          i: [0, 0, 0],\n          o: [0, 0, 0],\n          s: [currentObj[refKey].x.k[i].s[0], 0, 0],\n          t: currentObj[refKey].x.k[i].t,\n        });\n      } else if (currentObj[refKey].k[0].t == currentObj[refKey].x.k[i].t) {\n        currentObj[refKey].k.s[0] = currentObj[refKey].x.k[i].s[0];\n      }\n    }\n\n    /*for (var i = 0; i < currentObj[refKey].k.length; i++) {\n      if (currentObj[refKey].k[i].hasOwnProperty('s')) {\n        addGroupPositionTransform(\n          currentObj[refKey].k[i].t,\n          currentObj[refKey].k[i].s,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n        );\n      } else {\n        if (currentObj[refKey].k[i].hasOwnProperty('e')) {\n          addGroupPositionTransform(\n            currentObj[refKey].k[i].t,\n            currentObj[refKey].k[i].e,\n            isLayer,\n            animationId,\n            refKey,\n            addTransformation,\n            objectId,\n            depth,\n          );\n        }\n      }\n    }\n\n    return currentObj;*/\n  }\n\n  for (var i = 0; i < currentObj[refKey].k.length; i++) {\n    if (currentObj[refKey].k[i].hasOwnProperty('s')) {\n      addGroupPositionTransform(\n        currentObj[refKey].k[i].t,\n        currentObj[refKey].k[i].s,\n        isLayer,\n        animationId,\n        refKey,\n        addTransformation,\n        objectId,\n        depth,\n      );\n    } else {\n      if (currentObj[refKey].k[i].hasOwnProperty('e')) {\n        addGroupPositionTransform(\n          currentObj[refKey].k[i].t,\n          currentObj[refKey].k[i].e,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n        );\n      } else {\n        if (currentObj[refKey].k[i - 1].hasOwnProperty('e')) {\n          addGroupPositionTransform(\n            currentObj[refKey].k[i].t,\n            currentObj[refKey].k[i - 1].e,\n            isLayer,\n            animationId,\n            refKey,\n            addTransformation,\n            objectId,\n            depth,\n          );\n        }\n      }\n    }\n  }\n\n  return currentObj;\n}\n\nexport function getPosition(currentObj, parentObj, refKey, isLayer, animationId, addTransformation, objectId, depth) {\n  if (currentObj.hasOwnProperty(refKey)) {\n    if (currentObj[refKey].hasOwnProperty('x') && currentObj[refKey].hasOwnProperty('y')) {\n      currentObj = extrapolatePathPosition(\n        currentObj,\n        parentObj,\n        refKey,\n        isLayer,\n        animationId,\n        addTransformation,\n        objectId,\n        depth,\n      );\n    }\n    if (currentObj[refKey].hasOwnProperty('k')) {\n      if (currentObj[refKey].k.length > 1) {\n        if (currentObj[refKey].k[0].hasOwnProperty('s')) {\n          currentObj = extrapolateOffsetKeyframe(\n            currentObj,\n            refKey,\n            isLayer,\n            animationId,\n            addTransformation,\n            objectId,\n            depth,\n          );\n        }\n      }\n    }\n  }\n  return currentObj;\n}\n\nexport function prepShapeEl(shapeObj, referrer, animationId, addTransformation, depth) {\n  const newShape = document.createElementNS(xmlns, 'ellipse');\n  newShape.setAttribute('cx', shapeObj.p.k[0]);\n  newShape.setAttribute('cy', shapeObj.p.k[1]);\n  newShape.setAttribute('rx', shapeObj.s.k[0]);\n  newShape.setAttribute('ry', shapeObj.s.k[1]);\n  newShape.setAttribute('fill', 'transparent');\n  newShape.setAttribute('id', `${animationId}_shape${shapeObj._shape}`);\n  newShape.classList.add('ellipse');\n  referrer.prepend(newShape);\n  shapeObj._isShape = true;\n  return shapeObj;\n}\n\nexport function prepShapeElKeyframe(shapeObj, referrer, animationId, addTransformation, depth) {\n  return shapeObj;\n}\n\nexport function prepShapeSr(shapeObj, referrer, animationId, addTransformation, depth) {\n  const newShape = document.createElementNS(xmlns, 'path');\n  newShape.setAttribute('d', dataString);\n  newShape.setAttribute('fill', 'transparent');\n  newShape.setAttribute('id', `${animationId}_shape${shapeObj._shape}`);\n  newShape.classList.add('star');\n  referrer.prepend(newShape);\n  shapeObj._isShape = true;\n  return shapeObj;\n}\n\nexport function prepShapeSrKeyframe(shapeObj, referrer, animationId, addTransformation, depth) {\n  return shapeObj;\n}\n\nexport function prepShapeRc(shapeObj, referrer, animationId, addTransformation, depth) {\n  const newShape = document.createElementNS(xmlns, 'rect');\n  newShape.setAttribute('fill', 'transparent');\n\n  newShape.setAttribute('width', shapeObj.s.k[0]);\n  newShape.setAttribute('height', shapeObj.s.k[1]);\n  if (shapeObj.p.k.length > 0) {\n    newShape.setAttribute('x', shapeObj.p.k[0] + shapeObj.s.k[0] / 2);\n    newShape.setAttribute('y', shapeObj.p.k[1] + shapeObj.s.k[1] / 2);\n  }\n  newShape.setAttribute('id', `${animationId}_shape${shapeObj._shape}`);\n  newShape.classList.add('rectangle');\n  referrer.prepend(newShape);\n  shapeObj._isShape = true;\n  return shapeObj;\n}\n\nexport function prepShapeRcKeyframe(shapeObj, referrer, animationId, addTransformation, depth) {\n  return shapeObj;\n}\n\nexport function prepDataString(sourceObject, closed) {\n  var dataString = `M${sourceObject.v[0][0]},${sourceObject.v[0][1]}`;\n  for (var i = 1; i < sourceObject.v.length; i++) {\n    dataString = `${dataString} C${\n      sourceObject.v[i - 1][0] + sourceObject.o[i - 1][0]\n    },${sourceObject.v[i - 1][1] + sourceObject.o[i - 1][1]} ${\n      sourceObject.v[i][0] + sourceObject.i[i][0]\n    },${sourceObject.v[i][1] + sourceObject.i[i][1]} ${\n      sourceObject.v[i][0]\n    },${sourceObject.v[i][1]}`;\n  }\n  if (closed) {\n    dataString = `${dataString} C${\n      sourceObject.v[sourceObject.v.length - 1][0] +\n      sourceObject.o[sourceObject.v.length - 1][0]\n    },${\n      sourceObject.v[sourceObject.v.length - 1][1] +\n      sourceObject.o[sourceObject.v.length - 1][1]\n    } ${sourceObject.v[0][0] + sourceObject.i[0][0]},${\n      sourceObject.v[0][1] + sourceObject.i[0][1]\n    } ${sourceObject.v[0][0]},${sourceObject.v[0][1]}`;\n    dataString += ' Z';\n  }\n\n  return dataString;\n}\n\n\nfunction setDataString(animationId, sourceObj, shapeId, pathClosed, frame, hideThis) {\n  let transforms = getEmptyTransform();\n  transforms.isLayer = false;\n  if (! hideThis) {\n    transforms.isTween = true;\n  }\n  transforms.refObj = `${animationId}_shape${shapeId}`;\n  transforms.refObjOther = `${animationId}_shape${shapeId}`;\n  transforms.refObjSet = true;\n  transforms = findExistingTransform(transforms, animationId, frame);\n  if (hideThis) {\n    transforms.hide = true;\n  } else {\n    transforms.dataString = prepDataString(sourceObj, pathClosed);\n  }\n\n  return transforms;\n}\n\nexport function prepShapeSh(shapeObj, referrer, animationId, addTransformation, depth) {\n  if (shapeObj.ks.k.hasOwnProperty('v')) {\n  } else {\n    if (shapeObj.ks.k[0].hasOwnProperty('s')) {\n      shapeObj = extrapolateOffsetKeyframe(shapeObj, 'ks', false, animationId, -1, shapeObj, depth);\n      var dataString = '';\n      let totalK;\n      if (shapeObj.ks.k[shapeObj.ks.k.length - 1].hasOwnProperty('s')) {\n        totalK = shapeObj.ks.k.length;\n      } else {\n        totalK = shapeObj.ks.k.length - 1;\n      }\n      for (let kCount = 0; kCount < totalK; kCount++) {\n        /*\n        let transforms = getEmptyTransform();\n        transforms.isLayer = false;\n        transforms.isTween = true;\n        transforms.refObj = `${animationId}_shape${shapeObj._shape}`;\n        transforms.refObjOther = `${animationId}_shape${shapeObj._shape}`;\n        transforms.refObjSet = true;\n        transforms = findExistingTransform(transforms, animationId, shapeObj.ks.k[kCount].t);\n        var dataString = `M${shapeObj.ks.k[kCount].s[0].v[0][0]},${shapeObj.ks.k[kCount].s[0].v[0][1]}`;\n        for (var i = 1; i < shapeObj.ks.k[kCount].s[0].v.length; i++) {\n          dataString = `${dataString} C${\n            shapeObj.ks.k[kCount].s[0].v[i - 1][0] + shapeObj.ks.k[kCount].s[0].o[i - 1][0]\n          },${shapeObj.ks.k[kCount].s[0].v[i - 1][1] + shapeObj.ks.k[kCount].s[0].o[i - 1][1]} ${\n            shapeObj.ks.k[kCount].s[0].v[i][0] + shapeObj.ks.k[kCount].s[0].i[i][0]\n          },${shapeObj.ks.k[kCount].s[0].v[i][1] + shapeObj.ks.k[kCount].s[0].i[i][1]} ${\n            shapeObj.ks.k[kCount].s[0].v[i][0]\n          },${shapeObj.ks.k[kCount].s[0].v[i][1]}`;\n        }\n        if (shapeObj.ks.k[0].s[0].c) {\n          dataString = `${dataString} C${\n            shapeObj.ks.k[kCount].s[0].v[shapeObj.ks.k[kCount].s[0].v.length - 1][0] +\n            shapeObj.ks.k[kCount].s[0].o[shapeObj.ks.k[kCount].s[0].v.length - 1][0]\n          },${\n            shapeObj.ks.k[kCount].s[0].v[shapeObj.ks.k[kCount].s[0].v.length - 1][1] +\n            shapeObj.ks.k[kCount].s[0].o[shapeObj.ks.k[kCount].s[0].v.length - 1][1]\n          } ${shapeObj.ks.k[kCount].s[0].v[0][0] + shapeObj.ks.k[kCount].s[0].i[0][0]},${\n            shapeObj.ks.k[kCount].s[0].v[0][1] + shapeObj.ks.k[kCount].s[0].i[0][1]\n          } ${shapeObj.ks.k[kCount].s[0].v[0][0]},${shapeObj.ks.k[kCount].s[0].v[0][1]}`;\n          dataString += ' Z';\n        }\n        */\n\n        let transforms = setDataString(animationId, shapeObj.ks.k[kCount].s[0], shapeObj._shape, shapeObj.ks.k[0].s[0].c, shapeObj.ks.k[kCount].t, false);\n        if (kCount == 0) {\n          var newShape = document.createElementNS(xmlns, 'path');\n          newShape.setAttribute('fill', 'transparent');\n          newShape.setAttribute('id', `${animationId}_shape${shapeObj._shape}`);\n          newShape.setAttribute('d', dataString);\n          newShape.classList.add('shape');\n          referrer.prepend(newShape);\n          shapeObj._isShape = true;\n        }\n\n        if (shapeObj.ks.k[kCount].t > animation[animationId]._totalFrames || shapeObj.ks.k[kCount].t < 0) {\n          break;\n        }\n        animation[animationId]._scene[parseInt(shapeObj.ks.k[kCount].t)]._transform.push(transforms);\n        if (kCount == 0) {\n          animation[animationId]._scene[1]._transform.push(transforms);\n        }\n      }\n    }\n    return shapeObj;\n  }\n\n  var dataString = `M${shapeObj.ks.k.v[0][0]},${shapeObj.ks.k.v[0][1]}`;\n  for (var i = 1; i < shapeObj.ks.k.v.length; i++) {\n    dataString = `${dataString} C${shapeObj.ks.k.v[i - 1][0] + shapeObj.ks.k.o[i - 1][0]},${\n      shapeObj.ks.k.v[i - 1][1] + shapeObj.ks.k.o[i - 1][1]\n    } ${shapeObj.ks.k.v[i][0] + shapeObj.ks.k.i[i][0]},${shapeObj.ks.k.v[i][1] + shapeObj.ks.k.i[i][1]} ${\n      shapeObj.ks.k.v[i][0]\n    },${shapeObj.ks.k.v[i][1]}`;\n  }\n  if (shapeObj.ks.k.c) {\n    dataString = `${dataString} C${\n      shapeObj.ks.k.v[shapeObj.ks.k.v.length - 1][0] + shapeObj.ks.k.o[shapeObj.ks.k.v.length - 1][0]\n    },${shapeObj.ks.k.v[shapeObj.ks.k.v.length - 1][1] + shapeObj.ks.k.o[shapeObj.ks.k.v.length - 1][1]} ${\n      shapeObj.ks.k.v[0][0] + shapeObj.ks.k.i[0][0]\n    },${shapeObj.ks.k.v[0][1] + shapeObj.ks.k.i[0][1]} ${shapeObj.ks.k.v[0][0]},${shapeObj.ks.k.v[0][1]}`;\n    dataString += ' Z';\n  }\n  shapeObj._data = dataString;\n  var newShape = document.createElementNS(xmlns, 'path');\n  newShape.setAttribute('fill', 'transparent');\n  newShape.setAttribute('id', `${animationId}_shape${shapeObj._shape}`);\n  newShape.setAttribute('d', dataString);\n  newShape.classList.add('shape');\n  referrer.prepend(newShape);\n  shapeObj._isShape = true;\n  return shapeObj;\n}\n\nexport function prepShapeShKeyframe(shapeObj, referrer, animationId, depth) {\n  return shapeObj;\n}\n\nexport function prepShape(shapeObj, referrer, animationId, isMasked, depth) {\n  if (shapeObj.ty == 'fl') {\n    if (shapeObj.c.k.hasOwnProperty('s')) {\n      shapeObj = getPosition(shapeObj, null, 'c', false, animationId, 3, shapeObj, depth);\n    }\n  }\n  if (shapeObj.ty == 'tr') {\n    if (shapeObj.hasOwnProperty('a')) {\n      if (shapeObj.a.k.hasOwnProperty('s')) {\n        shapeObj = getPosition(shapeObj, null, 'a', false, animationId, 2, shapeObj, depth);\n        if (shapeObj.a.k[0].t > 0) {\n          shapeObj._startI = true;\n        }\n      }\n      if (shapeObj.a.k.length > 1) {\n        shapeObj._anchorX = shapeObj.a.k[0];\n        shapeObj._anchorY = shapeObj.a.k[1];\n      }\n    }\n    if (shapeObj.hasOwnProperty('p')) {\n      if (shapeObj.p.k.hasOwnProperty('s')) {\n        shapeObj = getPosition(shapeObj, null, 'p', false, animationId, 2, shapeObj, depth);\n        if (shapeObj.p.k[0].t > 0) {\n          shapeObj._startI = true;\n        }\n      }\n    }\n  }\n\n  if (shapeObj.ty == 'sh') {\n    if (shapeObj.hasOwnProperty('ks') && shapeObj.ks.k.length > 1) {\n      shapeObj = prepShapeShKeyframe(shapeObj, referrer, animationId, depth);\n    }\n    shapeObj = prepShapeSh(shapeObj, referrer, animationId, depth);\n  }\n\n  if (shapeObj.ty == 'rc') {\n    if (shapeObj.hasOwnProperty('ks') && shapeObj.ks.k.length > 1) {\n      shapeObj = prepShapeRcKeyframe(shapeObj, referrer, animationId, depth);\n    }\n    shapeObj = prepShapeRc(shapeObj, referrer, animationId, depth);\n  }\n\n  if (shapeObj.ty == 'el') {\n    if (shapeObj.hasOwnProperty('ks') && shapeObj.ks.k.length > 1) {\n      shapeObj = prepShapeRcKeyframe(shapeObj, referrer, animationId, depth);\n    }\n    shapeObj = prepShapeEl(shapeObj, referrer, animationId, depth);\n  }\n\n  return shapeObj;\n}\n\nexport function createGradientDef(start, end, opacity, gradient, radial, animationId, depth) {\n  animation[animationId].gradientCount++;\n  const newDefId = `${animationId}_gradient${animation[animationId].gradientCount}`;\n  var newDef;\n  if (radial == 2) {\n    newDef = document.createElementNS(xmlns, 'radialGradient');\n    if (gradient.k.k[0].hasOwnProperty('s')) {\n      if (!Number.isNaN(start.k[0] != NaN)) {\n        newDef.setAttribute('x1', start.k[0]);\n      }\n      if (!Number.isNaN(end.k[0])) {\n        newDef.setAttribute('x2', end.k[0]);\n      }\n      if (!Number.isNaN(start.k[1])) {\n        newDef.setAttribute('y1', start.k[1]);\n      }\n      if (!Number.isNaN(end.k[1])) {\n        newDef.setAttribute('y2', end.k[1]);\n      }\n    }\n  } else {\n    newDef = document.createElementNS(xmlns, 'linearGradient');\n    if (gradient.k.k[0].hasOwnProperty('s')) {\n      newDef.setAttribute('spreadMethod', 'pad');\n      newDef.setAttribute('gradientUnits', 'userSpaceOnUse');\n      if (!Number.isNaN(start.k[0])) {\n        newDef.setAttribute('x1', start.k[0]);\n      }\n      if (!Number.isNaN(end.k[0])) {\n        newDef.setAttribute('x2', end.k[0]);\n      }\n      if (!Number.isNaN(start.k[1])) {\n        newDef.setAttribute('y1', start.k[1]);\n      }\n      if (!Number.isNaN(end.k[1])) {\n        newDef.setAttribute('y2', end.k[1]);\n      }\n    }\n  }\n  newDef.setAttribute('id', newDefId);\n  animation[animationId].defs.prepend(newDef);\n  if (gradient.k.k[0].hasOwnProperty('s')) {\n    var firstRun = true;\n    gradient = extrapolateOffsetKeyframe(gradient, 'k', false, animationId, -1, gradient, depth);\n    for (var j = 0; j < gradient.k.k.length - 1; j++) {\n      const offsets = [];\n      const styles = [];\n      const opacities = [];\n      var transforms = getEmptyFillTransform();\n      transforms.offsets = [];\n      transforms.styles = [];\n      if (gradient.k.k[j].hasOwnProperty('s')) {\n        for (var i = 0; i < gradient.p; i++) {\n          if (gradient.k.k[j].s[i * 4 + 0] == 0 || isNaN(gradient.k.k[j].s[i * 4 + 0])) {\n            offsets.push(\"0%\");\n          } else {\n            offsets.push(`${gradient.k.k[j].s[i * 4 + 0] * 100}%`);\n          }\n          styles.push(\n            `stop-color:rgb(${parseInt(gradient.k.k[j].s[i * 4 + 1] * 255)},${parseInt(gradient.k.k[j].s[i * 4 + 2] * 255)},${parseInt(\n              gradient.k.k[j].s[i * 4 + 3] * 255,\n            )});`,\n          );\n          opacities.push('stop-opacity:1;');\n        }\n        if (gradient.k.k[j].s.length > gradient.p * 4) {\n          for (var i = 0; i < gradient.p; i++) {\n            opacities[i] = `stop-opacity:${gradient.k.k[j].s[i * 2 + gradient.p * 4 + 1]};`;\n          }\n        }\n        transforms.fillObj = newDefId;\n        for (var i = 0; i < gradient.p; i++) {\n          transforms.offsets.push(offsets[i]);\n          transforms.styles.push(styles[i] + opacities[i]);\n        }\n        transforms.isGradient = true;\n        animation[animationId]._scene[parseInt(gradient.k.k[j].t)]._transform.push(transforms);\n        if (firstRun) {\n          for (var i = 0; i < gradient.p; i++) {\n            const newStop = document.createElementNS(xmlns, 'stop');\n            newStop.setAttribute('offset', offsets[i]);\n            newStop.setAttribute('style', styles[i] + opacities[i]);\n            newDef.append(newStop);\n          }\n          firstRun = false;\n        }\n      }\n    }\n  } else {\n    const offsets = [];\n    const styles = [];\n    const opacities = [];\n    for (var i = 0; i < gradient.p; i++) {\n      if (gradient.k.k[i * 4 + 0] > 0) {\n        offsets.push(`${gradient.k.k[i * 4 + 0] * 100}%`);\n      } else {\n        offsets.push(\"0%\");\n      }\n      styles.push(\n        `stop-color:rgb(${parseInt(gradient.k.k[i * 4 + 1] * 255)},${parseInt(gradient.k.k[i * 4 + 2] * 255)},${parseInt(\n          gradient.k.k[i * 4 + 3] * 255,\n        )});`,\n      );\n      opacities.push('stop-opacity:1;');\n    }\n    if (gradient.k.k.length > gradient.p * 4) {\n      for (var i = 0; i < gradient.p; i++) {\n        opacities[i] = `stop-opacity:${gradient.k.k[i * 2 + gradient.p * 4 + 1]};`;\n      }\n    }\n    for (var i = 0; i < gradient.p; i++) {\n      const newStop = document.createElementNS(xmlns, 'stop');\n      newStop.setAttribute('offset', offsets[i]);\n      newStop.setAttribute('style', styles[i] + opacities[i]);\n      newDef.append(newStop);\n    }\n  }\n\n  return `url(#${newDefId})`;\n}\n\n// Enum for line cap types.\nconst lcEnum = {\n  1: 'butt',\n  2: 'round',\n  3: 'square',\n};\n\n// Enum for line join options.\nconst ljEnum = {\n  1: 'miter',\n  2: 'round',\n  3: 'bevel',\n};\n\n/**\n * Create all the parameters for stroking a shape.\n * \n * @param {JSON} color An object that holds the parameters for the color definition.\n * @param {JSON} opacity An object that holds the opacity parameter.\n * @param {JSON} width An object that describes the width of the stroke.\n * @param {integer} lineCap Enum key that describes the line cap type.\n * @param {integer} lineJoin Enum key that describes the line join type.\n * @param {integer} miterLimit The miter limit parameter.\n * @returns {JSON} strokeString An object that lists all the parameters needed for stroking.\n */\nexport function getStrokeString(shapeObj, animationId, depth, shapeGroup) {\n  const strokeString = {\n    color: '',\n    opacity: 1,\n    width: 1,\n    lineCap: 'round',\n    lineJoin: 'round',\n    miterLimit: 0,\n  };\n\n  strokeString.color = `rgb(${shapeObj.c.k[0] * 255},${shapeObj.c.k[1] * 255},${shapeObj.c.k[2] * 255})`;\n  strokeString.opacity = shapeObj.o.k / 100;\n  if (shapeObj.w.k.length > 1 && shapeObj.w.k[0].hasOwnProperty('s')) {\n    let totalK;\n    shapeObj = extrapolateOffsetKeyframe(shapeObj, 'w', false, animationId, -1, shapeObj, depth);\n    if (shapeObj.w.k[shapeObj.w.k.length - 1].hasOwnProperty('s')) {\n      totalK = shapeObj.w.k.length;\n    } else {\n      totalK = shapeObj.w.k.length - 1;\n    }\n    for (let sCount = 0; sCount < shapeGroup.length; sCount++) {\n      if (shapeGroup[sCount]._isShape) {\n        for (let kCount = 0; kCount < shapeObj.w.k.length; kCount++) {\n          let transforms = getEmptyTransform();\n          transforms.isLayer = false;\n          transforms.isTween = false;\n          transforms.refObj = `${animationId}_shape${shapeGroup[sCount]._shape}`;\n          transforms.refObjOther = `${animationId}_shape${shapeGroup[sCount]._shape}`;\n          transforms.refObjSet = true;\n\n          transforms = findExistingTransform(transforms, animationId, shapeObj.w.k[kCount].t);\n          transforms.strokeWidth = shapeObj.w.k[kCount].s;\n          if (shapeObj.w.k[kCount].t > animation[animationId]._totalFrames || shapeObj.w.k[kCount].t < 0) {\n            break;\n          }\n          animation[animationId]._scene[parseInt(shapeObj.w.k[kCount].t)]._transform.push(transforms);\n        }\n      }\n    }\n    strokeString.width = shapeObj.w.k[0].s;\n  } else {\n    strokeString.width = shapeObj.w.k;\n  }\n  strokeString.lineCap = lcEnum[shapeObj.lc];\n  strokeString.lineJoin = lcEnum[shapeObj.lj];\n  if (strokeString.lineJoin == 1) {\n    strokeString.miterLimit = strokeString.lineJoin;\n  }\n  return strokeString;\n}\n\n/**\n * Generate a color string that conforms to the format for 'color' property defined by SVG 1.1.\n * \n * @param {float} redVal The weight of red color as a fraction of 1.\n * @param {float} greenVal The weight of green color as a fraction of 1.\n * @param {float} blueVal The weight of blue color as a fraction of 1.\n * @returns {string} color A valid color value for the 'color' property defined by SVG 1.1.\n */\nexport function getColorString(redVal, greenVal, blueVal) {\n  const color = `rgb(${redVal * 255},${greenVal * 255},${blueVal * 255})`;\n  return color;\n}\n\n/**\n * Set the stroke for a group of shapes.\n * \n * @param {JSON} shapesGroup An array of shapes.\n * @param {JSON} strokeToSet An object that has the parameters that describe styling for the stroke.\n * @param {integer} animationId The serial number of the current animation.\n * @param {boolean} isGradient If 'true', then this stroke has a gradient shading.\n */\nexport function setShapeStrokes(shapesGroup, strokeToSet, animationId, isGradient) {\n  for (let i = 0; i < shapesGroup.length; i++) {\n    if (shapesGroup[i]._isShape) {\n      document.getElementById(`${animationId}_shape${shapesGroup[i]._shape}`).setAttribute('stroke', strokeToSet.color);\n      document\n        .getElementById(`${animationId}_shape${shapesGroup[i]._shape}`)\n        .setAttribute('stroke-width', strokeToSet.width);\n      document\n        .getElementById(`${animationId}_shape${shapesGroup[i]._shape}`)\n        .setAttribute('stroke-linecap', strokeToSet.lineCap);\n      document\n        .getElementById(`${animationId}_shape${shapesGroup[i]._shape}`)\n        .setAttribute('stroke-linejoin', strokeToSet.lineJoin);\n      document\n        .getElementById(`${animationId}_shape${shapesGroup[i]._shape}`)\n        .setAttribute('stroke-opacity', strokeToSet.opacity);\n      if (strokeToSet.lineJoin == 1) {\n        document\n          .getElementById(`${animationId}_shape${shapesGroup[i]._shape}`)\n          .setAttribute('stroke-miterlimit', strokeToSet.miterLimit);\n      }\n    }\n  }\n}\n\n/**\n * Set the color for a group of shapes.\n * \n * @param {JSON} shapesGroup An array of shapes.\n * @param {string} colorToSet A valid color value for the 'color' property defined by SVG 1.1.\n * @param {integer} animationId The serial number of the current animation.\n * @param {boolean} isGradient If 'true', then the color defintion is for a gradient.\n * @param {boolean} isMasked If 'true', then the color attribute is for a mask.\n */\nexport function setShapeColors(shapesGroup, colorToSet, animationId, isGradient, isMasked) {\n  for (let i = 0; i < shapesGroup.length; i++) {\n    if (shapesGroup[i]._isShape && typeof colorToSet !== 'undefined') {\n      document.getElementById(`${animationId}_shape${shapesGroup[i]._shape}`).setAttribute('fill', colorToSet);\n      document.getElementById(`${animationId}_shape${shapesGroup[i]._shape}`).setAttribute('fill-opacity', 1);\n    }\n  }\n}\n\n\nfunction getTrim(shapeObj, animationId, depth, shapeGroup) {\n  if (shapeObj.e.k.length > 1 && shapeObj.e.k[0].hasOwnProperty('s')) {\n    shapeObj = extrapolateOffsetKeyframe(shapeObj, 'e', false, animationId, -1, shapeObj, depth);\n  }\n  if (shapeObj.s.k.length > 1 && shapeObj.s.k[0].hasOwnProperty('s')) {\n    shapeObj = extrapolateOffsetKeyframe(shapeObj, 's', false, animationId, -1, shapeObj, depth);\n  }\n\n  return shapeObj;\n}\n\n\n\n\nfunction getSegment(p1, c1, c2, p2, t0, t1) {\n  let u0 = 1.0 - t0;\n  let u1 = 1.0 - t1;\n\n  let qxa = (p1[0] * u0 * u0) + ((c1[0] + p1[0]) * 2 * t0 * u0) + ((c2[0] + p2[0]) * t0 * t0);\n  let qxb = (p1[0] * u1 * u1) + ((c1[0] + p1[0]) * 2 * t1 * u1) + ((c2[0] + p2[0]) * t1 * t1);\n  let qxc = ((c1[0] + p1[0]) * u0 * u0) + ((c2[0] + p2[0]) * 2 * t0 * u0) + (p2[0] * t0 * t0);\n  let qxd = ((c1[0] + p1[0]) * u1 * u1) + ((c2[0] + p2[0]) * 2 * t1 * u1) + (p2[0] * t1 * t1);\n\n  let qya = (p1[1] * u0 * u0) + ((c1[1] + p1[1]) * 2 * t0 * u0) + ((c2[1] + p2[1]) * t0 * t0);\n  let qyb = (p1[1] * u1 * u1) + ((c1[1] + p1[1]) * 2 * t1 * u1) + ((c2[1] + p2[1]) * t1 * t1);\n  let qyc = ((c1[1] + p1[1]) * u0 * u0) + ((c2[1] + p2[1]) * 2 * t0 * u0) + (p2[1] * t0 * t0);\n  let qyd = ((c1[1] + p1[1]) * u1 * u1) + ((c2[1] + p2[1]) * 2 * t1 * u1) + (p2[1] * t1 * t1);\n\n  let segment = [];\n  segment.push( [(qxa * u0) + (qxc * t0), (qya * u0) + (qyc * t0)] ); // p1\n  if (p1[0] == p2[0] && c1[0] == c2[0]) {\n    segment[0][0] = p1[0];\n  }\n  if (p1[1] == p2[1] && c1[1] == c2[1]) {\n    segment[0][1] = p1[1];\n  }\n  segment.push( [(qxa * u1) + (qxc * t1), (qya * u1) + (qyc * t1)] ); // c1\n\n  segment.push( [(qxb * u0) + (qxd * t0), (qyb * u0) + (qyd * t0)] ); // c2\n\n  segment.push( [(qxb * u1) + (qxd * t1), (qyb * u1) + (qyd * t1)] ); // p2\n  if (p1[0] == p2[0] && c1[0] == c2[0]) {\n    segment[3][0] = p1[0];\n  }\n  if (p1[1] == p2[1] && c1[1] == c2[1]) {\n    segment[3][1] = p1[1];\n  }\n  segment[1][0] -= segment[0][0];\n  segment[1][1] -= segment[0][1];\n  segment[2][0] -= segment[3][0];\n  segment[2][1] -= segment[3][1];\n\n  return segment;\n}\n\nfunction getLength(animationId, depth, shapesGroup, shapeIdx, startIdx, endIdx, returnedKeyframeObj, fullBezierLength) {\n  let bezierLength = 0;\n  returnedKeyframeObj = bezierCurve(\n    shapesGroup[shapeIdx].ks.k.v[startIdx],\n    shapesGroup[shapeIdx].ks.k.o[startIdx],\n    shapesGroup[shapeIdx].ks.k.i[endIdx],\n    shapesGroup[shapeIdx].ks.k.v[endIdx],\n    1,\n    50,\n    false,\n    animationId,\n    's',\n    -1,\n    shapesGroup[shapeIdx].ks.k,\n    depth,\n    'length',\n  );\n  for (let k = 0; k < returnedKeyframeObj.length - 1; k++) {\n    bezierLength = bezierLength + arcLength(returnedKeyframeObj[k].s, returnedKeyframeObj[k + 1].s);\n    debug(() => [\"blut\", bezierLength]);\n  }\n  bezierLength = bezierLength + arcLength(shapesGroup[shapeIdx].ks.k.v[startIdx], returnedKeyframeObj[0].s);\n  debug(() => [\"blut\", bezierLength]);\n  bezierLength = bezierLength + arcLength(returnedKeyframeObj[returnedKeyframeObj.length - 1].s, shapesGroup[shapeIdx].ks.k.v[endIdx]);\n  fullBezierLength = fullBezierLength + bezierLength;\n  shapesGroup[shapeIdx].ks.k.v[startIdx]._l = bezierLength;\n  return [shapesGroup, returnedKeyframeObj, fullBezierLength];\n}\n\nfunction setTrim(shapesGroup, trimToSet, animationId, depth) {\n  //panda.log(\"entered\");\n  for (let i = 0; i < shapesGroup.length; i++) {\n    if (shapesGroup[i].ty == 'gr') {\n      //panda.log(\"entering group\");\n      setTrim(shapesGroup[i].it, trimToSet, animationId, depth);\n    } else {\n      if (shapesGroup[i]._isShape) {\n        let minShapeT = -1;\n        let fullBezierLength = 0;\n        let returnedKeyframeObj = {};\n        if (shapesGroup[i].ty == 'sh' && shapesGroup[i].ks.k.hasOwnProperty('v') && shapesGroup[i].ks.k.v.length > 1) {\n          debug(() => [\"GLLL\", shapesGroup[i].ks]);\n          for (let j = 0; j < shapesGroup[i].ks.k.v.length - 1; j++) {\n            /*\n            let bezierLength = 0;\n            returnedKeyframeObj = bezierCurve(\n              shapesGroup[i].ks.k.v[j],\n              shapesGroup[i].ks.k.o[j],\n              shapesGroup[i].ks.k.i[j + 1],\n              shapesGroup[i].ks.k.v[j + 1],\n              1,\n              50,\n              false,\n              animationId,\n              's',\n              -1,\n              shapesGroup[i].ks.k,\n              depth,\n              'length',\n            );\n            for (let k = 0; k < returnedKeyframeObj.length - 1; k++) {\n              bezierLength = bezierLength + arcLength(returnedKeyframeObj[k].s, returnedKeyframeObj[k + 1].s);\n              debug(() => [\"blut\", bezierLength]);\n            }\n            bezierLength = bezierLength + arcLength(shapesGroup[i].ks.k.v[j], returnedKeyframeObj[0].s);\n            debug(() => [\"blut\", bezierLength]);\n            bezierLength = bezierLength + arcLength(returnedKeyframeObj[returnedKeyframeObj.length - 1].s, shapesGroup[i].ks.k.v[j + 1]);\n            fullBezierLength = fullBezierLength + bezierLength;\n            shapesGroup[i].ks.k.v[j]._l = bezierLength;\n            debug(() => [\"blut\", bezierLength]);\n            */\n            [shapesGroup, returnedKeyframeObj, fullBezierLength] = \n              getLength(animationId, depth, shapesGroup, i, j, j + 1, returnedKeyframeObj, fullBezierLength)\n            debug(() => [\"GOTL\", returnedKeyframeObj, fullBezierLength]);\n          }\n          if (shapesGroup[i].ks.k.c == true) {\n            [shapesGroup, returnedKeyframeObj, fullBezierLength] = \n              getLength(animationId, depth, shapesGroup, i, shapesGroup[i].ks.k.v.length - 1, 0, returnedKeyframeObj, fullBezierLength)\n          }\n\n          let minT = -1;\n          let maxT = -1;\n          if (trimToSet.s.k.length > 1 && trimToSet.s.k[0].t < minT) {\n            minT = trimToSet.s.k[0].t;\n          }\n          if (minT == -1 && trimToSet.s.k.length > 1) {\n            debug(() => ['set minT', trimToSet.s.k[0].t]);\n            minT = trimToSet.s.k[0].t;\n          }\n          if (trimToSet.s.k.length > 1 && trimToSet.s.k[trimToSet.s.k.length - 1].t > maxT) {\n            maxT = trimToSet.s.k[trimToSet.s.k.length - 1].t;\n          }\n          if (minT == -1 && trimToSet.e.k.length > 1 && trimToSet.e.k[0].t < minT) {\n            minT = trimToSet.e.k[0].t;\n          }\n          if (trimToSet.e.k.length > 1 && trimToSet.e.k[trimToSet.e.k.length - 1].t > maxT) {\n            maxT = trimToSet.e.k[trimToSet.e.k.length - 1].t;\n          }\n\n          if (minT == -1) {\n            if (minT == maxT) {\n              continue;\n            } else {\n              minT = 0;\n            }\n          }\n          //panda.log(\"maxmin \", minT, maxT);\n\n          let sIndex = -1;\n          let eIndex = -1;\n\n          let tempK = Object.assign({}, shapesGroup[i].ks.k);\n          debug(() => ['stuff', minT, maxT, fullBezierLength, tempK, trimToSet]);\n\n          minShapeT = minT;\n          for (let t = minT; t <= maxT; t++) {\n            \n            let curSL = 0;\n            let curEL = 0;\n            let startShapeIndex = -1;\n            let endShapeIndex = -1;\n            let tDelta = 0;\n            let hideThis = false;\n  \n            if (trimToSet.s.k.length > 1 && sIndex < trimToSet.s.k.length - 2 && t >= trimToSet.s.k[0].t) {\n              sIndex++;\n            }\n            if (trimToSet.e.k.length > 1 && eIndex < trimToSet.e.k.length - 2 && t >= trimToSet.e.k[0].t) {\n              eIndex++;\n              //debug(() => ['incr', trimToSet.e.k[eIndex].t, t, eIndex]);\n            }\n            let startSegment = [];\n            let endSegment = [];\n            if (sIndex >= 0 && trimToSet.s.k.length > 1 && trimToSet.s.k[sIndex].t == t && trimToSet.s.k[sIndex].hasOwnProperty('s')) {\n              curSL = fullBezierLength - (fullBezierLength * (trimToSet.s.k[sIndex].s[0]) / 100);\n              debug(() => ['start', t, trimToSet, tempK, curSL]);\n              if (trimToSet.s.k[sIndex].s[0] == 0) {\n                debug(() => ['HIDE']);\n                hideThis = true;\n              }\n              tDelta = trimToSet.s.k[sIndex + 1].t - trimToSet.s.k[sIndex].t;\n              let tSeg = 1 / tDelta;\n              let startIdx;\n              let initIdx = 1;\n              if (shapesGroup[i].ks.k.c == true) {\n                initIdx = 0;\n              }\n              for (let j = initIdx; j < tempK.v.length; j++) {\n                debug(() => ['circling', curSL, tempK.v[startIdx]._l]);\n                if (j == 0) {\n                  startIdx = tempK.v.length - 1;\n                } else {\n                  startIdx = j - 1;\n                }\n                if (curSL < tempK.v[startIdx]._l) {\n                  startShapeIndex = j;\n                  startSegment = getSegment(tempK.v[startIdx], tempK.o[startIdx], tempK.i[j], tempK.v[j], ((tempK.v[startIdx]._l - curSL) / tempK.v[startIdx]._l), 0.999999);\n                  debug(() => ['hup', t, j, tempK.v[j]._l, startSegment, (tempK.i.length - startShapeIndex), tempK, startShapeIndex]);\n                  break;\n                } else {\n                  if (tempK.v[startIdx]._l === undefined) {\n                  } else {\n                    curSL = curSL - tempK.v[startIdx]._l;\n                    if (j == tempK.v.length - 1) {\n                      startShapeIndex = j;\n                    }\n                  }\n                }\n              }\n            }\n\n            if (eIndex >= 0 && trimToSet.e.k.length > 1 && trimToSet.e.k[eIndex].t == t && trimToSet.e.k[eIndex].hasOwnProperty('s')) {\n              debug(() => ['end', t, trimToSet.e.k[eIndex]]);\n              curEL = fullBezierLength - (fullBezierLength * (trimToSet.e.k[eIndex].s[0] / 100));\n              if (trimToSet.e.k[eIndex].s[0] == 0) {\n                hideThis = true;\n              }\n              tDelta = trimToSet.e.k[eIndex + 1].t - trimToSet.e.k[eIndex].t;\n              let tSeg = 1 / tDelta;\n              debug(() => ['delta', t, trimToSet.e.k[eIndex].t, trimToSet.e.k[eIndex + 1].t, fullBezierLength, curEL, tempK]);\n              let endIdx;\n              let initIdx = tempK.v.length - 2;\n              if (shapesGroup[i].ks.k.c == true) {\n                initIdx = tempK.v.length - 1;\n              }\n\n              for (let j = initIdx; j >= 0; j--) {\n                debug(() => ['circling' ]);\n                if (j == tempK.v.length - 1) {\n                  endIdx = 0;\n                } else {\n                  endIdx = j + 1;\n                }\n                if (curEL < tempK.v[j]._l) {\n                  endShapeIndex = j;\n                  endSegment = getSegment(tempK.v[j], tempK.o[j], tempK.i[endIdx], tempK.v[endIdx], 0.000001, ((tempK.v[j]._l - curEL) / tempK.v[j]._l));\n                  debug(() => ['hup', t, j, ((tempK.v[j]._l - curEL) / tempK.v[j]._l), endSegment, (tempK.i.length - endShapeIndex), tempK, endShapeIndex]);\n                  break;\n                } else {\n                  curEL = curEL - tempK.v[j]._l;\n                }\n              }\n            }\n\n            let sourceK = JSON.parse(JSON.stringify(tempK));\n            let startToTrim = sourceK.v.length;\n            if (endShapeIndex >= 0) {\n              startToTrim = startToTrim - (startToTrim - (endShapeIndex));`1`\n              sourceK.o[endShapeIndex] = endSegment[1];\n              sourceK.i.splice(endShapeIndex + 1, ((sourceK.i.length - 1) - endShapeIndex), endSegment[2]);\n              sourceK.o.splice(endShapeIndex + 1, ((sourceK.o.length - 1) - endShapeIndex), [0,0]);\n              sourceK.v.splice(endShapeIndex + 1, ((sourceK.v.length - 1) - endShapeIndex), endSegment[3]);\n              debug(() => ['etempK', sourceK]);\n            }\n\n            if (startShapeIndex >= 0) {\n\n              /*sourceK.i.splice(startShapeIndex - 1, startToTrim - startShapeIndex, [0, 0]);\n              sourceK.o.splice(startShapeIndex - 1, startToTrim - startShapeIndex, startSegment[1]);\n              sourceK.v.splice(startShapeIndex - 1, startToTrim - startShapeIndex, startSegment[0]);*/\n              sourceK.i.splice(0, startShapeIndex, [0, 0]);\n              sourceK.o.splice(0, startShapeIndex, startSegment[1]);\n              sourceK.v.splice(0, startShapeIndex, startSegment[0]);\n              sourceK.i[startShapeIndex] = startSegment[2];\n              debug(() => ['stempK', sourceK]);\n            }\n\n            startShapeIndex = -1;\n            endShapeIndex = -1;\n\n            /*\n            let startInc = false;\n            let middleInc = false;\n            if (trimToSet.s.k.length > 1) {\n              startInc = true;\n              sourceK.i.push(tempK.i[startShapeIndex]);\n              sourceK.o.push(startSegment[1]);\n              sourceK.v.push(startSegment[0]);\n            }\n\n            if (endShapeIndex - startShapeIndex > 0 && startInc) {\n              middleInc = true;\n              for (let j = startShapeIndex + 1; j < endShapeIndex; j++) {\n                sourceK.i.push(tempK.i[j]);\n                sourceK.o.push(tempK.o[j]);\n                sourceK.v.push(tempK.v[j]);\n              }\n            }\n\n            if (trimToSet.e.k.length > 1) {\n              if (! startInc && ! middleInc) {\n                for (let j = startShapeIndex; j < endShapeIndex; j++) {\n                  sourceK.i.push(tempK.i[j]);\n                  sourceK.o.push(tempK.o[j]);\n                  sourceK.v.push(tempK.v[j]);\n                }\n              }\n              sourceK.i.push(tempK.i[endShapeIndex]);\n              sourceK.o.push(endSegment[1]);\n              sourceK.v.push(endSegment[0]);\n            }\n            */\n            let transforms;\n            if (sourceK.v.length > 1 && ! hideThis) {\n              debug(() => ['setString', sourceK, t]);\n              if (shapesGroup[i].ks.k.c && t >= maxT) {\n                transforms = setDataString(animationId, sourceK, shapesGroup[i]._shape, true, t, false);\n              } else {  \n                transforms = setDataString(animationId, sourceK, shapesGroup[i]._shape, false, t, false);\n              }\n              \n              if (t > animation[animationId]._totalFrames || t < 0) {\n                break;\n              }\n              if (t == minT && t >= 0 && trimToSet.s.k.length > 1 && trimToSet.s.k[0].t == t) {\n                debug(() => ['FIRST', sourceK]);\n                for (let n = 0; n < t; n++) {\n                  //animation[animationId]._scene[parseInt(n)]._transform.push(transforms);\n                  updateTransform(transforms, animationId, n);\n                }\n              }\n              animation[animationId]._scene[parseInt(t)]._transform.push(transforms);\n              //updateTransform(transforms, animationId, t);\n            } else {\n              debug(() => ['hideit1', sourceK, t]);\n              \n              if (shapesGroup[i].ks.k.c && t >= maxT) {\n                transforms = setDataString(animationId, sourceK, shapesGroup[i]._shape, true, t, true);\n              } else {\n                transforms = setDataString(animationId, sourceK, shapesGroup[i]._shape, false, t, true);\n              }\n              if (t == minT && t >= 0) {\n                debug(() => ['hideit', sourceK, t]);\n                for (let n = 0; n < t; n++) {\n                  //animation[animationId]._scene[parseInt(n)]._transform.push(transforms);\n                  updateTransform(transforms, animationId, n);\n                  debug(() => ['hiding']);\n                }                \n              }\n              //updateTransform(transforms, animationId, t);\n              animation[animationId]._scene[parseInt(t)]._transform.push(transforms);\n            }\n\n          }\n\n        }\n      }\n    }\n  }\n\n\n\n  /*\n  let tempEnd = {length:{}};\n  let tempStart = {length:{}};\n  tempEnd.length = shapeObj.e;\n  tempStart.length = shapeObj.s;\n  tempEnd = extrapolateOffsetKeyframe(tempEnd, 'length', false, animationId, -1, tempEnd, depth);\n  */\n}\n\n/**\n * Iterate through the shapes in a shape group ('gr') object, prepare the required DOM elements, and trigger the creation of shapes, attributes and transformations.\n * \n * @param {string} elementId The 'id' attribute of the DOMElement 'elementObj'.\n * @param {integer} animationId The serial number of this animation.\n * @param {JSON} layerObj The JSON object whose root to be scoured for shape items.\n * @param {JSON} referrer The JSON object that contained the 'layerObj' passed in here.\n * @param {string} refGroup The 'id' of the <g> that corresponds to the calling JSON object (pointed to by the 'referrer').\n * @param {boolean} isMasked If 'true', then this group of shapes are masked.\n * @param {integer} depth The level of iteration of precompositions (1 if this is the root layers and their corresponding shape groups).\n * @returns \n */\nexport function getShapesGr(elementId, animationId, layerObj, referrer, refLabel, refGroup, isMasked, depth, outer) {\n  let currentColor;\n  let currentStroke;\n  layerObj.currentTrim;\n  let stroked = false;\n  layerObj.trimmed = false;\n  if (outer.trimmed) {\n    layerObj.trimmed = true;\n    layerObj.currentTrim = outer.currentTrim;\n  }\n  for (let i = 0; i < layerObj.it.length; i++) {\n    layerObj._isGradient = false;\n    animation[animationId].shapeCount++;\n    if (layerObj.tt > 0) {\n      isMasked = layerObj.td;\n    }\n    if (layerObj.it[i].ty == 'gr') { // Shape group\n      layerObj.it[i]._group = animation[animationId].shapeCount;\n      const newGroup = document.createElementNS(xmlns, 'g');\n      newGroup.setAttribute('id', `${animationId}_group${animation[animationId].shapeCount}`);\n      animation[animationId]._currentShapeGroup = animation[animationId].shapeCount;\n      referrer.prepend(newGroup);\n      layerObj.it[i] = getShapesGr(\n        elementId,\n        animationId,\n        layerObj.it[i],\n        newGroup,\n        `${animationId}_group${animation[animationId].shapeCount}`,\n        refGroup,\n        isMasked,\n        depth,\n        layerObj,\n      );\n    } else {\n      layerObj.it[i]._shape = animation[animationId].shapeCount;\n      let tempK = JSON.parse(JSON.stringify(layerObj.it[i]));\n\n      //debug(() => ['CO', tempK]);\n      layerObj.it[i] = prepShape(layerObj.it[i], referrer, animationId, isMasked);\n      //debug(() => ['FRICO', layerObj.it[i]]);\n      if (layerObj.it[i].ty == 'tr') { // Transformations\n        layerObj.it[i]._trIndex = i;\n        if (layerObj.it[i].p.hasOwnProperty('k')) {\n          if (layerObj.it[i].p.k.length > 1) {\n            if (layerObj.it[i].hasOwnProperty('a')) {\n              document\n                .getElementById(refLabel)\n                .setAttribute(\n                  'transform',\n                  `translate(${layerObj.it[i].p.k[0] - layerObj.it[i].a.k[0]},${\n                    layerObj.it[i].p.k[1] - layerObj.it[i].a.k[1]\n                  })`,\n                );\n            } else {\n              document\n                .getElementById(refLabel)\n                .setAttribute('transform', `translate(${layerObj.it[i].p.k[0]},${layerObj.it[i].p.k[1]})`);\n            }\n          }\n        }\n      }\n      if (layerObj.it[i].ty == 'fl') { // Fill shape\n        if (layerObj.it[i].c.k.length > 1) {\n          currentColor = getColorString(layerObj.it[i].c.k[0], layerObj.it[i].c.k[1], layerObj.it[i].c.k[2]);\n        }\n      }\n      if (layerObj.it[i].ty == 'st') { // Stroke shape\n        if (layerObj.it[i].c.k.length > 1) {\n          currentStroke = getStrokeString(\n            layerObj.it[i],\n            animationId,\n            depth,\n            layerObj.it,\n          );\n          stroked = true;\n        }\n      }\n      if (layerObj.it[i].ty == 'tm') { // Stroke shape\n        //if (layerObj.it[i].c.k.length > 1) {\n          layerObj.currentTrim = getTrim(\n            layerObj.it[i],\n            animationId,\n            depth,\n            layerObj.it,\n          );\n          //layerObj.it[i] = currentTrim;\n          layerObj.trimmed = true;\n        //}\n      }\n      if (layerObj.it[i].ty == 'gf') { // Gradient fill shape\n        layerObj._isGradient = true;\n        currentColor = createGradientDef(\n          layerObj.it[i].s,\n          layerObj.it[i].e,\n          layerObj.it[i].o,\n          layerObj.it[i].g,\n          layerObj.it[i].r,\n          animationId,\n          depth,\n        );\n      }\n    }\n  }\n  setShapeColors(layerObj.it, currentColor, animationId, layerObj._isGradient, isMasked); // Set the color for this group of shapes.\n  if (stroked) {\n    setShapeStrokes(layerObj.it, currentStroke, animationId); // Set the stroke for this group of shapes.\n  }\n  if (layerObj.trimmed) {\n    debug(() => ['CurrentTrim', layerObj.currentTrim]);\n    setTrim(layerObj.it, layerObj.currentTrim, animationId, depth); // Set the trim for this group of shapes.\n  }\n  return layerObj;\n}\n\n/**\n * Iterate through the shapes in a layer object, prepare the required DOM elements, and trigger the creation of shapes, attributes and transformations.\n * \n * @param {string} elementId The 'id' attribute of the DOMElement 'elementObj'.\n * @param {integer} animationId The serial number of this animation.\n * @param {JSON} layerObj The JSON object whose root to be scoured for shape items.\n * @param {JSON} referrer The JSON object that contained the 'layerObj' passed in here.\n * @param {string} refGroup The 'id' of the <g> that corresponds to the calling JSON object (pointed to by the 'referrer').\n * @param {boolean} isMasked If 'true', then this group of shapes are masked.\n * @param {integer} depth The level of iteration of precompositions (1 if this is the root layers and their corresponding shape groups).\n * @returns \n */\nexport function getShapes(elementId, animationId, layerObj, referrer, refLabel, refGroup, isMasked, depth) {\n  let currentColor;\n  let currentStroke;\n  layerObj.currentTrim = {};\n  let stroked = false;\n  layerObj.trimmed = false;\n  for (let i = 0; i < layerObj.shapes.length; i++) {\n    layerObj._isGradient = false;\n    animation[animationId].shapeCount++;\n    if (layerObj.tt > 0) {\n      isMasked = layerObj.td;\n    }\n    if (layerObj.shapes[i].ty == 'gr') { // Shape group\n      layerObj.shapes[i]._group = animation[animationId].shapeCount;\n      const newGroup = document.createElementNS(xmlns, 'g');\n      newGroup.setAttribute('id', `${animationId}_group${animation[animationId].shapeCount}`);\n      newGroup.setAttribute('opacity', 1);\n      animation[animationId]._currentShapeGroup = animation[animationId].shapeCount;\n      referrer.prepend(newGroup);\n      layerObj.shapes[i] = getShapesGr(\n        elementId,\n        animationId,\n        layerObj.shapes[i],\n        newGroup,\n        `${animationId}_group${animation[animationId].shapeCount}`,\n        refGroup,\n        isMasked,\n        depth,\n        layerObj,\n      );\n\n    } else {\n      layerObj.shapes[i]._shape = animation[animationId].shapeCount;\n\n      //debug(() => ['RICO', layerObj.shapes[i]]);\n      layerObj.shapes[i] = prepShape(layerObj.shapes[i], referrer, animationId, isMasked);\n      //debug(() => ['FRICO', layerObj.shapes[i]]);\n      if (layerObj.shapes[i].ty == 'tr') { // Transformation\n        layerObj.shapes[i]._trIndex = i;\n        if (layerObj.shapes[i].p.hasOwnProperty('k')) {\n          if (layerObj.shapes[i].p.k > 1) {\n            document\n              .getElementById(`${animationId}_${depth}_layerGroup${layerObj._layer}`)\n              .setAttribute('transform', `translate(${layerObj.shapes[i].p.k[0]},${layerObj.shapes[i].p.k[1]})`);\n          }\n        }\n      }\n      if (layerObj.shapes[i].ty == 'fl') { // Fill shape\n        if (layerObj.shapes[i].c.k.length > 1) {\n          currentColor = getColorString(\n            layerObj.shapes[i].c.k[0],\n            layerObj.shapes[i].c.k[1],\n            layerObj.shapes[i].c.k[2],\n          );\n        }\n      }\n      if (layerObj.shapes[i].ty == 'st') { // Stroke shape\n        if (layerObj.shapes[i].c.k.length > 1) {\n          currentStroke = getStrokeString(\n            layerObj.shapes[i],\n            animationId,\n            depth,\n            layerObj.shapes,\n          );\n          stroked = true;\n        }\n      }\n      if (layerObj.shapes[i].ty == 'tm') { // Stroke shape\n        //if (layerObj.shapes[i].c.k.length > 1) {\n          layerObj.currentTrim = getTrim(\n            layerObj.shapes[i],\n            animationId,\n            depth,\n            layerObj.shapes,\n          );\n          //layerObj.shapes[i] = currentTrim;\n          layerObj.trimmed = true;\n        //}\n      }\n      if (layerObj.shapes[i].ty == 'gf') { // Gradient fill shape\n        layerObj._isGradient = true;\n        currentColor = createGradientDef(\n          layerObj.shapes[i].s,\n          layerObj.shapes[i].e,\n          layerObj.shapes[i].o,\n          layerObj.shapes[i].g,\n          layerObj.shapes[i].r,\n          animationId,\n          depth,\n        );\n      }\n    }\n  }\n  setShapeColors(layerObj.shapes, currentColor, animationId, layerObj._isGradient, isMasked); // Set the color for this group of shapes.\n  if (stroked) {\n    setShapeStrokes(layerObj.shapes, currentStroke, animationId); // Set the stroke for this group of shapes.\n  }\n  if (layerObj.trimmed) {\n    debug(() => ['CurrentTrim', layerObj.currentTrim]);\n    setTrim(layerObj.shapes, layerObj.currentTrim, animationId, depth); // Set the trim for this group of shapes.\n  }\n  return layerObj;\n}\n\nexport function findChildren(passedObj) {\n\n}\n\n/**\n * Create forward-linking to children of the layer item passed to this function, and create the child containers within the parent's.\n * \n * @param {integer} animationId The serial number of the current animation.\n * @param {integer} layerId The serial number of the current layer item to be processed.\n * @param {integer} lastMaskId The serial number of the last mask layer that was discovered.\n * @param {JSON} passedObj The JSON object that holds the group of layer items to peruse.\n * @param {string} passedKey The key that describes the array in 'passedObj' that holds a group of layer items.\n * @param {integer} depth An integer that describes the depth of the current layer group (1 for no iterations).\n * @returns \n */\nexport function resolveParents(animationId, layerId, lastMaskId, passedObj, passedKey, depth, level, addArray, passedLevel) {\n  let newGroup;\n  let newTranslateGroup;\n  let newLayer;\n\n  for (let j = 0; j < passedObj[passedKey].length; j++) {\n    if (passedObj[passedKey][j].ind == passedObj[passedKey][layerId].parent) {\n      if (passedObj[passedKey][j].tt > 0) {\n        for (let k = j - 1; k >= 0; k--) {\n          if (passedObj[passedKey][k].td > 0) {\n            passedObj[passedKey][j]._mask = `_${animationId}_${depth}_layerMask${passedObj[passedKey][k].ind}`;\n            passedObj[passedKey][j]._isMasked = true;\n            break;\n          }\n        }\n      }\n      addArray.push({\"item\": layerId, \"level\": passedLevel});\n\n      if (!passedObj[passedKey][j]._addedToDom) {\n        resolveParents(animationId, j, lastMaskId, passedObj, passedKey, depth, level + 1, addArray, passedLevel + 1);\n      }\n      animation[animationId].layerCount++;\n      passedObj[passedKey][layerId]._parent = passedObj[passedKey][j]._layer;\n      passedObj[passedKey][layerId]._parentIdx = j;\n      //if (!passedObj[passedKey][j]._addedToDom) {\n        passedObj[passedKey][layerId].domObj = {}\n        \n        passedObj[passedKey][layerId].domObj.newLayer = document.createElementNS(xmlns, 'g');\n        passedObj[passedKey][layerId].domObj.newLayer.setAttribute('id', `${animationId}_${depth}_layer${passedObj[passedKey][layerId]._layer}`);\n        passedObj[passedKey][layerId].domObj.newLayer.setAttribute('mask', lastMaskId);\n        passedObj[passedKey][layerId].domObj.newLayer.setAttribute('opacity', 1);\n\n        //document\n        //  .getElementById(`${animationId}_${depth}_layerTranslate${passedObj[passedKey][layerId]._parent}`)\n        //  .append(newLayer);\n        //passedObj[passedKey][j].domObj.newTranslateGroup.prepend(newLayer);\n        passedObj[passedKey][layerId].domObj.newTranslateGroup = document.createElementNS(xmlns, 'g');\n        passedObj[passedKey][layerId].domObj.newTranslateGroup.setAttribute(\n          'id',\n          `${animationId}_${depth}_layerTranslate${passedObj[passedKey][layerId]._layer}`,\n        );\n        passedObj[passedKey][layerId].domObj.newTranslateGroup.setAttribute('opacity', 1);\n        passedObj[passedKey][layerId].domObj.newLayer.prepend(newTranslateGroup);\n\n        if (passedObj[passedKey][layerId].w > 0) {\n          passedObj[passedKey][layerId].domObj.newLayer.style.width = passedObj[passedKey][layerId].w;\n        }\n        if (passedObj[passedKey][layerId].h > 0) {\n          passedObj[passedKey][layerId].domObj.newLayer.style.height = passedObj[passedKey][layerId].h;\n        }\n        passedObj[passedKey][layerId].domObj.newGroup = document.createElementNS(xmlns, 'g');\n        passedObj[passedKey][layerId].domObj.newGroup.setAttribute('id', `${animationId}_${depth}_layerGroup${passedObj[passedKey][layerId]._layer}`);\n        passedObj[passedKey][layerId].domObj.newGroup.setAttribute('opacity', 1);\n        passedObj[passedKey][layerId].domObj.newTranslateGroup.prepend(newGroup);\n\n        passedObj[passedKey][layerId]._addedToDom = true;\n        passedObj[passedKey][layerId].domObj.level = level;\n        passedObj[passedKey][layerId].processed = false;\n\n        // Push the child's 'id' into this item's ._child[] and the serial number of the child into ._childId[]\n        passedObj[passedKey][j]._child.push(`_layerGroup${passedObj[passedKey][layerId].parent}`);\n        passedObj[passedKey][j]._childId.push(layerId);\n\n      //}\n\n      return;\n    }\n  }\n}\n\n/**\n * Iterate through the layers of the animation, prepare the scaffolding needed to process the items in each one, and then trigger the respective functions to do the processing.\n * \n * @param {string} elementId The 'id' attribute of the DOMElement 'elementObj'.\n * @param {integer} animationId The serial number of this animation.\n * @param {DOMElement} elementObj The DOMElement describing the first Lottie layer element in the animation.\n * @param {JSON} passedObj The object that has 'layers', shapes group ('gr'), or 'assets'.\n * @param {string} passedKey The name of the array, in 'passedObj', that lists the target layer objects.\n * @param {integer} depth The depth of the current iteration of layer objects.\n * @returns \n */\nexport function getLayers(elementId, animationId, elementObj, passedObj, passedKey, depth) {\n  if (passedObj[passedKey] === undefined || passedObj[passedKey].length < 1) {\n    return;\n  }\n  animation[animationId].depth++;\n  depth = animation[animationId].depth;\n  let newLayer;\n  let newGroup;\n  let newMask;\n  let newTranslateGroup;\n  let posX;\n  let posY;\n  let lastMaskId = '';\n\n  //passedObj.myDepth = depth;\n  //if (depth < 1) {\n    for (var i = 0; i < passedObj[passedKey].length; i++) {\n      if (passedObj[passedKey][i].w > animation[animationId].w) {\n        animation[animationId]._maxWidth = passedObj[passedKey][i].w;\n      }\n      if (passedObj[passedKey][i].h > animation[animationId].h) {\n        animation[animationId]._maxHeight = passedObj[passedKey][i].h;\n      }\n      passedObj.layerCount++;\n      passedObj[passedKey][i]._layer = passedObj[passedKey][i].ind;\n      passedObj[passedKey][i]._child = [];\n      passedObj[passedKey][i]._childId = [];\n      if (passedObj[passedKey][i].parent > 0) {\n      } else {\n        if (passedObj[passedKey][i].td > 0) {\n          passedObj[passedKey][i]._isMask = true;\n          newMask = document.createElementNS(xmlns, 'mask');\n          lastMaskId = `_${animationId}_${depth}_layerMask${passedObj[passedKey][i].ind}`;\n          newMask.setAttribute('id', lastMaskId);\n          newMask.setAttribute('mask-type', 'alpha');\n          newMask.setAttribute('opacity', 1);\n          animation[animationId].defs.prepend(newMask);\n\n          newLayer = document.createElementNS(xmlns, 'g');\n          newLayer.setAttribute('id', `${animationId}_${depth}_layer${passedObj[passedKey][i].ind}`);\n          newLayer.setAttribute('style', 'display: block;');\n          newLayer.setAttribute('opacity', 1);\n          newMask.prepend(newLayer);\n        } else {\n          newLayer = document.createElementNS(xmlns, 'g');\n          newLayer.setAttribute('id', `${animationId}_${depth}_layer${passedObj[passedKey][i].ind}`);\n          newLayer.setAttribute('opacity', 1);\n          elementObj.prepend(newLayer);\n          if (passedObj[passedKey][i].tt > 0) {\n            passedObj[passedKey][i]._mask = lastMaskId;\n            passedObj[passedKey][i]._isMasked = true;\n          }\n        }\n        passedObj[passedKey][i]._addedToDom = true;\n\n        newTranslateGroup = document.createElementNS(xmlns, 'g');\n        newTranslateGroup.setAttribute('id', `${animationId}_${depth}_layerTranslate${passedObj[passedKey][i]._layer}`);\n        newTranslateGroup.setAttribute('opacity', 1);\n        newLayer.prepend(newTranslateGroup);\n        if (passedObj[passedKey][i].w > 0) {\n          newLayer.style.width = passedObj[passedKey][i].w;\n        }\n        if (passedObj[passedKey][i].h > 0) {\n          newLayer.style.height = passedObj[passedKey][i].h;\n        }\n        newGroup = document.createElementNS(xmlns, 'g');\n        newGroup.setAttribute('id', `${animationId}_${depth}_layerGroup${passedObj[passedKey][i]._layer}`);\n        newGroup.setAttribute('opacity', 1);\n        newTranslateGroup.prepend(newGroup);\n\n        passedObj[passedKey][i].processed = true;\n      }\n    }\n\n    let addArray = [];\n    let currentLevel = 1;\n    for (var i = 0; i < passedObj[passedKey].length; i++) {\n      passedObj.layerCount = passedObj[passedKey][i]._layer;\n      if (passedObj[passedKey][i].parent > 0) {\n        for (let j = 0; j < passedObj.layers.length; j++) {\n          if (passedObj[passedKey][j].ind == passedObj[passedKey][i].parent) {\n            if (passedObj[passedKey][i].tt > 0) {\n              for (let k = i - 1; k >= 0; k--) {\n                if (passedObj[passedKey][k].td > 0) {\n                  passedObj[passedKey][i]._mask = `_${animationId}_${depth}_layerMask${passedObj[passedKey][k].ind}`;\n                  break;\n                }\n              }\n            }\n            passedObj.layerCount++;\n            addArray.push({\"item\": i, \"level\": currentLevel});\n\n            if (!passedObj[passedKey][j]._addedToDom) {\n              resolveParents(animationId, j, lastMaskId, passedObj, passedKey, depth, 1, addArray, currentLevel + 1);\n            }\n            passedObj[passedKey][i]._parent = passedObj[passedKey][j]._layer;\n            passedObj[passedKey][i]._parentIdx = j;\n            //if (passedObj[passedKey][i]._addedToDom != true) {\n              passedObj[passedKey][i].domObj = {};\n              passedObj[passedKey][i].domObj.newLayer = document.createElementNS(xmlns, 'g');\n              passedObj[passedKey][i].domObj.newLayer.setAttribute('id', `${animationId}_${depth}_layer${passedObj[passedKey][i]._layer}`);\n              passedObj[passedKey][i].domObj.newLayer.setAttribute('opacity', 1);\n      \n              //document\n              //  .getElementById(`${animationId}_${depth}_layerTranslate${passedObj[passedKey][i]._parent}`)\n              //  .prepend(newLayer);\n              passedObj[passedKey][i].domObj.newTranslateGroup = document.createElementNS(xmlns, 'g');\n              passedObj[passedKey][i].domObj.newTranslateGroup.setAttribute(\n                'id',\n                `${animationId}_${depth}_layerTranslate${passedObj[passedKey][i]._layer}`,\n              );\n              passedObj[passedKey][i].domObj.newTranslateGroup.setAttribute('opacity', 1);\n              //newLayer.prepend(newTranslateGroup);\n              if (passedObj[passedKey][i].w > 0) {\n                passedObj[passedKey][i].domObj.newLayer.style.width = passedObj[passedKey][i].w;\n              }\n              if (passedObj[passedKey][i].h > 0) {\n                passedObj[passedKey][i].domObj.newLayer.style.height = passedObj[passedKey][i].h;\n              }\n              passedObj[passedKey][i].domObj.newGroup = document.createElementNS(xmlns, 'g');\n              passedObj[passedKey][i].domObj.newGroup.setAttribute('id', `${animationId}_${depth}_layerGroup${passedObj[passedKey][i]._layer}`);\n              passedObj[passedKey][i].domObj.newGroup.setAttribute('opacity', 1);\n              //newTranslateGroup.prepend(newGroup);\n\n              passedObj[passedKey][i].domObj.newLayer.prepend(passedObj[passedKey][i].domObj.newTranslateGroup);\n              passedObj[passedKey][i].domObj.newTranslateGroup.prepend(passedObj[passedKey][i].domObj.newGroup);\n              //document\n              //  .getElementById(`${animationId}_${depth}_layerTranslate${passedObj[passedKey][i]._parent}`)\n              //  .prepend(passedObj[passedKey][i].domObj.newLayer);\n\n              passedObj[passedKey][i]._addedToDom = true;\n              passedObj[passedKey][i].domObj.level = 1;\n              passedObj[passedKey][i].processed = false;\n\n              passedObj[passedKey][j]._child.push(`${animationId}_${depth}_layerGroup${passedObj[passedKey][i].parent}`);\n              passedObj[passedKey][j]._childId.push(i);\n\n            //}\n          }\n        }\n      }\n    }\n\n    let itemsThisLevel = 1;\n    let tempLevel = 1;\n    while (itemsThisLevel > 0) {\n      itemsThisLevel = 0;\n      let tempArray = [];\n      for (let j = 0; j < addArray.length; j++) {\n        if (addArray[j].level == tempLevel) {\n          tempArray.push(addArray[j].item);\n          itemsThisLevel++;\n        }\n      }\n      tempLevel++;\n      tempArray.sort(function(a, b){return a-b});\n      \n      /*\n      let tempHalf1 = [];\n      let tempHalf2 = [];\n      for (let i = 0; i < tempArray.length; i++) {\n        if (passedObj[passedKey][tempArray[i]].ind <= passedObj[passedKey][passedObj[passedKey][tempArray[i]]._parentIdx].ind) {\n          tempHalf1.push(tempArray[i]);\n        } else {\n          tempHalf2.push(tempArray[i]);\n        }\n      }\n      tempHalf2.sort(function(a, b){return b-a});\n      tempArray = [];\n      tempArray = tempArray.concat(tempHalf1, tempHalf2);\n      //tempArray.concat(tempHalf2);\n      */\n      \n      if (itemsThisLevel > 0) {\n        tempArray.forEach(i => {\n            if (passedObj[passedKey][passedObj[passedKey][i]._parentIdx].hasOwnProperty('domObj')) {\n              if (passedObj[passedKey][i].ind > passedObj[passedKey][passedObj[passedKey][i]._parentIdx].ind) {\n                passedObj[passedKey][passedObj[passedKey][i]._parentIdx].domObj.newTranslateGroup.prepend(passedObj[passedKey][i].domObj.newLayer);\n              } else {\n                passedObj[passedKey][passedObj[passedKey][i]._parentIdx].domObj.newTranslateGroup.append(passedObj[passedKey][i].domObj.newLayer);\n              }\n            } else {\n              if (passedObj[passedKey][i].ind >= passedObj[passedKey][i]._parent) {\n                document\n                  .getElementById(`${animationId}_${depth}_layerTranslate${passedObj[passedKey][i]._parent}`)\n                  .prepend(passedObj[passedKey][i].domObj.newLayer);\n              } else {\n                document\n                  .getElementById(`${animationId}_${depth}_layerTranslate${passedObj[passedKey][i]._parent}`)\n                  .append(passedObj[passedKey][i].domObj.newLayer);\n              }\n            }\n          }\n        );\n      }\n    }\n\n    for (var i = 0; i < passedObj[passedKey].length; i++) {\n      if (passedObj[passedKey][i].hasOwnProperty('domObj')) {\n        delete passedObj[passedKey][i].domObj;\n      }\n    }\n\n  //}\n\n\n  for (var i = 0; i < passedObj.layers.length; i++) {\n    passedObj[passedKey][i]._inPoint = -1;\n    passedObj[passedKey][i]._outPoint = -1;\n    if (passedObj[passedKey][i].hasOwnProperty('ip') && passedObj[passedKey][i].ip >= 0) {\n      passedObj[passedKey][i]._inPoint = passedObj[passedKey][i].ip;\n    }\n    if (passedObj[passedKey][i].hasOwnProperty('op') && passedObj[passedKey][i].op > 0) {\n      passedObj[passedKey][i]._outPoint = passedObj[passedKey][i].op;\n      if (passedObj[passedKey][i]._outPoint > passedObj._totalFrames) {\n        passedObj[passedKey][i]._outPoint = passedObj._totalFrames;\n      }\n    } else {\n      passedObj[passedKey][i]._outPoint = passedObj._totalFrames;\n    }\n    stageSequence(\n      animationId,\n      `${animationId}_${depth}_layerGroup${passedObj[passedKey][i]._layer}`,\n      passedObj[passedKey][i]._inPoint,\n      passedObj[passedKey][i]._outPoint,\n    );\n\n    passedObj.layerCount = passedObj[passedKey][i]._layer;\n    newLayer = document.getElementById(`${animationId}_${depth}_layer${passedObj[passedKey][i]._layer}`);\n    newGroup = document.getElementById(`${animationId}_${depth}_layerGroup${passedObj[passedKey][i]._layer}`);\n    if (passedObj[passedKey][i].tt > 0) {\n      document\n        .getElementById(`${animationId}_${depth}_layer${passedObj[passedKey][i]._layer}`)\n        .setAttribute('mask', `url(#${passedObj[passedKey][i]._mask})`);\n      document\n        .getElementById(`${animationId}_${depth}_layer${passedObj[passedKey][i]._layer}`)\n        .setAttribute('style', 'display: block;');\n    }\n    passedObj._currentLayer = { _layer: '', _inPoint: '', _outPoint: '' };\n    //passedObj._currentLayer = passedObj[passedKey][i]._layer;\n    passedObj._currentLayer._layer = passedObj[passedKey][i]._layer;\n    passedObj._currentLayer._inPoint = passedObj[passedKey][i]._inPoint;\n    passedObj._currentLayer._outPoint = passedObj[passedKey][i]._outPoint;\n    if (passedObj[passedKey][i].hasOwnProperty('refId')) {\n      let tempRef = -1;\n      for (let m = 0; m < animation[animationId].assets.length; m++) {\n        if (typeof animation[animationId].assets[m] != 'undefined' && animation[animationId].assets[m].id == passedObj[passedKey][i].refId) {\n          tempRef = m;\n          break;\n        }\n      }\n      if (tempRef >= 0) {\n        var tempDepth = depth;\n        animation[animationId].assets[tempRef] = getLayers(\n          elementId,\n          animationId,\n          newGroup,\n          animation[animationId].assets[tempRef],\n          'layers',\n          depth,\n        );\n        //animation[animationId].depth--;\n        depth = tempDepth;\n      }\n    }\n\n    if (passedObj[passedKey][i].hasOwnProperty('shapes')) {\n      passedObj._currentLayerGroup = { _layer: 0, _inPoint: '', _outPoint: '' };\n      //passedObj._currentLayerGroup = passedObj[passedKey][i]._layer;\n      passedObj._currentLayerGroup._layer = passedObj[passedKey][i]._layer;\n      passedObj._currentLayerGroup._inPoint = passedObj[passedKey][i]._inPoint;\n      passedObj._currentLayerGroup._outPoint = passedObj[passedKey][i]._outPoint;\n      passedObj[passedKey][i] = getShapes(\n        elementId,\n        animationId,\n        passedObj[passedKey][i],\n        newGroup,\n        `${animationId}_${depth}_layerGroup${passedObj[passedKey][i]._layer}`,\n        false,\n        passedObj[passedKey][i].td,\n        depth,\n      );\n      if (passedObj[passedKey][i].hasOwnProperty('shapes')) {\n        passedObj._boundingX = newGroup.getBoundingClientRect().width / 2;\n        passedObj._boundingY = newGroup.getBoundingClientRect().height / 2;\n      }\n    } else if (passedObj[passedKey][i]._inPoint > 0) {\n      // console.log(\"layer: \" + i);\n      // newLayer.style.display = 'none';\n    }\n\n    if (passedObj[passedKey][i].hasOwnProperty('ks')) {\n      if (passedObj[passedKey][i].ks.hasOwnProperty('a')) {\n        if (passedObj[passedKey][i].ks.a.hasOwnProperty('k')) {\n          if (passedObj[passedKey][i].ks.a.k.length > 1) {\n            passedObj[passedKey][i]._anchorX = passedObj[passedKey][i].ks.a.k[0];\n            passedObj[passedKey][i]._anchorY = passedObj[passedKey][i].ks.a.k[1];\n          }\n        }\n      }\n\n      if (passedObj[passedKey][i].ks.hasOwnProperty('p')) {\n        passedObj[passedKey][i].ks = getPosition(\n          passedObj[passedKey][i].ks,\n          null,\n          'p',\n          true,\n          animationId,\n          1,\n          passedObj[passedKey][i],\n          depth,\n        );\n        if (passedObj[passedKey][i].ks.p.hasOwnProperty('k')) {\n          if (passedObj[passedKey][i].ks.p.k.length > 1) {\n            if (passedObj[passedKey][i].ks.p.k[0].hasOwnProperty('s')) {\n            } else {\n              if (passedObj[passedKey][i]._anchorX != 0) {\n                posX = passedObj[passedKey][i].ks.p.k[0] - passedObj[passedKey][i]._anchorX;\n              } else {\n                posX = passedObj[passedKey][i].ks.p.k[0]; // passedObj._boundingX;\n              }\n              if (passedObj[passedKey][i]._anchorY != 0) {\n                posY = passedObj[passedKey][i].ks.p.k[1] - passedObj[passedKey][i]._anchorY;\n              } else {\n                posY = passedObj[passedKey][i].ks.p.k[1]; // passedObj._boundingY;\n              }\n              if (passedObj[passedKey][i].td > 0) {\n                document\n                  .getElementById(`${animationId}_${depth}_layerGroup${passedObj[passedKey][i]._layer}`)\n                  .setAttribute('transform', `translate(${posX},${posY})`);\n                  //.setAttribute('transform', `matrix(1,0,0,1,${posX},${posY})`);\n              } else {\n                document\n                  .getElementById(`${animationId}_${depth}_layer${passedObj[passedKey][i]._layer}`)\n                  .setAttribute('transform', `translate(${posX},${posY})`);\n                  //.setAttribute('transform', `matrix(1,0,0,1,${posX},${posY})`);\n              }\n              passedObj[passedKey][i]._posX = posX;\n              passedObj[passedKey][i]._posY = posY;\n            }\n          }\n        }\n      }\n\n      if (passedObj[passedKey][i].ks.hasOwnProperty('r')) {\n        if (passedObj[passedKey][i].ks.r.k.length > 1) {\n          if (passedObj[passedKey][i].ks.r.k[0].hasOwnProperty('s')) {\n            passedObj[passedKey][i].ks = getPosition(\n              passedObj[passedKey][i].ks,\n              null,\n              'r',\n              true,\n              animationId,\n              1,\n              passedObj[passedKey][i],\n              depth,\n            );\n          }\n        }\n      }\n      if (passedObj[passedKey][i].ks.hasOwnProperty('s')) {\n        if (passedObj[passedKey][i].ks.s.k.length > 1) {\n          if (passedObj[passedKey][i].ks.s.k[0].hasOwnProperty('s')) {\n            passedObj[passedKey][i].ks = getPosition(\n              passedObj[passedKey][i].ks,\n              null,\n              's',\n              true,\n              animationId,\n              1,\n              passedObj[passedKey][i],\n              depth,\n            );\n          }\n        }\n      }\n      if (passedObj[passedKey][i].ks.hasOwnProperty('o')) {\n        if (passedObj[passedKey][i].ks.o.k.length > 1) {\n          if (passedObj[passedKey][i].ks.o.k[0].hasOwnProperty('s')) {\n            passedObj[passedKey][i].ks = getPosition(\n              passedObj[passedKey][i].ks,\n              null,\n              'o',\n              true,\n              animationId,\n              1,\n              passedObj[passedKey][i],\n              depth,\n            );\n          }\n        }\n      }\n    }\n  }\n  return passedObj;\n}\n\n/**\n * Scale layer objects relative to the animation window size - needed because some layers have much bigger defined window dimensions.\n * \n * @param {string} elementId The 'id' attribute of the DOMElement 'elementObj'.\n * @param {integer} animationId The serial number of this animation.\n * @param {DOMElement} elementObj The DOMElement describing the first Lottie layer element in the animation.\n * @param {JSON} passedObj The object that has 'layers', shapes group ('gr'), or 'assets'.\n * @param {string} passedKey The name of the array, in 'passedObj', that lists the target layer objects.\n * @param {integer} depth The depth of the current iteration of layer objects.\n */\nexport function scaleLayers(elementId, animationId, elementObj, passedObj, passedKey, depth) {\n  var currentObj;\n  //alert(animation[animationId].currScale);\n  for (var i = 0; i < passedObj[passedKey].length; i++) {\n    if (passedObj[passedKey][i].parent > 0) {\n    } else {\n      if (passedObj[passedKey][i].td > 0) {\n      } else {\n        if (passedObj[passedKey][i].hasOwnProperty(\"parent\")) {\n        } else {\n          //alert(animationId + \"_\" + depth + \"_layer\" + passedObj[passedKey][i]._layer);\n          currentObj = document.getElementById(animationId + \"_\" + depth + \"_layer\" + passedObj[passedKey][i]._layer);\n          //currentObj.setAttributeNS(null, 'viewBox', `0 0 ${animation[animationId]._maxWidth} ${animation[animationId]._maxHeight}`);\n          currentObj.setAttribute(\"transform\", \"scale(\" + animation[animationId]._currScale + \")\");\n        }\n      }\n    }\n  }\n}\n\n/**\n * Initializes all the parameters for animation[animationId], which will contain the scene graph for this Lottie animation, before and after calling getLayers().\n * \n * @param {*} elementId The 'id' attribute of the DOMElement 'elementObj'.\n * @param {*} animationId The serial number of this animation.\n * @param {*} elementObj The DOMElement in which the animation should be rendered.\n * @param {*} autoplay If 'true', then start playing the animation upon being loaded.\n * @param {*} loop If 'true', then the animation keeps looping.\n * @param {*} customName A custom name given to this Lottie animation - for future use.\n */\nexport function buildGraph(elementId, animationId, elementObj, autoplay, loop, customName) {\n  animation[animationId]._loaded = false;\n  animation[animationId]._renderObj = elementObj;\n  try {\n    animation[animationId].depth = 0;\n    animation[animationId].shapeCount = 0;\n    animation[animationId].layerCount = 0;\n    animation[animationId]._removed = false;\n    animation[animationId]._totalFrames = parseInt(animation[animationId].op - animation[animationId].ip);\n    animation[animationId]._frameTime = (1 / animation[animationId].fr) * 1000;\n    animation[animationId]._currentFrame = -1;\n    animation[animationId]._lastTime = Date.now();\n    animation[animationId]._autoplay = autoplay;\n    animation[animationId]._loop = loop;\n    animation[animationId]._customName = customName;\n    if (autoplay) {\n      animation[animationId]._paused = false;\n    } else {\n      animation[animationId]._paused = true;\n    }\n    animation[animationId]._maxWidth = 0;\n    animation[animationId]._maxHeight = 0;\n    animation[animationId]._skewW = 0;\n    animation[animationId]._skewH = 0;\n    animation[animationId]._currScale = 1;\n    animation[animationId]._lastFrame = 0;\n    animation[animationId]._loopCount = 0;\n    //animation[animationId]._nextInterval = animation[animationId]._frameTime;\n    //animation[animationId]._timeout = 0;\n\n    if (smallestFrameTime > animation[animationId]._frameTime) {\n      smallestFrameTime = animation[animationId]._frameTime;\n    }\n\n    //for debugging\n    animation[animationId]._debugTimeElapsed = 0;\n    animation[animationId]._debugContainer = '';\n    //////\n\n    //elementObj.style.width = animation[animationId].w;\n    //elementObj.style.height = animation[animationId].h;\n    //elementObj.setAttribute('width', animation[animationId].w);\n    //elementObj.setAttribute('height', animation[animationId].h);\n\n    const newSVG = document.createElementNS(xmlns, 'svg');\n    newSVG.setAttribute('xmlns', xmlns);\n    // newSVG.setAttributeNS(null, 'width', animation[animationId].w);\n    // newSVG.setAttributeNS(null, 'height', animation[animationId].h);\n    newSVG.setAttributeNS(null, 'viewBox', `0 0 ${animation[animationId].w} ${animation[animationId].h}`);\n    newSVG.setAttributeNS(null, 'preserveAspectRatio', 'xMidYMid meet');\n    newSVG.style.contain = 'strict';\n    newSVG.style.width = '100%';\n    newSVG.style.height = '100%';\n    newSVG.setAttributeNS(null, 'id', `_svg${animationId}`);\n    elementObj.prepend(newSVG);\n\n    animation[animationId].defs = document.createElementNS(xmlns, 'defs');\n    animation[animationId].defs.setAttributeNS(null, 'id', `_defs${animationId}`);\n    animation[animationId].gradientCount = 0;\n    animation[animationId].maskCount = 0;\n    newSVG.prepend(animation[animationId].defs);\n\n    const newLayer = document.createElementNS(xmlns, 'g');\n    newLayer.setAttributeNS(null, 'id', `_lanim${animationId}`);\n    newSVG.append(newLayer);\n\n    const newCompute = document.createElementNS(xmlns, 'g');\n    newCompute.setAttributeNS(null, 'id', `_compute${animationId}`);\n    newCompute.style.display = 'none';\n    newLayer.prepend(newCompute);\n\n    animation[animationId]._scene = new Array(animation[animationId]._totalFrames + 10)\n      .fill(null)\n      .map(() => ({ _transform: [] }));\n    animation[animationId]._instated = {};\n    animation[animationId]._refObj = [];\n    animation[animationId]._objSize = {};\n\n    const clipPath = document.createElementNS(xmlns, 'clipPath');\n    clipPath.setAttributeNS(null, 'id', `_clip${animationId}`);\n    animation[animationId].defs.prepend(clipPath);\n    const clipPathRect = document.createElementNS(xmlns, 'rect');\n    clipPathRect.setAttribute('x', 0);\n    clipPathRect.setAttribute('y', 0);\n    clipPathRect.setAttribute('width', animation[animationId].w);\n    clipPathRect.setAttribute('height', animation[animationId].h);\n    clipPath.append(clipPathRect);\n\n    animation[animationId] = getLayers(elementId, animationId, newLayer, animation[animationId], 'layers', 0);\n\n    if (animation[animationId]._maxWidth > 0 || animation[animationId]._maxHeight > 0) {\n      var scaleW = animation[animationId].w / animation[animationId]._maxWidth;\n      var scaleH = animation[animationId].h / animation[animationId]._maxHeight;\n      //animation[animationId]._skewW = animation[animationId]\n\n      //clipPathRect.setAttribute('x', 0);\n      //clipPathRect.setAttribute('y', 0);\n      //clipPathRect.setAttribute('width', animation[animationId]._maxWidth);\n      //clipPathRect.setAttribute('height', animation[animationId]._maxHeight);\n    \n      if (scaleW > scaleH) {\n        animation[animationId]._currScale = scaleW;\n      } else {\n        animation[animationId]._currScale = scaleH;\n      }\n\n      //newSVG.setAttributeNS(null, 'viewBox', `0 0 ${animation[animationId]._maxWidth} ${animation[animationId]._maxHeight}`);\n\n      //newLayer.setAttribute(\"transform\", \"scale(\" + animation[animationId]._currScale + \")\");\n\n      scaleLayers(elementId, animationId, newLayer, animation[animationId], 'layers', 1);\n    }\n\n    newLayer.setAttributeNS(null, 'clip-path', `url(#_clip${animationId})`);\n    animation[animationId]._buildDone = true;\n    animationLoading -= 1;\n    animation[animationId]._loaded = true;\n    if (!animation[animationId]._autoplay) {\n      goToAndStop(1, '', animation[animationId]._elementId);\n    } else {\n      loadFrame(animationId, 1);\n    }\n    animation[animationId]._renderObj.dispatchEvent(new CustomEvent(\"DOMLoaded\", {bubbles: true, detail:{\"animation\": animationId} }));\n  } catch (e) {\n\t\t//console.error(`Failed to load animation.${e}`);\n\t\t//elementObj.style.height = 0;\n\t\t//elementObj.style.width = 0;\n    animation[animationId]._renderObj.dispatchEvent(new CustomEvent(\"onLoadError\", {bubbles: true, detail:{\"error\": e, \"animation\": animationId} }));\n    animation[animationId]._renderObj.dispatchEvent(new CustomEvent(\"loadError\", {bubbles: true, detail:{\"error\": e, \"animation\": animationId} }));\n\t\tanimationCount = animationCount - 1;\n\t\telementObj.innerHTML = e;\n\t\tanimation.splice(animationId, 1);\n\t}\n}\n\n/**\n * Load a Lottie JSON file from a URL and then pass to buildGraph().\n * \n * @param {string} src A URL that points to a Lottie JSON file.\n * @param {DOMElement} domElement The DOMElement object in which the Lottie animation will be animated.\n * @param {string} elementId The 'id' of the DOMElement pointed to by 'domElement'.\n * @param {boolean} _autoplay If 'true', then start playing the animation upon being loaded.\n * @param {boolean} _loop If 'true', then the animation keeps looping.\n * @param {boolean} _debugAnimation If 'true', then display debug information.\n * @param {DOMElement} _debugContainer The DOMElement in which debug information is to be displayed.\n */\nexport function getJson(\n  src,\n  domElement,\n  elementId,\n  _autoplay,\n  _loop,\n  _debugAnimation,\n  _debugContainer,\n  animationId\n) {\n  const http = new XMLHttpRequest();\n  http.withCredentials = false;\n  http.open('GET', src, true);\n  //http.setRequestHeader('Access-Control-Allow-Origin', '*');\n  http.onreadystatechange = function () {\n    if (http.readyState == 4 && http.status == 200) {\n      let received = http.responseText;\n      if (received.search(/(^(\"|'))|((\"|')$)/g) > -1) {\n        received = received.replace(/(^(\"|'))|((\"|')$)/g, \"\");\n        received = received.replace(/\\\\\"/g, '\"');\n      }\n      //animationCount += 1;\n      //const currentAnimation = animationCount;\n      const currentAnimation = animationId;\n      animation[currentAnimation] = JSON.parse(received);\n      animation[currentAnimation]._elementId = elementId;\n\n      if (_debugAnimation && typeof _debugContainer === 'object') {\n        animation[currentAnimation]._debugAnimation = _debugAnimation;\n        animation[currentAnimation]._debugContainer = _debugContainer;\n        animation[currentAnimation]._curFPS = 0;\n        animation[currentAnimation]._timeElapsed = 0;\n        animation[currentAnimation]._debugObj = document.createElement('div');\n        animation[currentAnimation]._debugObj.setAttribute('id', `__dbg__${currentAnimation}`);\n        animation[currentAnimation]._debugObj.style.display = 'block';\n        _debugContainer.prepend(animation[currentAnimation]._debugObj);\n      }\n\n      buildGraph(elementId, currentAnimation, domElement, _autoplay, _loop);\n    }\n  };\n  http.send();\n}\n\n/// ////////// CONTROL\n\n// var animationManager = (function () {\nconst jlottie = {};\n\n/**\n * Destroys and unloads the animation indicated by 'name'.\n * \n * @param {string} name The 'id' value of the container of this Lottie animation.\n */\nexport function destroy(name) {\n  if (animationCount < 0) {\n    return;\n  }\n  if (name === undefined) {\n    return;\n    /*const elements = [];\n    for (var i = 0; i <= animationCount; i++) {\n      elements.push(animation[i]._elementId);\n    }\n    animation = [];\n    for (var i = 0; i <= elements; i++) {\n      document.getElementById(elements[i]).innerHTML = '';\n      animationCount -= 1;\n    }*/\n  } else {\n    name.toString();\n    name = name.replace(/#/g, '');\n    if (name.length > 0) {\n      for (var i = 0; i <= animationCount; i++) {\n        if (animation[i]._elementId == name || animation[i]._customName == name) {\n          pause(name);\n          animationCount -= 1;\n          animation.splice(i, 1);\n          document.getElementById(name).innerHTML = '';\n          break;\n        }\n      }\n    }\n  }\n}\n\n/**\n * Plays the animation indicated by 'name'.\n * \n * @param {string} name The 'id' value of the container of this Lottie animation.\n */\nexport function play(name) {\n  if (animationCount < 0) {\n    return;\n  }\n  if (name === undefined) {\n    for (var i = 0; i <= animationCount; i++) {\n      animation[i]._paused = false;\n    }\n  } else {\n    name.toString();\n    name = name.replace(/#/g, '');\n    for (var i = 0; i <= animationCount; i++) {\n      if (animation[i]._elementId == name || animation[i]._customName == name) {\n        animation[i]._paused = false;\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Pauses the animation indicated by 'name'.\n * \n * @param {string} name The 'id' value of the container of this Lottie animation.\n */\n export function pause(name) {\n  if (name === undefined) {\n    for (var i = 0; i <= animationCount; i++) {\n      animation[i]._paused = true;\n    }\n  } else {\n    name.toString();\n    name = name.replace(/#/g, '');\n    for (var i = 0; i <= animationCount; i++) {\n      if (animation[i]._elementId == name || animation[i]._customName == name) {\n        animation[i]._paused = true;\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Stops the animation indicated by 'name'.\n * \n * @param {string} name The 'id' value of the container of this Lottie animation.\n */\nexport function stop(name) {\n  goToAndStop(1, false, name);\n}\n\n/**\n * Stops the animation, goes to the specified frame and freezes there.\n * \n * @param {integer} _frame The frame number.\n * @param {boolean} isFrame Indicates whether '_frame' represents time in number of frames (true) or milliseconds (false) - this is currently not implemented.\n * @param {string} name The 'id' value of the container of this Lottie animation.\n * \n */\nexport function goToAndStop(_frame, isFrame, name) {\n  if (typeof isFrame === 'string') {\n    name = isFrame;\n  }\n  if (animationCount < 0) {\n    return;\n  }\n  if (name === undefined) {\n    for (var i = 0; i <= animationCount; i++) {\n      animation[i]._paused = true;\n      animation[i]._currentFrame = _frame;\n      loadFrame(i, _frame);\n    }\n  } else {\n    name.toString();\n    name = name.replace(/#/g, '');\n    for (var i = 0; i <= animationCount; i++) {\n      if (animation[i]._elementId == name || animation[i]._customName == name) {\n        animation[i]._paused = true;\n        animation[i]._currentFrame = _frame;\n        //console.log(`${name} == ${_frame}`);\n        loadFrame(i, _frame);\n        break;\n      }\n    }\n  }\n}\n\n/** \n  * Lottie animation loader for jlottie.\n  *\n  * @param {JSON} obj Includes parameters that dictate how a Lottie is loaded.\n  * @param {DOMElement} obj.container A DOMElement object that will be used as the container for the Lottie animation.\n  * @param {boolean} obj.autoplay Instructs jlottie to immediately play the Lottie after it is loaded.\n  * @param {boolean} obj.loop Instructs jlottie to keep looping this animation.\n  * @param {boolean} obj.debugAnimation Instructs jlottie to display debug information (currently limited to just FPS data).\n  * @param {DOMElement} obj.debugContainer A DOMElement in which the debug data will be displayed.\n  *\n  */\nexport function loadAnimation(obj) {\n  if (obj.container === undefined && obj.path === undefined && obj.animationData === undefined) {\n    return;\n  }\n  let autoplay = true;\n  let loop = true;\n  let debugContainer;\n\n\n  if (!(obj.autoplay === undefined)) {\n    if (obj.autoplay === true || obj.autoplay === false) {\n      autoplay = obj.autoplay;\n    }\n  }\n\n  if (!(obj.loop === undefined)) {\n    if (obj.loop === true || obj.loop === false) {\n      loop = obj.loop;\n    }\n  }\n\n  if (!(obj.debug === undefined)) {\n    if (obj.debug === true) {\n      if (typeof obj.debugContainer != 'undefined') {\n        debugAnimation = true;\n        debugContainer = obj.debugContainer;\n      }\n    }\n  }\n\n  animationCount += 1;\n  let currentAnimation = animationCount;\n  animation[currentAnimation] = {};\n  animation[currentAnimation]._loaded = false;\n  if (!(obj.animationData === undefined) && obj.animationData.length > 0) {\n    //currentAnimation = animationCount;\n    animation[currentAnimation] = JSON.parse(obj.animationData);\n    animation[currentAnimation]._elementId = obj.container.id;\n    buildGraph(obj.container.id, currentAnimation, obj.container, autoplay, loop);\n  } else if (!(obj.path === undefined) && obj.path) {\n    getJson(\n      obj.path,\n      obj.container,\n      obj.container.id,\n      autoplay,\n      loop,\n      debugAnimation,\n      debugContainer,\n      currentAnimation\n    );\n  }\n  if (!playStarted) {\n    playStarted = true;\n    window.requestAnimationFrame(lottiemate);\n  }\n\n  animation[currentAnimation]._elementId = obj.container.id;\n  animation[currentAnimation].destroy = function() {destroy(animation[currentAnimation]._elementId);}\n  animation[currentAnimation].play = function() {play(animation[currentAnimation]._elementId);}\n  animation[currentAnimation].pause = function() {pause(animation[currentAnimation]._elementId);}\n  animation[currentAnimation].stop = function() {stop(animation[currentAnimation]._elementId);}\n  animation[currentAnimation].goToAndStop = function(frame) {goToAndStop(frame, animation[currentAnimation]._elementId);}\n  return animation[currentAnimation];\n}\n"],"names":["xmlns","animation","frame","animationCount","animationLoading","playStarted","smallestFrameTime","lastRefObj","debugAnimation","debug","loggerFn","loggingArgs","Array","isArray","arcLength","p1","p2","Math","sqrt","pow","bezierCurve","c1","c2","fromT","toT","isLayer","animationId","refKey","addTransformation","objectId","depth","customFlag","newNodes","hasOwnProperty","length","x","y","frames","timeTick","oneMinusT","currentFrame","i","push","_comp","t","_frame","parseInt","s","m","n","o","v","j","k","addGroupPositionTransform","loadFrame","_currentFrame","ref","_refObj","refObj","nextObj","_scene","_transform","fillSet","isGradient","stops","document","getElementById","fillObj","querySelectorAll","setAttribute","offsets","styles","refObjSet","currentObj","currentObjOther","refObjOther","isTween","dataString","combined","fill","strokeWidth","opacity","hide","stageEvent","stageObj","style","display","show","lottiemate","currentDate","Date","now","_loaded","_lastTime","_frameTime","_removed","_paused","_debugAnimation","_timeElapsed","_totalFrames","_loopCount","_renderObj","dispatchEvent","CustomEvent","bubbles","detail","count","_loop","goToAndStop","_elementId","postRender","debugDate","_curFPS","fr","_debugObj","innerHTML","setTimeout","requestAnimationFrame","getEmptyTransform","transforms","translateX","translateY","scaleFactorX","scaleFactorY","rotateAngle","opacityFactor","anchorX","anchorY","paddingX","paddingY","paddingAnchorX","paddingAnchorY","isTranslate","tweenShape","translate","rotate","scale","inPoint","outPoint","isSet","getEmptyFillTransform","gradientFill","getEmptyStageTransform","findExistingTransform","forFill","getIndex","found","undefined","updateTransform","existing","stageSequence","lastState","position","posX","_currentLayerGroup","_inPoint","_outPoint","_currentLayer","Number","isNaN","td","_layer","_currentShapeGroup","_anchorX","_anchorY","_instated","_objSize","getBoundingClientRect","width","height","sizeObjFromTransform","tempBoundingW","tempBoundingH","posY","currentScaleX","currentScaleY","foundPrevious","extrapolateValueKeyframe","valueKeyframeObj","extrapolateOffsetKeyframe","offsetKeyframeObj","objLength","oldLength","emptyPos","gotI","gotO","returnedKeyframeObj","e","splice","extrapolatePathPosition","parentObj","getPosition","prepShapeEl","shapeObj","referrer","newShape","createElementNS","p","_shape","classList","add","prepend","_isShape","prepShapeElKeyframe","prepShapeSr","prepShapeSrKeyframe","prepShapeRc","prepShapeRcKeyframe","prepDataString","sourceObject","closed","setDataString","sourceObj","shapeId","pathClosed","hideThis","prepShapeSh","ks","totalK","kCount","c","_data","prepShapeShKeyframe","prepShape","isMasked","ty","a","_startI","createGradientDef","start","end","gradient","radial","gradientCount","newDefId","newDef","NaN","defs","firstRun","opacities","newStop","append","lcEnum","1","2","3","getStrokeString","shapeGroup","strokeString","color","lineCap","lineJoin","miterLimit","w","sCount","lc","lj","getColorString","redVal","greenVal","blueVal","setShapeStrokes","shapesGroup","strokeToSet","setShapeColors","colorToSet","getTrim","getSegment","t0","t1","u0","u1","qxa","qxb","qxc","qxd","qya","qyb","qyc","qyd","segment","getLength","shapeIdx","startIdx","endIdx","fullBezierLength","bezierLength","_l","setTrim","trimToSet","it","minShapeT","minT","maxT","sIndex","eIndex","tempK","Object","assign","curSL","curEL","startShapeIndex","endShapeIndex","tDelta","startSegment","endSegment","initIdx","sourceK","JSON","parse","stringify","startToTrim","getShapesGr","elementId","layerObj","refLabel","refGroup","outer","currentColor","currentStroke","currentTrim","stroked","trimmed","_isGradient","shapeCount","tt","_group","newGroup","_trIndex","g","r","getShapes","shapes","findChildren","passedObj","resolveParents","layerId","lastMaskId","passedKey","level","addArray","passedLevel","ind","parent","_mask","_isMasked","item","_addedToDom","layerCount","_parent","_parentIdx","domObj","newLayer","newTranslateGroup","h","processed","_child","_childId","getLayers","elementObj","newMask","_maxWidth","_maxHeight","_isMask","layers","currentLevel","itemsThisLevel","tempLevel","tempArray","sort","b","forEach","ip","op","tempRef","assets","id","refId","tempDepth","_boundingX","_boundingY","_posX","_posY","scaleLayers","_currScale","buildGraph","autoplay","loop","customName","_autoplay","_customName","_skewW","_skewH","_lastFrame","_debugTimeElapsed","_debugContainer","newSVG","setAttributeNS","contain","maskCount","newCompute","map","clipPath","clipPathRect","scaleW","scaleH","_buildDone","error","getJson","src","domElement","http","XMLHttpRequest","withCredentials","open","onreadystatechange","readyState","status","received","responseText","search","replace","currentAnimation","createElement","send","destroy","name","toString","pause","play","stop","isFrame","loadAnimation","obj","container","path","animationData","debugContainer","window"],"mappings":"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"}