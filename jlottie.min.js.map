{"version":3,"file":"jlottie.min.js","sources":["../src/jlottie.js"],"sourcesContent":["const xmlns = 'http://www.w3.org/2000/svg';\n\nexport let animation = [];\nexport let frame = [];\nexport let animationCount = -1;\nconst animationLength = 0;\nlet animationLoading = 0;\nconst frozen = false;\nlet playStarted = false;\nvar smallestFrameTime = 0;\nvar smallestTimeBuffer = 0;\nlet debugAnimation = false;\nlet timeoutObj;\n\n/**\n * Exposes a near-zero cost console logger.\n *\n * @example debug(() => 'My logging statement'); // only prints if debugAnimation is set\n * @example debug(() => ['My logging statement', { state }]); // Prints the message and state if debugAnimation is set\n */\nexport function debug(loggerFn) {\n  if (!debugAnimation) return;\n\n  const loggingArgs = loggerFn();\n\n  if (Array.isArray(loggingArgs)) {\n    console.log(...loggingArgs);\n  } else {\n    console.log(loggingArgs);\n  }\n}\n\n/// ////////// BEZIER\nexport function arcLength(p1, p2) {\n  let result = Math.sqrt(Math.pow((p2[0] - p1[0]), 2) + Math.pow((p2[1] - p1[1]), 2));\n  return result;\n}\n\nexport function bezierCurve(\n  p1,\n  c1,\n  c2,\n  p2,\n  fromT,\n  toT,\n  isLayer,\n  animationId,\n  refKey,\n  addTransformation,\n  objectId,\n  depth,\n  customFlag,\n) {\n  const newNodes = [];\n\n  if (c1.hasOwnProperty('x')) {\n  } else if (c1.length >= 1) {\n    c1.x = c1[0];\n    if (refKey == 'p' || refKey == 's') {\n      c1.y = c1[1];\n    }\n  }\n  if (c2.hasOwnProperty('x')) {\n  } else if (c2.length >= 1) {\n    c2.x = c1[0];\n    if (refKey == 'p' || refKey == 's') {\n      c2.y = c1[1];\n    }\n  }\n  if (refKey == 's') {\n    if (c1.x.length > 1) {\n      c1.x = c1.x[0];\n      c1.y = c1.y[0];\n    }\n    if (c2.x.length > 1) {\n      c2.x = c2.x[0];\n      c2.y = c2.y[0];\n    }\n  }\n  const frames = toT - fromT;\n  let timeTick;\n  let oneMinusT;\n  let currentFrame = fromT;\n  for (let i = 1; i < frames; i++) {\n    timeTick = i / frames;\n    oneMinusT = 1 - timeTick;\n    newNodes.push({ _comp: 1, t: 0 });\n    currentFrame++;\n    newNodes[newNodes.length - 1]._frame = parseInt(currentFrame);\n    newNodes[newNodes.length - 1].t = parseInt(currentFrame);\n    newNodes[newNodes.length - 1].s = [];\n    if (refKey != 'ks') {\n      if (p1.length > 4) {\n        for (var m = 0; m < (p1.length / 4); m++) {\n          newNodes[newNodes.length - 1].s.push(\n            Math.pow(oneMinusT, 3) * p1[m * 4] +\n              3 * Math.pow(oneMinusT, 2) * timeTick * (c1.x + p1[m * 4]) +\n              3 * oneMinusT * Math.pow(timeTick, 2) * (c2.x + p2[m * 4]) +\n              Math.pow(timeTick, 3) * p2[m * 4],\n          );\n          for (var n = 1; n < 4; n++) {\n            newNodes[newNodes.length - 1].s.push(\n              Math.pow(oneMinusT, 3) * p1[(m * 4) + n] +\n                3 * Math.pow(oneMinusT, 2) * timeTick * (c1.y + p1[(m * 4) + n]) +\n                3 * oneMinusT * Math.pow(timeTick, 2) * (c2.y + p2[(m * 4) + n]) +\n                Math.pow(timeTick, 3) * p2[(m * 4) + n],\n            )\n          }\n        }\n      } else {\n        newNodes[newNodes.length - 1].s.push(\n        Math.pow(oneMinusT, 3) * p1[0] +\n          3 * Math.pow(oneMinusT, 2) * timeTick * (c1.x + p1[0]) +\n          3 * oneMinusT * Math.pow(timeTick, 2) * (c2.x + p2[0]) +\n          Math.pow(timeTick, 3) * p2[0],\n        );\n        if (refKey != 'x' && refKey != 'y') {\n          if (refKey == 'p' || refKey == 's') {\n            newNodes[newNodes.length - 1].s.push(\n              Math.pow(oneMinusT, 3) * p1[1] +\n                3 * Math.pow(oneMinusT, 2) * timeTick * (c1.y + p1[1]) +\n                3 * oneMinusT * Math.pow(timeTick, 2) * (c2.y + p2[1]) +\n                Math.pow(timeTick, 3) * p2[1],\n            );\n          }\n        }\n      }\n    } else {\n      newNodes[newNodes.length - 1].s.push({ i: [], o: [], v: [] });\n      const j = 0;\n      for (let k = 0; k < p1[j].i.length; k++) {\n        newNodes[newNodes.length - 1].s[newNodes[newNodes.length - 1].s.length - 1].i.push([\n          Math.pow(oneMinusT, 3) * p1[j].i[k][0] +\n            3 * Math.pow(oneMinusT, 2) * timeTick * (c1.x + p1[j].i[k][0]) +\n            3 * oneMinusT * Math.pow(timeTick, 2) * (c2.x + p2[j].i[k][0]) +\n            Math.pow(timeTick, 3) * p2[j].i[k][0],\n          Math.pow(oneMinusT, 3) * p1[j].i[k][1] +\n            3 * Math.pow(oneMinusT, 2) * timeTick * (c1.y + p1[j].i[k][1]) +\n            3 * oneMinusT * Math.pow(timeTick, 2) * (c2.y + p2[j].i[k][1]) +\n            Math.pow(timeTick, 3) * p2[j].i[k][1],\n        ]);\n\n        newNodes[newNodes.length - 1].s[newNodes[newNodes.length - 1].s.length - 1].o.push([\n          Math.pow(oneMinusT, 3) * p1[j].o[k][0] +\n            3 * Math.pow(oneMinusT, 2) * timeTick * (c1.x + p1[j].o[k][0]) +\n            3 * oneMinusT * Math.pow(timeTick, 2) * (c2.x + p2[j].o[k][0]) +\n            Math.pow(timeTick, 3) * p2[j].o[k][0],\n          Math.pow(oneMinusT, 3) * p1[j].o[k][1] +\n            3 * Math.pow(oneMinusT, 2) * timeTick * (c1.y + p1[j].o[k][1]) +\n            3 * oneMinusT * Math.pow(timeTick, 2) * (c2.y + p2[j].o[k][1]) +\n            Math.pow(timeTick, 3) * p2[j].o[k][1],\n        ]);\n\n        newNodes[newNodes.length - 1].s[newNodes[newNodes.length - 1].s.length - 1].v.push([\n          Math.pow(oneMinusT, 3) * p1[j].v[k][0] +\n            3 * Math.pow(oneMinusT, 2) * timeTick * (c1.x + p1[j].v[k][0]) +\n            3 * oneMinusT * Math.pow(timeTick, 2) * (c2.x + p2[j].v[k][0]) +\n            Math.pow(timeTick, 3) * p2[j].v[k][0],\n          Math.pow(oneMinusT, 3) * p1[j].v[k][1] +\n            3 * Math.pow(oneMinusT, 2) * timeTick * (c1.y + p1[j].v[k][1]) +\n            3 * oneMinusT * Math.pow(timeTick, 2) * (c2.y + p2[j].v[k][1]) +\n            Math.pow(timeTick, 3) * p2[j].v[k][1],\n        ]);\n      }\n    }\n    if (addTransformation > -1 && refKey != 'ks' && customFlag != 'length') {\n      if (newNodes[newNodes.length - 1].hasOwnProperty('s')) {\n        addGroupPositionTransform(\n          currentFrame,\n          newNodes[newNodes.length - 1].s,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n        );\n      }\n    }\n  }\n\n  return newNodes;\n}\n\n/// ////////// ANIMATOR\n\nexport function loadFrame(i, _currentFrame) {\n  for (let ref = 0; ref < animation[i]._refObj.length; ref++) {\n    const refObj = animation[i]._refObj[ref];\n    let nextObj = false;\n    for (let m = _currentFrame - 1; m >= 0; m--) {\n      for (let n = 0; n < animation[i]._scene[m]._transform.length; n++) {\n        /*\n        if (animation[i]._scene[m]._transform[n].refObj == refObj) {\n          currentObj = document.getElementById(animation[i]._scene[m]._transform[n].refObj);\n          currentObjOther = document.getElementById(animation[i]._scene[m]._transform[n].refObjOther);\n          if (\n            animation[i]._scene[m]._transform[n].isTween ||\n            animation[i]._scene[m]._transform[n].combined.length > 0\n          ) {\n            if (animation[i]._scene[m]._transform[n].isTween) {\n              currentObj.setAttribute('d', animation[i]._scene[m]._transform[n].dataString);\n            }\n            currentObj.setAttribute('transform', animation[i]._scene[m]._transform[n].combined);\n            currentObjOther.setAttribute('opacity', animation[i]._scene[m]._transform[n].opacity);\n            nextObj = true;\n            break;\n          }\n        }\n        */\n        if (animation[i]._scene[m]._transform[n].refObj == refObj) {\n          if (animation[i]._scene[m]._transform[n].fillSet) {\n            if (animation[i]._scene[m]._transform[n].isGradient) {\n              const stops = document.getElementById(animation[i]._scene[m]._transform[n].fillObj).querySelectorAll(\"stop\");\n              for (var o = 0; o < stops.length; o++) {\n                stops[o].setAttribute(\"offset\", animation[i]._scene[m]._transform[n].offsets[m]);\n                stops[o].setAttribute(\"style\", animation[i]._scene[m]._transform[n].styles[m]);\n              }\n            } else {\n\n            }\n          } else {\n            if (animation[i]._scene[m]._transform[n].refObjSet) {\n              const currentObj = document.getElementById(animation[i]._scene[m]._transform[n].refObj);\n              const currentObjOther = document.getElementById(\n                animation[i]._scene[m]._transform[n].refObjOther,\n              );\n              if (animation[i]._scene[m]._transform[n].isTween) {\n                currentObj.setAttribute('d', animation[i]._scene[m]._transform[n].dataString);\n              }\n              if (animation[i]._scene[m]._transform[n].combined.length > 0) {\n                currentObj.setAttribute(\n                  'transform',\n                  animation[i]._scene[m]._transform[n].combined,\n                );\n              }\n              if (animation[i]._scene[m]._transform[n].fillSet) {\n                currentObj.setAttribute(\n                  'fill',\n                  animation[i]._scene[m]._transform[n].fill,\n                );\n              }\n              if (animation[i]._scene[m]._transform[n].strokeWidth > -1) {\n                currentObj.setAttribute(\n                  'stroke-width',\n                  animation[i]._scene[m]._transform[n].strokeWidth,\n                );\n              }\n              currentObjOther.setAttribute(\n                'opacity',\n                animation[i]._scene[m]._transform[n].opacity,\n              );\n              nextObj = true;\n              break;\n            }\n            if (animation[i]._scene[m]._transform[n].hide && animation[i]._scene[m]._transform[n].stageEvent) {\n              document.getElementById(\n                animation[i]._scene[m]._transform[n].stageObj,\n              ).style.display = 'none';\n            }\n            if (animation[i]._scene[m]._transform[n].show && animation[i]._scene[m]._transform[n].stageEvent) {\n              document.getElementById(\n                animation[i]._scene[m]._transform[n].stageObj,\n              ).style.display = 'block';\n            }            \n          }\n        }\n\n        if (nextObj) break;\n      }\n      if (nextObj) break;\n    }\n    //if (nextObj) continue;\n  }\n}\n\nexport function lottiemate() {\n  const currentDate = Date.now();\n  for (let i = 0; i <= animationCount; i++) {\n    if (animation[i]._loaded && currentDate - animation[i]._lastTime >= (animation[i]._frameTime - 20)) {\n      if (animation[i]._removed || animation[i]._paused) {\n        continue;\n        //return;\n      }\n      if (animation[i]._debugAnimation) {\n        // DEBUG\n        animation[i]._timeElapsed = animation[i]._timeElapsed + (currentDate - animation[i]._lastTime);\n      }\n      //animation[i]._lastFrame = animation[i]._currentFrame;\n      animation[i]._currentFrame++;\n      if (animation[i]._currentFrame >= animation[i]._totalFrames) {\n        animation[i]._loopCount++;\n        animation[i]._renderObj.dispatchEvent(new CustomEvent(\"onLoopComplete\", {bubbles: true, detail: {\"count\": animation[i]._loopCount, \"animation\": i, \"frame\": animation[i]._currentFrame} }));\n        animation[i]._renderObj.dispatchEvent(new CustomEvent(\"loopComplete\", {bubbles: true, detail: {\"count\": animation[i]._loopCount, \"animation\": i, \"frame\": animation[i]._currentFrame} }));\n        if (!animation[i]._loop) {\n          animation[i]._currentFrame--;\n          animation[i]._paused = true;\n          goToAndStop(animation[i]._currentFrame, '', animation[i]._elementId);\n          continue;   \n          //return;\n        } else {\n          animation[i]._currentFrame = 0;\n        }\n      }\n\n      //setTimeout(function () {\n        for (let j = 0; j < animation[i]._scene[animation[i]._currentFrame]._transform.length; j++) {\n          if (animation[i]._scene[animation[i]._currentFrame]._transform[j].fillSet) {\n            if (animation[i]._scene[animation[i]._currentFrame]._transform[j].isGradient) {\n              const stops = document.getElementById(animation[i]._scene[animation[i]._currentFrame]._transform[j].fillObj).querySelectorAll(\"stop\");\n              for (var m = 0; m < stops.length; m++) {\n                stops[m].setAttribute(\"offset\", animation[i]._scene[animation[i]._currentFrame]._transform[j].offsets[m]);\n                stops[m].setAttribute(\"style\", animation[i]._scene[animation[i]._currentFrame]._transform[j].styles[m]);\n              }\n            } else {\n\n            }\n          } else {\n            if (animation[i]._scene[animation[i]._currentFrame]._transform[j].refObjSet) {\n              const currentObj = document.getElementById(animation[i]._scene[animation[i]._currentFrame]._transform[j].refObj);\n              const currentObjOther = document.getElementById(\n                animation[i]._scene[animation[i]._currentFrame]._transform[j].refObjOther,\n              );\n              if (animation[i]._scene[animation[i]._currentFrame]._transform[j].isTween) {\n                currentObj.setAttribute('d', animation[i]._scene[animation[i]._currentFrame]._transform[j].dataString);\n              }\n              if (animation[i]._scene[animation[i]._currentFrame]._transform[j].combined.length > 0) {\n                currentObj.setAttribute(\n                  'transform',\n                  animation[i]._scene[animation[i]._currentFrame]._transform[j].combined,\n                );\n              }\n              if (animation[i]._scene[animation[i]._currentFrame]._transform[j].fillSet) {\n                currentObj.setAttribute(\n                  'fill',\n                  animation[i]._scene[animation[i]._currentFrame]._transform[j].fill,\n                );\n              }\n              if (animation[i]._scene[animation[i]._currentFrame]._transform[j].strokeWidth > -1) {\n                currentObj.setAttribute(\n                  'stroke-width',\n                  animation[i]._scene[animation[i]._currentFrame]._transform[j].strokeWidth,\n                );\n              }\n              currentObjOther.setAttribute(\n                'opacity',\n                animation[i]._scene[animation[i]._currentFrame]._transform[j].opacity,\n              );\n            }\n            if (animation[i]._scene[animation[i]._currentFrame]._transform[j].hide && animation[i]._scene[animation[i]._currentFrame]._transform[j].stageEvent) {\n              document.getElementById(\n                animation[i]._scene[animation[i]._currentFrame]._transform[j].stageObj,\n              ).style.display = 'none';\n            }\n            if (animation[i]._scene[animation[i]._currentFrame]._transform[j].show && animation[i]._scene[animation[i]._currentFrame]._transform[j].stageEvent) {\n              document.getElementById(\n                animation[i]._scene[animation[i]._currentFrame]._transform[j].stageObj,\n              ).style.display = 'block';\n            }\n          }\n        }\n      //}, 0);\n\n      var postRender = Date.now();\n      if (animation[i]._debugAnimation) {\n        // DEBUG\n        var debugDate = Date.now();\n        animation[i]._timeElapsed = animation[i]._timeElapsed + (debugDate - currentDate);\n        //animation[i]._debugObj.innerHTML = `required fps: ${animation[i].fr}, current fps: ${animation[i]._timeElapsed}`;\n        if (animation[i]._timeElapsed >= 2000) {\n          animation[i]._curFPS = 1000 / (currentDate - animation[i]._lastTime);\n          animation[i]._debugObj.innerHTML = `required fps: ${animation[i].fr}, current fps: ${\n            animation[i]._curFPS\n          }`;\n          animation[i]._timeElapsed = 0;\n        }\n      }\n  \n      animation[i]._lastTime = currentDate;\n    }\n          \n  }\n  clearTimeout(timeoutObj);\n  setTimeout(() => {\n    requestAnimationFrame(lottiemate);\n  }, (smallestFrameTime - 8) - (postRender - currentDate));\n}\n\n/// ////////// BUILD SCENE GRAPH\nlet lastRefObj;\n\nexport function getEmptyTransform() {\n  const transforms = {};\n  transforms.translateX = 0;\n  transforms.translateY = 0;\n  transforms.scaleFactorX = 0;\n  transforms.scaleFactorY = 0;\n  transforms.rotateAngle = 0;\n  transforms.opacityFactor = 0;\n  transforms.anchorX = 0;\n  transforms.anchorY = 0;\n  transforms.paddingX = 0;\n  transforms.paddingY = 0;\n  transforms.paddingAnchorX = 0;\n  transforms.paddingAnchorY = 0;\n  transforms.isTranslate = false;\n\n  transforms.fillSet = false;\n\n  transforms.dataString = '';\n  transforms.isTween = false;\n  transforms.tweenShape = '';\n  transforms.refObj = '';\n  transforms.combined = '';\n  transforms.refObjOther = '';\n  transforms.refObjSet = false;\n\n  transforms.hide = false;\n  transforms.show = false;\n  transforms.stageEvent = false;\n\n  transforms.translate = '';\n  transforms.rotate = '';\n  transforms.scale = '';\n  transforms.opacity = 1;\n  transforms.inPoint = -1;\n  transforms.outPoint = -1;\n  transforms.isLayer = true;\n  transforms.stageObj = '';\n  transforms.isSet = false;\n\n  // related to strokes\n  transforms.strokeWidth = -1;\n\n  return transforms;\n}\n\nexport function getEmptyFillTransform() {\n  const transforms = {};\n  transforms.fillSet = true;\n  transforms.isGradient = false;\n  transforms.fill = '';\n  transforms.gradientFill = [];\n  transforms.fillObj = '';\n  return transforms;\n}\n\nexport function getEmptyStageTransform() {\n  const transforms = {};\n  transforms.fillSet = false;\n  transforms.stageObj = '';\n  transforms.refObj = '';\n  transforms.hide = false;\n  transforms.show = false;\n  return transforms;\n}\n\nexport function findExistingTransform(transforms, animationId, frame, forFill, getIndex) {\n  let found = 0;\n  if (animation[animationId]._scene[parseInt(frame)] === undefined) {\n    //console.log(frame);\n    if (getIndex) {\n      return -1;\n    }\n    return transforms;\n  }\n  for (let i = 0; i < animation[animationId]._scene[parseInt(frame)]._transform.length; i++) {\n    if (forFill) {\n      if (animation[animationId]._scene[parseInt(frame)]._transform[i].fillObj == transforms.fillObj) {\n        if (getIndex) {\n          return i;\n        }\n        found = 1;\n        break;\n      }\n    } else {\n      if (animation[animationId]._scene[parseInt(frame)]._transform[i].refObj == transforms.refObj) {\n        if (getIndex) {\n          return i;\n        }\n        transforms = animation[animationId]._scene[parseInt(frame)]._transform[i];\n        found = 1;\n        break;\n      }\n    }\n  }\n  return transforms;\n}\n\nexport function updateTransform(transforms, animationId, frame, forFill) {\n  let existing = findExistingTransform(transforms, animationId, frame, forFill, true);\n\n  if (existing == -1) {\n    animation[animationId]._scene[parseInt(frame)]._transform.push(transforms);\n  } else {\n    animation[animationId]._scene[parseInt(frame)]._transform[existing] = transforms;\n  }\n}\n\nexport function stageSequence(animationId, stageObj, inPoint, outPoint) {\n  if (outPoint > animation[animationId]._totalFrames) {\n    outPoint = animation[animationId]._totalFrames;\n  }\n  if (inPoint < 0) {\n    inPoint = 0;\n  }\n  if (inPoint > animation[animationId]._totalFrames) {\n    inPoint = animation[animationId]._totalFrames;\n  }\n  let transforms = getEmptyStageTransform();\n  let found = 0;\n  if (inPoint > -1) {\n    frame = inPoint;\n    for (var i = 0; i < animation[animationId]._scene[parseInt(frame)]._transform.length; i++) {\n      if (animation[animationId]._scene[parseInt(frame)]._transform[i].stageObj == stageObj) {\n        transforms = animation[animationId]._scene[parseInt(frame)]._transform[i];\n        found = 1;\n        break;\n      }\n    }\n    transforms.stageObj = stageObj;\n    transforms.show = true;\n    transforms.stageEvent = true;\n    animation[animationId]._scene[parseInt(frame)]._transform.push(transforms);\n  }\n\n  transforms = getEmptyStageTransform();\n  found = 0;\n  if (outPoint > -1) {\n    frame = outPoint;\n    for (var i = 0; i < animation[animationId]._scene[parseInt(frame)]._transform.length; i++) {\n      if (animation[animationId]._scene[parseInt(frame)]._transform[i].stageObj == stageObj) {\n        transforms = animation[animationId]._scene[parseInt(frame)]._transform[i];\n        found = 1;\n        break;\n      }\n    }\n    transforms.stageObj = stageObj;\n    transforms.hide = true;\n    transforms.stageEvent = true;\n    animation[animationId]._scene[parseInt(frame)]._transform.push(transforms);\n  } else {\n    frame = 0;\n  }\n\n  transforms = getEmptyStageTransform();\n  found = 0;\n  if (outPoint > -1 && inPoint > 0) {\n    frame = 0;\n    for (var i = 0; i < animation[animationId]._scene[parseInt(frame)]._transform.length; i++) {\n      if (animation[animationId]._scene[parseInt(frame)]._transform[i].stageObj == stageObj) {\n        transforms = animation[animationId]._scene[parseInt(frame)]._transform[i];\n        found = 1;\n        break;\n      }\n    }\n    transforms.stageObj = stageObj;\n    transforms.hide = true;\n    transforms.stageEvent = true;\n    animation[animationId]._scene[parseInt(frame)]._transform.push(transforms);\n  }\n\n  let lastState = 0;\n  if (frame > 0) {\n    for (let j = 0; j <= animation[animationId]._totalFrames; j++) {\n      for (var i = 0; i < animation[animationId]._scene[j]._transform.length; i++) {\n        if (animation[animationId]._scene[j]._transform[i].stageObj == stageObj) {\n          if (animation[animationId]._scene[j]._transform[i].show) {\n            lastState = 1;\n          }\n          if (animation[animationId]._scene[j]._transform[i].hide) {\n            lastState = 0;\n          }\n          if (lastState == 1) {\n            animation[animationId]._scene[j]._transform[i].show = true;\n          } else {\n            animation[animationId]._scene[j]._transform[i].hide = true;\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function addGroupPositionTransform(\n  frame,\n  position,\n  isLayer,\n  animationId,\n  refKey,\n  addTransformation,\n  objectId,\n  depth,\n) {\n  if (frame < 0 || addTransformation < 1) {\n    return;\n  }\n  if (frame > animation[animationId]._totalFrames) {\n    return;\n  }\n  let transforms = getEmptyTransform();\n\n  let posX = 0;\n\n  if (isLayer) {\n    if (objectId.hasOwnProperty('_currentLayerGroup')) {\n      //if (objectId._currentLayerGroup._layer > 0) {\n      //console.log('inpoint');\n      if (objectId._currentLayerGroup._inPoint >= 0) {\n        //console.log('inpoint');\n        transforms.inPoint = parseInt(objectId._currentLayerGroup._inPoint);\n      }\n      if (objectId._currentLayerGroup._outPoint > 0) {\n        transforms.outPoint = parseInt(objectId._currentLayerGroup._outPoint);\n      }\n    } else {\n      if (objectId.hasOwnProperty('_currentLayer')) {\n        if (objectId._currentLayer._inPoint >= 0) {\n          //console.log('inpoint');\n          transforms.inPoint = parseInt(objectId._currentLayer._inPoint);\n        }\n        if (objectId._currentLayer._outPoint > 0) {\n          transforms.outPoint = parseInt(objectId._currentLayer._outPoint);\n        }\n      }\n    }\n  } else {\n  }\n\n  if (transforms.inPoint < 0 && transforms.outPoint < 0) {\n    if (frame != transforms.inPoint && frame != transforms.outPoint) {\n      if (Array.isArray(position)) {\n        posX = position[0];\n        if (Number.isNaN(posX)) {\n          return;\n        }\n      } else {\n        posX = position;\n        if (Number.isNaN(posX)) {\n          posX = position[0];\n          if (Number.isNaN(posX)) {\n            return;\n          }\n        }\n      }\n    }\n  }\n\n  if (isLayer) {\n    transforms.isLayer = true;\n    if (objectId.td > 0) {\n      transforms.refObj = `${animationId}_${depth}_layerGroup${objectId._layer}`;\n    } else {\n      transforms.refObj = `${animationId}_${depth}_layerTranslate${objectId._layer}`;\n    }\n    transforms.refObjOther = `${animationId}_${depth}_layerGroup${objectId._layer}`;\n  } else {\n    transforms.isLayer = false;\n    transforms.refObj = `${animationId}_group${animation[animationId]._currentShapeGroup}`;\n    transforms.refObjOther = `${animationId}_group${animation[animationId]._currentShapeGroup}`;\n  }\n\n  transforms.anchorX = objectId._anchorX;\n  transforms.anchorY = objectId._anchorY;\n\n  transforms = findExistingTransform(transforms, animationId, frame);\n\n  if (animation[animationId]._instated.hasOwnProperty(transforms.refObj)) {\n  } else {\n    animation[animationId]._refObj.push(transforms.refObj);\n    animation[animationId]._objSize[transforms.refObj] = [];\n    animation[animationId]._objSize[transforms.refObj][0] = document\n      .getElementById(transforms.refObj)\n      .getBoundingClientRect().width;\n    animation[animationId]._objSize[transforms.refObj][1] = document\n      .getElementById(transforms.refObj)\n      .getBoundingClientRect().height;\n  }\n  const sizeObjFromTransform = animation[animationId]._objSize[transforms.refObj];\n  if (objectId._layer == 3) {\n    debug(() => [\n      'GroupPositionTransform: Layer 3',\n      [sizeObjFromTransform[0], sizeObjFromTransform[1]],\n      [transforms.anchorX, transforms.anchorY],\n    ]);\n  }\n  transforms.refObjSet = true;\n\n  let posY = 0;\n\n  if (refKey == 'r') {\n    transforms.rotateAngle += posX;\n    if (objectId.hasOwnProperty('_anchorX') && objectId.hasOwnProperty('_anchorY')) {\n      transforms.rotate = `rotate(${transforms.rotateAngle},${objectId._anchorX},${objectId._anchorY}) `;\n    } else {\n      transforms.rotate = `rotate(${transforms.rotateAngle},${\n        document.getElementById(transforms.refObj).getBoundingClientRect().width / 2\n      },${document.getElementById(transforms.refObj).getBoundingClientRect().height / 2}) `;\n    }\n  }\n  let tempBoundingW;\n  let tempBoundingH;\n  if (refKey == 's') {\n    transforms.scaleFactorX += posX;\n    tempBoundingW = sizeObjFromTransform[0];\n    tempBoundingH = sizeObjFromTransform[1];\n    let currentScaleX;\n    let currentScaleY;\n    if (position.length > 1) {\n      transforms.scaleFactorY += position[1];\n      currentScaleX = 1 - transforms.scaleFactorX / 100;\n      currentScaleY = 1 - transforms.scaleFactorY / 100;\n    } else {\n      currentScaleX = 1 - transforms.scaleFactorX / 100;\n      currentScaleY = 1 - transforms.scaleFactorX / 100;\n    }\n    transforms.scale = `scale(${transforms.scaleFactorX / 100},${transforms.scaleFactorY / 100}) `;\n    transforms.paddingX = (transforms.anchorX - tempBoundingW) * currentScaleX + tempBoundingW * currentScaleX;\n    transforms.paddingY = (transforms.anchorY - tempBoundingH) * currentScaleY + tempBoundingH * currentScaleY;\n    transforms.paddingAnchorX = transforms.anchorX * currentScaleX;\n    transforms.paddingAnchorY = transforms.anchorY * currentScaleY;\n  }\n  if (refKey == 'p') {\n    posY = position[1];\n    if (objectId.hasOwnProperty('_anchorX')) {\n      transforms.translateX += posX;\n    }\n    if (objectId.hasOwnProperty('_anchorY')) {\n      transforms.translateY += posY;\n    }\n    transforms.translate = `translate(${transforms.translateX - transforms.anchorX},${\n      transforms.translateY - transforms.anchorY\n    }) `;\n    transforms.isTranslate = true;\n  }\n\n  if (!transforms.isTranslate) {\n    transforms.translate = `translate(${transforms.paddingX},${transforms.paddingY}) `;\n    transforms.isTranslate = true;\n  }\n\n  if (refKey == 'o') {\n    transforms.opacityFactor += posX;\n    transforms.opacity = transforms.opacityFactor / 100;\n  }\n\n  transforms.combined = transforms.translate + transforms.scale + transforms.rotate;\n  transforms.isSet = true;\n  animation[animationId]._scene[parseInt(frame)]._transform.push(transforms);\n\n  // Add this transformation head to the root frame if no previous transformations for this refObj exists\n  if (frame > 1) {\n    let foundPrevious = false;\n    for (let i = parseInt(frame) - 1; i > 0; i--) {\n      if (animation[animationId]._scene[i]._transform.refObj == transforms.refObj) {\n        if (animation[animationId]._scene[i]._transform.isTranslate) {\n          foundPrevious = true;\n          break;\n        }\n      }\n    }\n    if (! foundPrevious) {\n      /*for (let i = parseInt(frame) - 1; i > 0; i--) {\n        animation[animationId]._scene[i]._transform.push(transforms);\n      }*/\n    }\n  }\n\n  lastRefObj = transforms.refObj;\n\n  if (animation[animationId]._instated.hasOwnProperty(transforms.refObj)) {\n  } else {\n    animation[animationId]._instated[transforms.refObj] = 1;\n    animation[animationId]._scene[0]._transform.push(transforms);\n  }\n}\n\n/// ////////// PREP JSON\n\nexport function extrapolateValueKeyframe(valueKeyframeObj) {\n  return valueKeyframeObj;\n}\n\nexport function extrapolateOffsetKeyframe(\n  offsetKeyframeObj,\n  refKey,\n  isLayer,\n  animationId,\n  addTransformation,\n  objectId,\n  depth,\n) {\n  let i = 0;\n  let objLength = offsetKeyframeObj[refKey].k.length;\n  let oldLength = objLength;\n  const emptyPos = { x: 0, y: 0 };\n  let p2;\n  let gotI;\n  let gotO;\n\n\n  while (i < objLength - 1) {\n    gotI = true;\n    gotO = true;\n\n    if (offsetKeyframeObj[refKey].k[i].hasOwnProperty('_comp')) {\n    } else {\n      if (addTransformation > -1) {\n        if (offsetKeyframeObj[refKey].k[i].hasOwnProperty('s')) {\n          addGroupPositionTransform(\n            offsetKeyframeObj[refKey].k[i].t,\n            offsetKeyframeObj[refKey].k[i].s,\n            isLayer,\n            animationId,\n            refKey,\n            addTransformation,\n            objectId,\n            depth,\n          );\n        } else {\n          if (offsetKeyframeObj[refKey].k[i].hasOwnProperty('e')) {\n            addGroupPositionTransform(\n              offsetKeyframeObj[refKey].k[i].t,\n              offsetKeyframeObj[refKey].k[i].e,\n              isLayer,\n              animationId,\n              refKey,\n              addTransformation,\n              objectId,\n              depth,\n            );\n          }  \n        }\n      }\n      /*if (offsetKeyframeObj[refKey].k[i].hasOwnProperty('e')) {\n        p2 = offsetKeyframeObj[refKey].k[i].e;\n      } else if (offsetKeyframeObj[refKey].k[i + 1].hasOwnProperty('s')) {\n        p2 = offsetKeyframeObj[refKey].k[i + 1].s;\n      }*/\n      p2 = offsetKeyframeObj[refKey].k[i + 1].s;\n\n      if (offsetKeyframeObj[refKey].k[i + 1].hasOwnProperty('i') && refKey != 'ks' && addTransformation > -1) {\n        if (offsetKeyframeObj[refKey].k[i + 1].i.x < 1) offsetKeyframeObj[refKey].k[i + 1].i.x = 0.0;\n        if (offsetKeyframeObj[refKey].k[i + 1].i.y < 1) offsetKeyframeObj[refKey].k[i + 1].i.y = 0.0;\n      }\n      if (offsetKeyframeObj[refKey].k[i].hasOwnProperty('o') && refKey != 'ks' && addTransformation > -1) {\n        if (offsetKeyframeObj[refKey].k[i].o.x < 1) offsetKeyframeObj[refKey].k[i].o.x = 0.0;\n        if (offsetKeyframeObj[refKey].k[i].o.y < 1) offsetKeyframeObj[refKey].k[i].o.y = 0.0;\n      }\n\n      var returnedKeyframeObj;\n      if (\n        offsetKeyframeObj[refKey].k[i].hasOwnProperty('e') &&\n        offsetKeyframeObj[refKey].k[i].hasOwnProperty('s')\n      ) {\n        returnedKeyframeObj = bezierCurve(\n          offsetKeyframeObj[refKey].k[i].s,\n          offsetKeyframeObj[refKey].k[i].o,\n          offsetKeyframeObj[refKey].k[i].i,\n          offsetKeyframeObj[refKey].k[i].e,\n          offsetKeyframeObj[refKey].k[i].t,\n          offsetKeyframeObj[refKey].k[i + 1].t,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n        );\n      } else if (\n        offsetKeyframeObj[refKey].k[i + 1].hasOwnProperty('i') &&\n        offsetKeyframeObj[refKey].k[i].hasOwnProperty('o') &&\n        gotI\n      ) {\n        returnedKeyframeObj = bezierCurve(\n          offsetKeyframeObj[refKey].k[i].s,\n          offsetKeyframeObj[refKey].k[i].o,\n          offsetKeyframeObj[refKey].k[i + 1].i,\n          p2,\n          offsetKeyframeObj[refKey].k[i].t,\n          offsetKeyframeObj[refKey].k[i + 1].t,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n        );\n      } else if (offsetKeyframeObj[refKey].k[i].hasOwnProperty('o') && gotO) {\n        returnedKeyframeObj = bezierCurve(\n          offsetKeyframeObj[refKey].k[i].s,\n          offsetKeyframeObj[refKey].k[i].o,\n          emptyPos,\n          p2,\n          offsetKeyframeObj[refKey].k[i].t,\n          offsetKeyframeObj[refKey].k[i + 1].t,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n        );\n      } else {\n        returnedKeyframeObj = bezierCurve(\n          offsetKeyframeObj[refKey].k[i].s,\n          emptyPos,\n          emptyPos,\n          p2,\n          offsetKeyframeObj[refKey].k[i].t,\n          offsetKeyframeObj[refKey].k[i + 1].t,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n        );\n      }\n      for (let s = returnedKeyframeObj.length - 1; s >= 0; s--) {\n        offsetKeyframeObj[refKey].k.splice(i + 1, 0, returnedKeyframeObj[s]);\n      }\n\n      objLength = offsetKeyframeObj[refKey].k.length;\n      i += objLength - oldLength;\n      oldLength = objLength;\n    }\n    i += 1;\n  }\n\n  return offsetKeyframeObj;\n}\n\nexport function extrapolatePathPosition(\n  currentObj,\n  parentObj,\n  refKey,\n  isLayer,\n  animationId,\n  addTransformation,\n  objectId,\n  depth,\n) {\n  currentObj[refKey].k = [];\n  if (currentObj[refKey].x.k.length > 1) {\n    currentObj[refKey] = extrapolateOffsetKeyframe(\n      currentObj[refKey],\n      'x',\n      isLayer,\n      animationId,\n      false,\n      objectId,\n      depth,\n    );\n  } else {\n  }\n  if (currentObj[refKey].y.k.length > 1) {\n    currentObj[refKey] = extrapolateOffsetKeyframe(\n      currentObj[refKey],\n      'y',\n      isLayer,\n      animationId,\n      false,\n      objectId,\n      depth,\n    );\n  } else {\n  }\n\n  if (!Array.isArray(currentObj[refKey].x.k)) {\n    for (var i = 0; i < currentObj[refKey].y.k.length; i++) {\n      if (currentObj[refKey].y.k[i].hasOwnProperty('s')) {\n        currentObj[refKey].k.push({\n          i: [0, 0, 0],\n          o: [0, 0, 0],\n          s: [currentObj[refKey].x.k, currentObj[refKey].y.k[i].s[0], 0],\n          t: currentObj[refKey].y.k[i].t,\n        });\n      }\n    }\n\n    /*for (var i = 0; i < currentObj[refKey].k.length; i++) {\n      if (currentObj[refKey].k[i].hasOwnProperty('s')) {\n        addGroupPositionTransform(\n          currentObj[refKey].k[i].t,\n          currentObj[refKey].k[i].s,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n        );\n      } else {\n        if (currentObj[refKey].k[i].hasOwnProperty('e')) {\n          addGroupPositionTransform(\n            currentObj[refKey].k[i].t,\n            currentObj[refKey].k[i].e,\n            isLayer,\n            animationId,\n            refKey,\n            addTransformation,\n            objectId,\n            depth,\n          );\n        }\n      }\n    }\n\n    return currentObj;*/\n  }\n\n  if (!currentObj[refKey].y.k.isArray) {\n    for (var i = 0; i < currentObj[refKey].x.k.length; i++) {\n      if (currentObj[refKey].x.k[i].hasOwnProperty('s')) {\n        currentObj[refKey].k.push({\n          i: [0, 0, 0],\n          o: [0, 0, 0],\n          s: [currentObj[refKey].x.k[i].s[0], currentObj[refKey].y.k, 0],\n          t: currentObj[refKey].x.k[i].t,\n        });\n      }\n    }\n\n    /*for (var i = 0; i < currentObj[refKey].k.length; i++) {\n      if (currentObj[refKey].k[i].hasOwnProperty('s')) {\n        addGroupPositionTransform(\n          currentObj[refKey].k[i].t,\n          currentObj[refKey].k[i].s,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n        );\n      } else {\n        if (currentObj[refKey].k[i].hasOwnProperty('e')) {\n          addGroupPositionTransform(\n            currentObj[refKey].k[i].t,\n            currentObj[refKey].k[i].e,\n            isLayer,\n            animationId,\n            refKey,\n            addTransformation,\n            objectId,\n            depth,\n          );\n        }\n      }\n    }\n\n    return currentObj;*/\n  }\n\n  if (currentObj[refKey].x.k.length > currentObj[refKey].y.k.length) {\n    for (var i = 0; i < currentObj[refKey].x.k.length; i++) {\n      currentObj[refKey].k.push({\n        i: [0, 0, 0],\n        o: [0, 0, 0],\n        s: [currentObj[refKey].x.k[i].s[0], 0, 0],\n        t: currentObj[refKey].x.k[i].t,\n      });\n    }\n    for (var i = 0; i < currentObj[refKey].y.k.length; i++) {\n      if (currentObj[refKey].k[0].t > currentObj[refKey].y.k[i].t) {\n        currentObj[refKey].k.splice(i, 0, {\n          i: [0, 0, 0],\n          o: [0, 0, 0],\n          s: [0, currentObj[refKey].y.k[i].s[0], 0],\n          t: currentObj[refKey].y.k[i].t,\n        });\n      } else if (currentObj[refKey].k[0].t < currentObj[refKey].y.k[i].t) {\n        currentObj[refKey].k.push({\n          i: [0, 0, 0],\n          o: [0, 0, 0],\n          s: [0, currentObj[refKey].y.k[i].s[0], 0],\n          t: currentObj[refKey].y.k[i].t,\n        });\n      } else if (currentObj[refKey].k[0].t == currentObj[refKey].y.k[i].t) {\n        currentObj[refKey].k.s[1] = currentObj[refKey].y.k[i].s[0];\n      }\n    }\n\n    /*for (var i = 0; i < currentObj[refKey].k.length; i++) {\n      if (currentObj[refKey].k[i].hasOwnProperty('s')) {\n        addGroupPositionTransform(\n          currentObj[refKey].k[i].t,\n          currentObj[refKey].k[i].s,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n        );\n      } else {\n        if (currentObj[refKey].k[i].hasOwnProperty('e')) {\n          addGroupPositionTransform(\n            currentObj[refKey].k[i].t,\n            currentObj[refKey].k[i].e,\n            isLayer,\n            animationId,\n            refKey,\n            addTransformation,\n            objectId,\n            depth,\n          );\n        }\n      }\n    }\n\n    return currentObj;*/\n  }\n\n  if (currentObj[refKey].x.k.length < currentObj[refKey].y.k.length) {\n    for (var i = 0; i < currentObj[refKey].y.k.length; i++) {\n      currentObj[refKey].k.push({\n        i: [0, 0, 0],\n        o: [0, 0, 0],\n        s: [0, currentObj[refKey].y.k[i].s[0], 0],\n        t: currentObj[refKey].y.k[i].t,\n      });\n    }\n    for (var i = 0; i < currentObj[refKey].x.k.length; i++) {\n      if (currentObj[refKey].k[0].t > currentObj[refKey].x.k[i].t) {\n        currentObj[refKey].k.splice(i, 0, {\n          i: [0, 0, 0],\n          o: [0, 0, 0],\n          s: [currentObj[refKey].x.k[i].s[0], 0, 0],\n          t: currentObj[refKey].x.k[i].t,\n        });\n      } else if (currentObj[refKey].k[0].t < currentObj[refKey].x.k[i].t) {\n        currentObj[refKey].k.push({\n          i: [0, 0, 0],\n          o: [0, 0, 0],\n          s: [currentObj[refKey].x.k[i].s[0], 0, 0],\n          t: currentObj[refKey].x.k[i].t,\n        });\n      } else if (currentObj[refKey].k[0].t == currentObj[refKey].x.k[i].t) {\n        currentObj[refKey].k.s[0] = currentObj[refKey].x.k[i].s[0];\n      }\n    }\n\n    /*for (var i = 0; i < currentObj[refKey].k.length; i++) {\n      if (currentObj[refKey].k[i].hasOwnProperty('s')) {\n        addGroupPositionTransform(\n          currentObj[refKey].k[i].t,\n          currentObj[refKey].k[i].s,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n        );\n      } else {\n        if (currentObj[refKey].k[i].hasOwnProperty('e')) {\n          addGroupPositionTransform(\n            currentObj[refKey].k[i].t,\n            currentObj[refKey].k[i].e,\n            isLayer,\n            animationId,\n            refKey,\n            addTransformation,\n            objectId,\n            depth,\n          );\n        }\n      }\n    }\n\n    return currentObj;*/\n  }\n\n  for (var i = 0; i < currentObj[refKey].k.length; i++) {\n    if (currentObj[refKey].k[i].hasOwnProperty('s')) {\n      addGroupPositionTransform(\n        currentObj[refKey].k[i].t,\n        currentObj[refKey].k[i].s,\n        isLayer,\n        animationId,\n        refKey,\n        addTransformation,\n        objectId,\n        depth,\n      );\n    } else {\n      if (currentObj[refKey].k[i].hasOwnProperty('e')) {\n        addGroupPositionTransform(\n          currentObj[refKey].k[i].t,\n          currentObj[refKey].k[i].e,\n          isLayer,\n          animationId,\n          refKey,\n          addTransformation,\n          objectId,\n          depth,\n        );\n      } else {\n        if (currentObj[refKey].k[i - 1].hasOwnProperty('e')) {\n          addGroupPositionTransform(\n            currentObj[refKey].k[i].t,\n            currentObj[refKey].k[i - 1].e,\n            isLayer,\n            animationId,\n            refKey,\n            addTransformation,\n            objectId,\n            depth,\n          );\n        }\n      }\n    }\n  }\n\n  return currentObj;\n}\n\nexport function getPosition(currentObj, parentObj, refKey, isLayer, animationId, addTransformation, objectId, depth) {\n  if (currentObj.hasOwnProperty(refKey)) {\n    if (currentObj[refKey].hasOwnProperty('x') && currentObj[refKey].hasOwnProperty('y')) {\n      currentObj = extrapolatePathPosition(\n        currentObj,\n        parentObj,\n        refKey,\n        isLayer,\n        animationId,\n        addTransformation,\n        objectId,\n        depth,\n      );\n    }\n    if (currentObj[refKey].hasOwnProperty('k')) {\n      if (currentObj[refKey].k.length > 1) {\n        if (currentObj[refKey].k[0].hasOwnProperty('s')) {\n          currentObj = extrapolateOffsetKeyframe(\n            currentObj,\n            refKey,\n            isLayer,\n            animationId,\n            addTransformation,\n            objectId,\n            depth,\n          );\n        }\n      }\n    }\n  }\n  return currentObj;\n}\n\nexport function prepShapeEl(shapeObj, referrer, animationId, addTransformation, depth) {\n  const newShape = document.createElementNS(xmlns, 'ellipse');\n  newShape.setAttribute('cx', shapeObj.p.k[0]);\n  newShape.setAttribute('cy', shapeObj.p.k[1]);\n  newShape.setAttribute('rx', shapeObj.s.k[0]);\n  newShape.setAttribute('ry', shapeObj.s.k[1]);\n  newShape.setAttribute('fill', 'transparent');\n  newShape.setAttribute('id', `${animationId}_shape${shapeObj._shape}`);\n  newShape.classList.add('ellipse');\n  referrer.prepend(newShape);\n  shapeObj._isShape = true;\n  return shapeObj;\n}\n\nexport function prepShapeElKeyframe(shapeObj, referrer, animationId, addTransformation, depth) {\n  return shapeObj;\n}\n\nexport function prepShapeSr(shapeObj, referrer, animationId, addTransformation, depth) {\n  const newShape = document.createElementNS(xmlns, 'path');\n  newShape.setAttribute('d', dataString);\n  newShape.setAttribute('fill', 'transparent');\n  newShape.setAttribute('id', `${animationId}_shape${shapeObj._shape}`);\n  newShape.classList.add('star');\n  referrer.prepend(newShape);\n  shapeObj._isShape = true;\n  return shapeObj;\n}\n\nexport function prepShapeSrKeyframe(shapeObj, referrer, animationId, addTransformation, depth) {\n  return shapeObj;\n}\n\nexport function prepShapeRc(shapeObj, referrer, animationId, addTransformation, depth) {\n  const newShape = document.createElementNS(xmlns, 'rect');\n  newShape.setAttribute('fill', 'transparent');\n\n  newShape.setAttribute('width', shapeObj.s.k[0]);\n  newShape.setAttribute('height', shapeObj.s.k[1]);\n  if (shapeObj.p.k.length > 0) {\n    newShape.setAttribute('x', shapeObj.p.k[0] + shapeObj.s.k[0] / 2);\n    newShape.setAttribute('y', shapeObj.p.k[1] + shapeObj.s.k[1] / 2);\n  }\n  newShape.setAttribute('id', `${animationId}_shape${shapeObj._shape}`);\n  newShape.classList.add('rectangle');\n  referrer.prepend(newShape);\n  shapeObj._isShape = true;\n  return shapeObj;\n}\n\nexport function prepShapeRcKeyframe(shapeObj, referrer, animationId, addTransformation, depth) {\n  return shapeObj;\n}\n\nexport function prepDataString(sourceObject, closed) {\n  var dataString = `M${sourceObject.v[0][0]},${sourceObject.v[0][1]}`;\n  for (var i = 1; i < sourceObject.v.length; i++) {\n    dataString = `${dataString} C${\n      sourceObject.v[i - 1][0] + sourceObject.o[i - 1][0]\n    },${sourceObject.v[i - 1][1] + sourceObject.o[i - 1][1]} ${\n      sourceObject.v[i][0] + sourceObject.i[i][0]\n    },${sourceObject.v[i][1] + sourceObject.i[i][1]} ${\n      sourceObject.v[i][0]\n    },${sourceObject.v[i][1]}`;\n  }\n  if (closed) {\n    dataString = `${dataString} C${\n      sourceObject.v[sourceObject.v.length - 1][0] +\n      sourceObject.o[sourceObject.v.length - 1][0]\n    },${\n      sourceObject.v[sourceObject.v.length - 1][1] +\n      sourceObject.o[sourceObject.v.length - 1][1]\n    } ${sourceObject.v[0][0] + sourceObject.i[0][0]},${\n      sourceObject.v[0][1] + sourceObject.i[0][1]\n    } ${sourceObject.v[0][0]},${sourceObject.v[0][1]}`;\n    dataString += ' Z';\n  }\n\n  return dataString;\n}\n\n\nfunction setDataString(animationId, sourceObj, shapeId, pathClosed, frame, hideThis) {\n  let transforms = getEmptyTransform();\n  transforms.isLayer = false;\n  if (! hideThis) {\n    transforms.isTween = true;\n  }\n  transforms.refObj = `${animationId}_shape${shapeId}`;\n  transforms.refObjOther = `${animationId}_shape${shapeId}`;\n  transforms.refObjSet = true;\n  transforms = findExistingTransform(transforms, animationId, frame);\n  if (hideThis) {\n    transforms.hide = true;\n  } else {\n    transforms.dataString = prepDataString(sourceObj, pathClosed);\n  }\n\n  return transforms;\n}\n\nexport function prepShapeSh(shapeObj, referrer, animationId, addTransformation, depth) {\n  if (shapeObj.ks.k.hasOwnProperty('v')) {\n  } else {\n    if (shapeObj.ks.k[0].hasOwnProperty('s')) {\n      shapeObj = extrapolateOffsetKeyframe(shapeObj, 'ks', false, animationId, -1, shapeObj, depth);\n      var dataString = '';\n      let totalK;\n      if (shapeObj.ks.k[shapeObj.ks.k.length - 1].hasOwnProperty('s')) {\n        totalK = shapeObj.ks.k.length;\n      } else {\n        totalK = shapeObj.ks.k.length - 1;\n      }\n      for (let kCount = 0; kCount < totalK; kCount++) {\n        /*\n        let transforms = getEmptyTransform();\n        transforms.isLayer = false;\n        transforms.isTween = true;\n        transforms.refObj = `${animationId}_shape${shapeObj._shape}`;\n        transforms.refObjOther = `${animationId}_shape${shapeObj._shape}`;\n        transforms.refObjSet = true;\n        transforms = findExistingTransform(transforms, animationId, shapeObj.ks.k[kCount].t);\n        var dataString = `M${shapeObj.ks.k[kCount].s[0].v[0][0]},${shapeObj.ks.k[kCount].s[0].v[0][1]}`;\n        for (var i = 1; i < shapeObj.ks.k[kCount].s[0].v.length; i++) {\n          dataString = `${dataString} C${\n            shapeObj.ks.k[kCount].s[0].v[i - 1][0] + shapeObj.ks.k[kCount].s[0].o[i - 1][0]\n          },${shapeObj.ks.k[kCount].s[0].v[i - 1][1] + shapeObj.ks.k[kCount].s[0].o[i - 1][1]} ${\n            shapeObj.ks.k[kCount].s[0].v[i][0] + shapeObj.ks.k[kCount].s[0].i[i][0]\n          },${shapeObj.ks.k[kCount].s[0].v[i][1] + shapeObj.ks.k[kCount].s[0].i[i][1]} ${\n            shapeObj.ks.k[kCount].s[0].v[i][0]\n          },${shapeObj.ks.k[kCount].s[0].v[i][1]}`;\n        }\n        if (shapeObj.ks.k[0].s[0].c) {\n          dataString = `${dataString} C${\n            shapeObj.ks.k[kCount].s[0].v[shapeObj.ks.k[kCount].s[0].v.length - 1][0] +\n            shapeObj.ks.k[kCount].s[0].o[shapeObj.ks.k[kCount].s[0].v.length - 1][0]\n          },${\n            shapeObj.ks.k[kCount].s[0].v[shapeObj.ks.k[kCount].s[0].v.length - 1][1] +\n            shapeObj.ks.k[kCount].s[0].o[shapeObj.ks.k[kCount].s[0].v.length - 1][1]\n          } ${shapeObj.ks.k[kCount].s[0].v[0][0] + shapeObj.ks.k[kCount].s[0].i[0][0]},${\n            shapeObj.ks.k[kCount].s[0].v[0][1] + shapeObj.ks.k[kCount].s[0].i[0][1]\n          } ${shapeObj.ks.k[kCount].s[0].v[0][0]},${shapeObj.ks.k[kCount].s[0].v[0][1]}`;\n          dataString += ' Z';\n        }\n        */\n\n        let transforms = setDataString(animationId, shapeObj.ks.k[kCount].s[0], shapeObj._shape, shapeObj.ks.k[0].s[0].c, shapeObj.ks.k[kCount].t, false);\n        if (kCount == 0) {\n          var newShape = document.createElementNS(xmlns, 'path');\n          newShape.setAttribute('fill', 'transparent');\n          newShape.setAttribute('id', `${animationId}_shape${shapeObj._shape}`);\n          newShape.setAttribute('d', dataString);\n          newShape.classList.add('shape');\n          referrer.prepend(newShape);\n          shapeObj._isShape = true;\n        }\n\n        if (shapeObj.ks.k[kCount].t > animation[animationId]._totalFrames || shapeObj.ks.k[kCount].t < 0) {\n          break;\n        }\n        animation[animationId]._scene[parseInt(shapeObj.ks.k[kCount].t)]._transform.push(transforms);\n        if (kCount == 0) {\n          animation[animationId]._scene[1]._transform.push(transforms);\n        }\n      }\n    }\n    return shapeObj;\n  }\n\n  var dataString = `M${shapeObj.ks.k.v[0][0]},${shapeObj.ks.k.v[0][1]}`;\n  for (var i = 1; i < shapeObj.ks.k.v.length; i++) {\n    dataString = `${dataString} C${shapeObj.ks.k.v[i - 1][0] + shapeObj.ks.k.o[i - 1][0]},${\n      shapeObj.ks.k.v[i - 1][1] + shapeObj.ks.k.o[i - 1][1]\n    } ${shapeObj.ks.k.v[i][0] + shapeObj.ks.k.i[i][0]},${shapeObj.ks.k.v[i][1] + shapeObj.ks.k.i[i][1]} ${\n      shapeObj.ks.k.v[i][0]\n    },${shapeObj.ks.k.v[i][1]}`;\n  }\n  if (shapeObj.ks.k.c) {\n    dataString = `${dataString} C${\n      shapeObj.ks.k.v[shapeObj.ks.k.v.length - 1][0] + shapeObj.ks.k.o[shapeObj.ks.k.v.length - 1][0]\n    },${shapeObj.ks.k.v[shapeObj.ks.k.v.length - 1][1] + shapeObj.ks.k.o[shapeObj.ks.k.v.length - 1][1]} ${\n      shapeObj.ks.k.v[0][0] + shapeObj.ks.k.i[0][0]\n    },${shapeObj.ks.k.v[0][1] + shapeObj.ks.k.i[0][1]} ${shapeObj.ks.k.v[0][0]},${shapeObj.ks.k.v[0][1]}`;\n    dataString += ' Z';\n  }\n  shapeObj._data = dataString;\n  var newShape = document.createElementNS(xmlns, 'path');\n  newShape.setAttribute('fill', 'transparent');\n  newShape.setAttribute('id', `${animationId}_shape${shapeObj._shape}`);\n  newShape.setAttribute('d', dataString);\n  newShape.classList.add('shape');\n  referrer.prepend(newShape);\n  shapeObj._isShape = true;\n  return shapeObj;\n}\n\nexport function prepShapeShKeyframe(shapeObj, referrer, animationId, depth) {\n  return shapeObj;\n}\n\nexport function prepShape(shapeObj, referrer, animationId, isMasked, depth) {\n  if (shapeObj.ty == 'fl') {\n    if (shapeObj.c.k.hasOwnProperty('s')) {\n      shapeObj = getPosition(shapeObj, null, 'c', false, animationId, 3, shapeObj, depth);\n    }\n  }\n  if (shapeObj.ty == 'tr') {\n    if (shapeObj.hasOwnProperty('a')) {\n      if (shapeObj.a.k.hasOwnProperty('s')) {\n        shapeObj = getPosition(shapeObj, null, 'a', false, animationId, 2, shapeObj, depth);\n        if (shapeObj.a.k[0].t > 0) {\n          shapeObj._startI = true;\n        }\n      }\n      if (shapeObj.a.k.length > 1) {\n        shapeObj._anchorX = shapeObj.a.k[0];\n        shapeObj._anchorY = shapeObj.a.k[1];\n      }\n    }\n    if (shapeObj.hasOwnProperty('p')) {\n      if (shapeObj.p.k.hasOwnProperty('s')) {\n        shapeObj = getPosition(shapeObj, null, 'p', false, animationId, 2, shapeObj, depth);\n        if (shapeObj.p.k[0].t > 0) {\n          shapeObj._startI = true;\n        }\n      }\n    }\n  }\n\n  if (shapeObj.ty == 'sh') {\n    if (shapeObj.hasOwnProperty('ks') && shapeObj.ks.k.length > 1) {\n      shapeObj = prepShapeShKeyframe(shapeObj, referrer, animationId, depth);\n    }\n    shapeObj = prepShapeSh(shapeObj, referrer, animationId, depth);\n  }\n\n  if (shapeObj.ty == 'rc') {\n    if (shapeObj.hasOwnProperty('ks') && shapeObj.ks.k.length > 1) {\n      shapeObj = prepShapeRcKeyframe(shapeObj, referrer, animationId, depth);\n    }\n    shapeObj = prepShapeRc(shapeObj, referrer, animationId, depth);\n  }\n\n  if (shapeObj.ty == 'el') {\n    if (shapeObj.hasOwnProperty('ks') && shapeObj.ks.k.length > 1) {\n      shapeObj = prepShapeRcKeyframe(shapeObj, referrer, animationId, depth);\n    }\n    shapeObj = prepShapeEl(shapeObj, referrer, animationId, depth);\n  }\n\n  return shapeObj;\n}\n\nexport function createGradientDef(start, end, opacity, gradient, radial, animationId, depth) {\n  animation[animationId].gradientCount++;\n  const newDefId = `${animationId}_gradient${animation[animationId].gradientCount}`;\n  var newDef;\n  if (radial == 2) {\n    newDef = document.createElementNS(xmlns, 'radialGradient');\n    if (gradient.k.k[0].hasOwnProperty('s')) {\n      if (!Number.isNaN(start.k[0] != NaN)) {\n        newDef.setAttribute('x1', start.k[0]);\n      }\n      if (!Number.isNaN(end.k[0])) {\n        newDef.setAttribute('x2', end.k[0]);\n      }\n      if (!Number.isNaN(start.k[1])) {\n        newDef.setAttribute('y1', start.k[1]);\n      }\n      if (!Number.isNaN(end.k[1])) {\n        newDef.setAttribute('y2', end.k[1]);\n      }\n    }\n  } else {\n    newDef = document.createElementNS(xmlns, 'linearGradient');\n    if (gradient.k.k[0].hasOwnProperty('s')) {\n      newDef.setAttribute('spreadMethod', 'pad');\n      newDef.setAttribute('gradientUnits', 'userSpaceOnUse');\n      if (!Number.isNaN(start.k[0])) {\n        newDef.setAttribute('x1', start.k[0]);\n      }\n      if (!Number.isNaN(end.k[0])) {\n        newDef.setAttribute('x2', end.k[0]);\n      }\n      if (!Number.isNaN(start.k[1])) {\n        newDef.setAttribute('y1', start.k[1]);\n      }\n      if (!Number.isNaN(end.k[1])) {\n        newDef.setAttribute('y2', end.k[1]);\n      }\n    }\n  }\n  newDef.setAttribute('id', newDefId);\n  animation[animationId].defs.prepend(newDef);\n  if (gradient.k.k[0].hasOwnProperty('s')) {\n    var firstRun = true;\n    gradient = extrapolateOffsetKeyframe(gradient, 'k', false, animationId, -1, gradient, depth);\n    for (var j = 0; j < gradient.k.k.length - 1; j++) {\n      const offsets = [];\n      const styles = [];\n      const opacities = [];\n      var transforms = getEmptyFillTransform();\n      transforms.offsets = [];\n      transforms.styles = [];\n      if (gradient.k.k[j].hasOwnProperty('s')) {\n        for (var i = 0; i < gradient.p; i++) {\n          if (gradient.k.k[j].s[i * 4 + 0] == 0 || isNaN(gradient.k.k[j].s[i * 4 + 0])) {\n            offsets.push(\"0%\");\n          } else {\n            offsets.push(`${gradient.k.k[j].s[i * 4 + 0] * 100}%`);\n          }\n          styles.push(\n            `stop-color:rgb(${parseInt(gradient.k.k[j].s[i * 4 + 1] * 255)},${parseInt(gradient.k.k[j].s[i * 4 + 2] * 255)},${parseInt(\n              gradient.k.k[j].s[i * 4 + 3] * 255,\n            )});`,\n          );\n          opacities.push('stop-opacity:1;');\n        }\n        if (gradient.k.k[j].s.length > gradient.p * 4) {\n          for (var i = 0; i < gradient.p; i++) {\n            opacities[i] = `stop-opacity:${gradient.k.k[j].s[i * 2 + gradient.p * 4 + 1]};`;\n          }\n        }\n        transforms.fillObj = newDefId;\n        for (var i = 0; i < gradient.p; i++) {\n          transforms.offsets.push(offsets[i]);\n          transforms.styles.push(styles[i] + opacities[i]);\n        }\n        transforms.isGradient = true;\n        animation[animationId]._scene[parseInt(gradient.k.k[j].t)]._transform.push(transforms);\n        if (firstRun) {\n          for (var i = 0; i < gradient.p; i++) {\n            const newStop = document.createElementNS(xmlns, 'stop');\n            newStop.setAttribute('offset', offsets[i]);\n            newStop.setAttribute('style', styles[i] + opacities[i]);\n            newDef.append(newStop);\n          }\n          firstRun = false;\n        }\n      }\n    }\n  } else {\n    const offsets = [];\n    const styles = [];\n    const opacities = [];\n    for (var i = 0; i < gradient.p; i++) {\n      if (gradient.k.k[i * 4 + 0] > 0) {\n        offsets.push(`${gradient.k.k[i * 4 + 0] * 100}%`);\n      } else {\n        offsets.push(\"0%\");\n      }\n      styles.push(\n        `stop-color:rgb(${parseInt(gradient.k.k[i * 4 + 1] * 255)},${parseInt(gradient.k.k[i * 4 + 2] * 255)},${parseInt(\n          gradient.k.k[i * 4 + 3] * 255,\n        )});`,\n      );\n      opacities.push('stop-opacity:1;');\n    }\n    if (gradient.k.k.length > gradient.p * 4) {\n      for (var i = 0; i < gradient.p; i++) {\n        opacities[i] = `stop-opacity:${gradient.k.k[i * 2 + gradient.p * 4 + 1]};`;\n      }\n    }\n    for (var i = 0; i < gradient.p; i++) {\n      const newStop = document.createElementNS(xmlns, 'stop');\n      newStop.setAttribute('offset', offsets[i]);\n      newStop.setAttribute('style', styles[i] + opacities[i]);\n      newDef.append(newStop);\n    }\n  }\n\n  return `url(#${newDefId})`;\n}\n\n// Enum for line cap types.\nconst lcEnum = {\n  1: 'butt',\n  2: 'round',\n  3: 'square',\n};\n\n// Enum for line join options.\nconst ljEnum = {\n  1: 'miter',\n  2: 'round',\n  3: 'bevel',\n};\n\n/**\n * Create all the parameters for stroking a shape.\n * \n * @param {JSON} color An object that holds the parameters for the color definition.\n * @param {JSON} opacity An object that holds the opacity parameter.\n * @param {JSON} width An object that describes the width of the stroke.\n * @param {integer} lineCap Enum key that describes the line cap type.\n * @param {integer} lineJoin Enum key that describes the line join type.\n * @param {integer} miterLimit The miter limit parameter.\n * @returns {JSON} strokeString An object that lists all the parameters needed for stroking.\n */\nexport function getStrokeString(shapeObj, animationId, depth, shapeGroup) {\n  const strokeString = {\n    color: '',\n    opacity: 1,\n    width: 1,\n    lineCap: 'round',\n    lineJoin: 'round',\n    miterLimit: 0,\n  };\n\n  strokeString.color = `rgb(${shapeObj.c.k[0] * 255},${shapeObj.c.k[1] * 255},${shapeObj.c.k[2] * 255})`;\n  strokeString.opacity = shapeObj.o.k / 100;\n  if (shapeObj.w.k.length > 1 && shapeObj.w.k[0].hasOwnProperty('s')) {\n    let totalK;\n    shapeObj = extrapolateOffsetKeyframe(shapeObj, 'w', false, animationId, -1, shapeObj, depth);\n    if (shapeObj.w.k[shapeObj.w.k.length - 1].hasOwnProperty('s')) {\n      totalK = shapeObj.w.k.length;\n    } else {\n      totalK = shapeObj.w.k.length - 1;\n    }\n    for (let sCount = 0; sCount < shapeGroup.length; sCount++) {\n      if (shapeGroup[sCount]._isShape) {\n        for (let kCount = 0; kCount < shapeObj.w.k.length; kCount++) {\n          let transforms = getEmptyTransform();\n          transforms.isLayer = false;\n          transforms.isTween = false;\n          transforms.refObj = `${animationId}_shape${shapeGroup[sCount]._shape}`;\n          transforms.refObjOther = `${animationId}_shape${shapeGroup[sCount]._shape}`;\n          transforms.refObjSet = true;\n\n          transforms = findExistingTransform(transforms, animationId, shapeObj.w.k[kCount].t);\n          transforms.strokeWidth = shapeObj.w.k[kCount].s;\n          if (shapeObj.w.k[kCount].t > animation[animationId]._totalFrames || shapeObj.w.k[kCount].t < 0) {\n            break;\n          }\n          animation[animationId]._scene[parseInt(shapeObj.w.k[kCount].t)]._transform.push(transforms);\n        }\n      }\n    }\n    strokeString.width = shapeObj.w.k[0].s;\n  } else {\n    strokeString.width = shapeObj.w.k;\n  }\n  strokeString.lineCap = lcEnum[shapeObj.lc];\n  strokeString.lineJoin = lcEnum[shapeObj.lj];\n  if (strokeString.lineJoin == 1) {\n    strokeString.miterLimit = strokeString.lineJoin;\n  }\n  return strokeString;\n}\n\n/**\n * Generate a color string that conforms to the format for 'color' property defined by SVG 1.1.\n * \n * @param {float} redVal The weight of red color as a fraction of 1.\n * @param {float} greenVal The weight of green color as a fraction of 1.\n * @param {float} blueVal The weight of blue color as a fraction of 1.\n * @returns {string} color A valid color value for the 'color' property defined by SVG 1.1.\n */\nexport function getColorString(redVal, greenVal, blueVal) {\n  const color = `rgb(${redVal * 255},${greenVal * 255},${blueVal * 255})`;\n  return color;\n}\n\n/**\n * Set the stroke for a group of shapes.\n * \n * @param {JSON} shapesGroup An array of shapes.\n * @param {JSON} strokeToSet An object that has the parameters that describe styling for the stroke.\n * @param {integer} animationId The serial number of the current animation.\n * @param {boolean} isGradient If 'true', then this stroke has a gradient shading.\n */\nexport function setShapeStrokes(shapesGroup, strokeToSet, animationId, isGradient) {\n  for (let i = 0; i < shapesGroup.length; i++) {\n    if (shapesGroup[i]._isShape) {\n      document.getElementById(`${animationId}_shape${shapesGroup[i]._shape}`).setAttribute('stroke', strokeToSet.color);\n      document\n        .getElementById(`${animationId}_shape${shapesGroup[i]._shape}`)\n        .setAttribute('stroke-width', strokeToSet.width);\n      document\n        .getElementById(`${animationId}_shape${shapesGroup[i]._shape}`)\n        .setAttribute('stroke-linecap', strokeToSet.lineCap);\n      document\n        .getElementById(`${animationId}_shape${shapesGroup[i]._shape}`)\n        .setAttribute('stroke-linejoin', strokeToSet.lineJoin);\n      document\n        .getElementById(`${animationId}_shape${shapesGroup[i]._shape}`)\n        .setAttribute('stroke-opacity', strokeToSet.opacity);\n      if (strokeToSet.lineJoin == 1) {\n        document\n          .getElementById(`${animationId}_shape${shapesGroup[i]._shape}`)\n          .setAttribute('stroke-miterlimit', strokeToSet.miterLimit);\n      }\n    }\n  }\n}\n\n/**\n * Set the color for a group of shapes.\n * \n * @param {JSON} shapesGroup An array of shapes.\n * @param {string} colorToSet A valid color value for the 'color' property defined by SVG 1.1.\n * @param {integer} animationId The serial number of the current animation.\n * @param {boolean} isGradient If 'true', then the color defintion is for a gradient.\n * @param {boolean} isMasked If 'true', then the color attribute is for a mask.\n */\nexport function setShapeColors(shapesGroup, colorToSet, animationId, isGradient, isMasked) {\n  for (let i = 0; i < shapesGroup.length; i++) {\n    if (shapesGroup[i]._isShape && typeof colorToSet !== 'undefined') {\n      document.getElementById(`${animationId}_shape${shapesGroup[i]._shape}`).setAttribute('fill', colorToSet);\n      document.getElementById(`${animationId}_shape${shapesGroup[i]._shape}`).setAttribute('fill-opacity', 1);\n    }\n  }\n}\n\n\nfunction getTrim(shapeObj, animationId, depth, shapeGroup) {\n  if (shapeObj.e.k.length > 1 && shapeObj.e.k[0].hasOwnProperty('s')) {\n    shapeObj = extrapolateOffsetKeyframe(shapeObj, 'e', false, animationId, -1, shapeObj, depth);\n  }\n  if (shapeObj.s.k.length > 1 && shapeObj.s.k[0].hasOwnProperty('s')) {\n    shapeObj = extrapolateOffsetKeyframe(shapeObj, 's', false, animationId, -1, shapeObj, depth);\n  }\n\n  return shapeObj;\n}\n\n\n\n\nfunction getSegment(p1, c1, c2, p2, t0, t1) {\n  let u0 = 1.0 - t0;\n  let u1 = 1.0 - t1;\n\n  let qxa = (p1[0] * u0 * u0) + ((c1[0] + p1[0]) * 2 * t0 * u0) + ((c2[0] + p2[0]) * t0 * t0);\n  let qxb = (p1[0] * u1 * u1) + ((c1[0] + p1[0]) * 2 * t1 * u1) + ((c2[0] + p2[0]) * t1 * t1);\n  let qxc = ((c1[0] + p1[0]) * u0 * u0) + ((c2[0] + p2[0]) * 2 * t0 * u0) + (p2[0] * t0 * t0);\n  let qxd = ((c1[0] + p1[0]) * u1 * u1) + ((c2[0] + p2[0]) * 2 * t1 * u1) + (p2[0] * t1 * t1);\n\n  let qya = (p1[1] * u0 * u0) + ((c1[1] + p1[1]) * 2 * t0 * u0) + ((c2[1] + p2[1]) * t0 * t0);\n  let qyb = (p1[1] * u1 * u1) + ((c1[1] + p1[1]) * 2 * t1 * u1) + ((c2[1] + p2[1]) * t1 * t1);\n  let qyc = ((c1[1] + p1[1]) * u0 * u0) + ((c2[1] + p2[1]) * 2 * t0 * u0) + (p2[1] * t0 * t0);\n  let qyd = ((c1[1] + p1[1]) * u1 * u1) + ((c2[1] + p2[1]) * 2 * t1 * u1) + (p2[1] * t1 * t1);\n\n  let segment = [];\n  segment.push( [(qxa * u0) + (qxc * t0), (qya * u0) + (qyc * t0)] ); // p1\n  if (p1[0] == p2[0] && c1[0] == c2[0]) {\n    segment[0][0] = p1[0];\n  }\n  if (p1[1] == p2[1] && c1[1] == c2[1]) {\n    segment[0][1] = p1[1];\n  }\n  segment.push( [(qxa * u1) + (qxc * t1), (qya * u1) + (qyc * t1)] ); // c1\n\n  segment.push( [(qxb * u0) + (qxd * t0), (qyb * u0) + (qyd * t0)] ); // c2\n\n  segment.push( [(qxb * u1) + (qxd * t1), (qyb * u1) + (qyd * t1)] ); // p2\n  if (p1[0] == p2[0] && c1[0] == c2[0]) {\n    segment[3][0] = p1[0];\n  }\n  if (p1[1] == p2[1] && c1[1] == c2[1]) {\n    segment[3][1] = p1[1];\n  }\n  segment[1][0] -= segment[0][0];\n  segment[1][1] -= segment[0][1];\n  segment[2][0] -= segment[3][0];\n  segment[2][1] -= segment[3][1];\n\n  return segment;\n}\n\nfunction getLength(animationId, depth, shapesGroup, shapeIdx, startIdx, endIdx, returnedKeyframeObj, fullBezierLength) {\n  let bezierLength = 0;\n  returnedKeyframeObj = bezierCurve(\n    shapesGroup[shapeIdx].ks.k.v[startIdx],\n    shapesGroup[shapeIdx].ks.k.o[startIdx],\n    shapesGroup[shapeIdx].ks.k.i[endIdx],\n    shapesGroup[shapeIdx].ks.k.v[endIdx],\n    1,\n    50,\n    false,\n    animationId,\n    's',\n    -1,\n    shapesGroup[shapeIdx].ks.k,\n    depth,\n    'length',\n  );\n  for (let k = 0; k < returnedKeyframeObj.length - 1; k++) {\n    bezierLength = bezierLength + arcLength(returnedKeyframeObj[k].s, returnedKeyframeObj[k + 1].s);\n    //debug(() => [\"blut\", bezierLength]);\n  }\n  bezierLength = bezierLength + arcLength(shapesGroup[shapeIdx].ks.k.v[startIdx], returnedKeyframeObj[0].s);\n  //debug(() => [\"blut\", bezierLength]);\n  bezierLength = bezierLength + arcLength(returnedKeyframeObj[returnedKeyframeObj.length - 1].s, shapesGroup[shapeIdx].ks.k.v[endIdx]);\n  fullBezierLength = fullBezierLength + bezierLength;\n  shapesGroup[shapeIdx].ks.k.v[startIdx]._l = bezierLength;\n  return [shapesGroup, returnedKeyframeObj, fullBezierLength];\n}\n\nfunction setTrim(shapesGroup, trimToSet, animationId, depth) {\n  debug(() => [\"entered------------------------------------------------------\"]);\n  for (let i = 0; i < shapesGroup.length; i++) {\n    if (shapesGroup[i].ty == 'gr') {\n      //panda.log(\"entering group\");\n      setTrim(shapesGroup[i].it, trimToSet, animationId, depth);\n    } else {\n      if (shapesGroup[i]._isShape) {\n        let minShapeT = -1;\n        let fullBezierLength = 0;\n        let returnedKeyframeObj = {};\n        if (shapesGroup[i].ty == 'sh' && shapesGroup[i].ks.k.hasOwnProperty('v') && shapesGroup[i].ks.k.v.length > 1) {\n          debug(() => [\"GLLL\", shapesGroup[i].ks]);\n          for (let j = 0; j < shapesGroup[i].ks.k.v.length - 1; j++) {\n            /*\n            let bezierLength = 0;\n            returnedKeyframeObj = bezierCurve(\n              shapesGroup[i].ks.k.v[j],\n              shapesGroup[i].ks.k.o[j],\n              shapesGroup[i].ks.k.i[j + 1],\n              shapesGroup[i].ks.k.v[j + 1],\n              1,\n              50,\n              false,\n              animationId,\n              's',\n              -1,\n              shapesGroup[i].ks.k,\n              depth,\n              'length',\n            );\n            for (let k = 0; k < returnedKeyframeObj.length - 1; k++) {\n              bezierLength = bezierLength + arcLength(returnedKeyframeObj[k].s, returnedKeyframeObj[k + 1].s);\n              debug(() => [\"blut\", bezierLength]);\n            }\n            bezierLength = bezierLength + arcLength(shapesGroup[i].ks.k.v[j], returnedKeyframeObj[0].s);\n            debug(() => [\"blut\", bezierLength]);\n            bezierLength = bezierLength + arcLength(returnedKeyframeObj[returnedKeyframeObj.length - 1].s, shapesGroup[i].ks.k.v[j + 1]);\n            fullBezierLength = fullBezierLength + bezierLength;\n            shapesGroup[i].ks.k.v[j]._l = bezierLength;\n            debug(() => [\"blut\", bezierLength]);\n            */\n            [shapesGroup, returnedKeyframeObj, fullBezierLength] = \n              getLength(animationId, depth, shapesGroup, i, j, j + 1, returnedKeyframeObj, fullBezierLength)\n            //debug(() => [\"GOTL\", returnedKeyframeObj, fullBezierLength]);\n          }\n          if (shapesGroup[i].ks.k.c == true) {\n            [shapesGroup, returnedKeyframeObj, fullBezierLength] = \n              getLength(animationId, depth, shapesGroup, i, shapesGroup[i].ks.k.v.length - 1, 0, returnedKeyframeObj, fullBezierLength)\n          }\n\n          let minT = -1;\n          let maxT = -1;\n          if (trimToSet.s.k.length > 1 && trimToSet.s.k[0].t < minT) {\n            minT = trimToSet.s.k[0].t;\n          }\n          if (minT == -1 && trimToSet.s.k.length > 1) {\n            //debug(() => ['set minT', trimToSet.s.k[0].t]);\n            minT = trimToSet.s.k[0].t;\n          }\n          if (minT == -1 && trimToSet.e.k.length > 1) {\n            debug(() => ['set minT at end', trimToSet.e.k[0].t]);\n            minT = trimToSet.e.k[0].t;\n          }\n          if (trimToSet.s.k.length > 1 && trimToSet.s.k[trimToSet.s.k.length - 1].t > maxT) {\n            maxT = trimToSet.s.k[trimToSet.s.k.length - 1].t;\n          }\n          if (trimToSet.e.k.length > 1 && trimToSet.e.k[trimToSet.e.k.length - 1].t > maxT) {\n            maxT = trimToSet.e.k[trimToSet.e.k.length - 1].t;\n          }\n\n          if (minT == -1) {\n            if (minT == maxT) {\n              continue;\n            } else {\n              minT = 0;\n            }\n          }\n          //panda.log(\"maxmin \", minT, maxT);\n\n          let sIndex = -1;\n          let eIndex = -1;\n\n          let tempK = Object.assign({}, shapesGroup[i].ks.k);\n          debug(() => ['stuff', i, minT, maxT, fullBezierLength, tempK, trimToSet]);\n\n          minShapeT = minT;\n          for (let t = minT; t <= maxT; t++) {\n            \n            let curSL = 0;\n            let curEL = 0;\n            let startShapeIndex = -1;\n            let endShapeIndex = -1;\n            let tDelta = 0;\n            let hideThis = false;\n  \n            if (trimToSet.s.k.length > 1 && sIndex < trimToSet.s.k.length - 2 && t >= trimToSet.s.k[0].t) {\n              sIndex++;\n            }\n            if (trimToSet.e.k.length > 1 && eIndex < trimToSet.e.k.length - 2 && t >= trimToSet.e.k[0].t) {\n              eIndex++;\n              //debug(() => ['incr', trimToSet.e.k[eIndex].t, t, eIndex]);\n            }\n            let startSegment = [];\n            let endSegment = [];\n\n            if (sIndex >= 0 && trimToSet.s.k.length > 1 && trimToSet.s.k[sIndex].t == t && trimToSet.s.k[sIndex].hasOwnProperty('s')) {\n              curSL = fullBezierLength - (fullBezierLength * (trimToSet.s.k[sIndex].s[0]) / 100);\n              debug(() => ['start', t, trimToSet, tempK, curSL]);\n              if (trimToSet.s.k[sIndex].s[0] == 0) {\n                debug(() => ['HIDE']);\n                hideThis = true;\n              }\n              tDelta = trimToSet.s.k[sIndex + 1].t - trimToSet.s.k[sIndex].t;\n              let tSeg = 1 / tDelta;\n              let startIdx;\n              let initIdx = 1;\n              if (shapesGroup[i].ks.k.c == true) {\n                initIdx = 0;\n              }\n              for (let j = initIdx; j < tempK.v.length; j++) {\n                if (j == 0) {\n                  startIdx = tempK.v.length - 1;\n                } else {\n                  startIdx = j - 1;\n                }\n                debug(() => ['circling', curSL, tempK.v[startIdx]._l]);\n                if (curSL < tempK.v[startIdx]._l) {\n                  startShapeIndex = j;\n                  startSegment = getSegment(tempK.v[startIdx], tempK.o[startIdx], tempK.i[j], tempK.v[j], ((tempK.v[startIdx]._l - curSL) / tempK.v[startIdx]._l), 0.999999);\n                  debug(() => ['hup', t, j, tempK.v[j]._l, startSegment, (tempK.i.length - startShapeIndex), tempK, startShapeIndex]);\n                  break;\n                } else {\n                  if (tempK.v[startIdx]._l === undefined) {\n                  } else {\n                    curSL = curSL - tempK.v[startIdx]._l;\n                    /*if (j == tempK.v.length - 1) {\n                      startShapeIndex = j;\n                    }*/\n                  }\n                }\n              }\n            }\n\n            if (eIndex >= 0 && trimToSet.e.k.length > 1 && trimToSet.e.k[eIndex].t == t && trimToSet.e.k[eIndex].hasOwnProperty('s')) {\n              debug(() => ['end', t, trimToSet.e.k[eIndex]]);\n              curEL = fullBezierLength - (fullBezierLength * (trimToSet.e.k[eIndex].s[0] / 100));\n              if (trimToSet.e.k[eIndex].s[0] == 0) {\n                hideThis = true;\n              }\n              tDelta = trimToSet.e.k[eIndex + 1].t - trimToSet.e.k[eIndex].t;\n              let tSeg = 1 / tDelta;\n              debug(() => ['delta', t, trimToSet.e.k[eIndex].t, trimToSet.e.k[eIndex + 1].t, fullBezierLength, curEL, tempK]);\n              let endIdx;\n              let initIdx = tempK.v.length - 2;\n              if (shapesGroup[i].ks.k.c == true) {\n                initIdx = tempK.v.length - 1;\n              }\n\n              for (let j = initIdx; j >= 0; j--) {\n                debug(() => ['circling' ]);\n                if (j == tempK.v.length - 1) {\n                  endIdx = 0;\n                } else {\n                  endIdx = j + 1;\n                }\n                if (curEL < tempK.v[j]._l) {\n                  endShapeIndex = j;\n                  endSegment = getSegment(tempK.v[j], tempK.o[j], tempK.i[endIdx], tempK.v[endIdx], 0.000001, ((tempK.v[j]._l - curEL) / tempK.v[j]._l));\n                  debug(() => ['hup', t, j, ((tempK.v[j]._l - curEL) / tempK.v[j]._l), endSegment, (tempK.i.length - endShapeIndex), tempK, endShapeIndex]);\n                  break;\n                } else {\n                  curEL = curEL - tempK.v[j]._l;\n                }\n              }\n            }\n\n            let sourceK = JSON.parse(JSON.stringify(tempK));\n            let startToTrim = sourceK.v.length;\n            if (endShapeIndex >= 0) {\n              startToTrim = startToTrim - (startToTrim - (endShapeIndex));\n              sourceK.o[endShapeIndex] = endSegment[1];\n              sourceK.i.splice(endShapeIndex + 1, ((sourceK.i.length - 1) - endShapeIndex), endSegment[2]);\n              sourceK.o.splice(endShapeIndex + 1, ((sourceK.o.length - 1) - endShapeIndex), [0,0]);\n              sourceK.v.splice(endShapeIndex + 1, ((sourceK.v.length - 1) - endShapeIndex), endSegment[3]);\n              debug(() => ['etempK', t, sourceK]);\n            }\n\n            if (startShapeIndex >= 0) {\n\n              /*sourceK.i.splice(startShapeIndex - 1, startToTrim - startShapeIndex, [0, 0]);\n              sourceK.o.splice(startShapeIndex - 1, startToTrim - startShapeIndex, startSegment[1]);\n              sourceK.v.splice(startShapeIndex - 1, startToTrim - startShapeIndex, startSegment[0]);*/\n              sourceK.i.splice(0, startShapeIndex, [0, 0]);\n              sourceK.o.splice(0, startShapeIndex, startSegment[1]);\n              sourceK.v.splice(0, startShapeIndex, startSegment[0]);\n              sourceK.i[startShapeIndex] = startSegment[2];\n              debug(() => ['stempK', t, startShapeIndex, sourceK]);\n            }\n\n            startShapeIndex = -1;\n            endShapeIndex = -1;\n\n            /*\n            let startInc = false;\n            let middleInc = false;\n            if (trimToSet.s.k.length > 1) {\n              startInc = true;\n              sourceK.i.push(tempK.i[startShapeIndex]);\n              sourceK.o.push(startSegment[1]);\n              sourceK.v.push(startSegment[0]);\n            }\n\n            if (endShapeIndex - startShapeIndex > 0 && startInc) {\n              middleInc = true;\n              for (let j = startShapeIndex + 1; j < endShapeIndex; j++) {\n                sourceK.i.push(tempK.i[j]);\n                sourceK.o.push(tempK.o[j]);\n                sourceK.v.push(tempK.v[j]);\n              }\n            }\n\n            if (trimToSet.e.k.length > 1) {\n              if (! startInc && ! middleInc) {\n                for (let j = startShapeIndex; j < endShapeIndex; j++) {\n                  sourceK.i.push(tempK.i[j]);\n                  sourceK.o.push(tempK.o[j]);\n                  sourceK.v.push(tempK.v[j]);\n                }\n              }\n              sourceK.i.push(tempK.i[endShapeIndex]);\n              sourceK.o.push(endSegment[1]);\n              sourceK.v.push(endSegment[0]);\n            }\n            */\n            let transforms;\n            if (sourceK.v.length > 1 && ! hideThis) {\n              debug(() => ['setString', sourceK, t]);\n              if (shapesGroup[i].ks.k.c && t >= maxT) {\n                transforms = setDataString(animationId, sourceK, shapesGroup[i]._shape, true, t, false);\n              } else {  \n                transforms = setDataString(animationId, sourceK, shapesGroup[i]._shape, false, t, false);\n              }\n              \n              if (t > animation[animationId]._totalFrames || t < 0) {\n                break;\n              }\n              if (t == minT && t >= 0 && trimToSet.s.k.length > 1 && trimToSet.s.k[0].t == t) {\n                debug(() => ['FIRST', sourceK]);\n                for (let n = 0; n < t; n++) {\n                  //animation[animationId]._scene[parseInt(n)]._transform.push(transforms);\n                  updateTransform(transforms, animationId, n);\n                }\n              }\n              animation[animationId]._scene[parseInt(t)]._transform.push(transforms);\n              //updateTransform(transforms, animationId, t);\n            } else {\n              debug(() => ['hideit1', sourceK, t]);\n              \n              if (shapesGroup[i].ks.k.c && t >= maxT) {\n                transforms = setDataString(animationId, sourceK, shapesGroup[i]._shape, true, t, true);\n              } else {\n                transforms = setDataString(animationId, sourceK, shapesGroup[i]._shape, false, t, true);\n              }\n              if (t == minT && t >= 0) {\n                debug(() => ['hideit', sourceK, t]);\n                for (let n = 0; n < t; n++) {\n                  //animation[animationId]._scene[parseInt(n)]._transform.push(transforms);\n                  updateTransform(transforms, animationId, n);\n                  debug(() => ['hiding']);\n                }                \n              }\n              //updateTransform(transforms, animationId, t);\n              animation[animationId]._scene[parseInt(t)]._transform.push(transforms);\n            }\n\n          }\n\n        }\n      }\n    }\n  }\n\n\n\n  /*\n  let tempEnd = {length:{}};\n  let tempStart = {length:{}};\n  tempEnd.length = shapeObj.e;\n  tempStart.length = shapeObj.s;\n  tempEnd = extrapolateOffsetKeyframe(tempEnd, 'length', false, animationId, -1, tempEnd, depth);\n  */\n}\n\n/**\n * Iterate through the shapes in a shape group ('gr') object, prepare the required DOM elements, and trigger the creation of shapes, attributes and transformations.\n * \n * @param {string} elementId The 'id' attribute of the DOMElement 'elementObj'.\n * @param {integer} animationId The serial number of this animation.\n * @param {JSON} layerObj The JSON object whose root to be scoured for shape items.\n * @param {JSON} referrer The JSON object that contained the 'layerObj' passed in here.\n * @param {string} refGroup The 'id' of the <g> that corresponds to the calling JSON object (pointed to by the 'referrer').\n * @param {boolean} isMasked If 'true', then this group of shapes are masked.\n * @param {integer} depth The level of iteration of precompositions (1 if this is the root layers and their corresponding shape groups).\n * @returns \n */\nexport function getShapesGr(elementId, animationId, layerObj, referrer, refLabel, refGroup, isMasked, depth, outer) {\n  let currentColor;\n  let currentStroke;\n  layerObj.currentTrim;\n  let stroked = false;\n  layerObj.trimmed = false;\n  if (outer.trimmed) {\n    layerObj.trimmed = true;\n    layerObj.currentTrim = outer.currentTrim;\n  }\n  for (let i = 0; i < layerObj.it.length; i++) {\n    layerObj._isGradient = false;\n    animation[animationId].shapeCount++;\n    if (layerObj.tt > 0) {\n      isMasked = layerObj.td;\n    }\n    if (layerObj.it[i].ty == 'gr') { // Shape group\n      layerObj.it[i]._group = animation[animationId].shapeCount;\n      const newGroup = document.createElementNS(xmlns, 'g');\n      newGroup.setAttribute('id', `${animationId}_group${animation[animationId].shapeCount}`);\n      animation[animationId]._currentShapeGroup = animation[animationId].shapeCount;\n      referrer.prepend(newGroup);\n      layerObj.it[i] = getShapesGr(\n        elementId,\n        animationId,\n        layerObj.it[i],\n        newGroup,\n        `${animationId}_group${animation[animationId].shapeCount}`,\n        refGroup,\n        isMasked,\n        depth,\n        layerObj,\n      );\n    } else {\n      layerObj.it[i]._shape = animation[animationId].shapeCount;\n      let tempK = JSON.parse(JSON.stringify(layerObj.it[i]));\n\n      //debug(() => ['CO', tempK]);\n      layerObj.it[i] = prepShape(layerObj.it[i], referrer, animationId, isMasked);\n      //debug(() => ['FRICO', layerObj.it[i]]);\n      if (layerObj.it[i].ty == 'tr') { // Transformations\n        layerObj.it[i]._trIndex = i;\n        if (layerObj.it[i].p.hasOwnProperty('k')) {\n          if (layerObj.it[i].p.k.length > 1) {\n            if (layerObj.it[i].hasOwnProperty('a')) {\n              document\n                .getElementById(refLabel)\n                .setAttribute(\n                  'transform',\n                  `translate(${layerObj.it[i].p.k[0] - layerObj.it[i].a.k[0]},${\n                    layerObj.it[i].p.k[1] - layerObj.it[i].a.k[1]\n                  })`,\n                );\n            } else {\n              document\n                .getElementById(refLabel)\n                .setAttribute('transform', `translate(${layerObj.it[i].p.k[0]},${layerObj.it[i].p.k[1]})`);\n            }\n          }\n        }\n      }\n      if (layerObj.it[i].ty == 'fl') { // Fill shape\n        if (layerObj.it[i].c.k.length > 1) {\n          currentColor = getColorString(layerObj.it[i].c.k[0], layerObj.it[i].c.k[1], layerObj.it[i].c.k[2]);\n        }\n      }\n      if (layerObj.it[i].ty == 'st') { // Stroke shape\n        if (layerObj.it[i].c.k.length > 1) {\n          currentStroke = getStrokeString(\n            layerObj.it[i],\n            animationId,\n            depth,\n            layerObj.it,\n          );\n          stroked = true;\n        }\n      }\n      if (layerObj.it[i].ty == 'tm') { // Stroke shape\n        //if (layerObj.it[i].c.k.length > 1) {\n          layerObj.currentTrim = getTrim(\n            layerObj.it[i],\n            animationId,\n            depth,\n            layerObj.it,\n          );\n          //layerObj.it[i] = currentTrim;\n          layerObj.trimmed = true;\n        //}\n      }\n      if (layerObj.it[i].ty == 'gf') { // Gradient fill shape\n        layerObj._isGradient = true;\n        currentColor = createGradientDef(\n          layerObj.it[i].s,\n          layerObj.it[i].e,\n          layerObj.it[i].o,\n          layerObj.it[i].g,\n          layerObj.it[i].r,\n          animationId,\n          depth,\n        );\n      }\n    }\n  }\n  setShapeColors(layerObj.it, currentColor, animationId, layerObj._isGradient, isMasked); // Set the color for this group of shapes.\n  if (stroked) {\n    setShapeStrokes(layerObj.it, currentStroke, animationId); // Set the stroke for this group of shapes.\n  }\n  if (layerObj.trimmed) {\n    debug(() => ['CurrentTrim', layerObj.currentTrim]);\n    setTrim(layerObj.it, layerObj.currentTrim, animationId, depth); // Set the trim for this group of shapes.\n  }\n  return layerObj;\n}\n\n/**\n * Iterate through the shapes in a layer object, prepare the required DOM elements, and trigger the creation of shapes, attributes and transformations.\n * \n * @param {string} elementId The 'id' attribute of the DOMElement 'elementObj'.\n * @param {integer} animationId The serial number of this animation.\n * @param {JSON} layerObj The JSON object whose root to be scoured for shape items.\n * @param {JSON} referrer The JSON object that contained the 'layerObj' passed in here.\n * @param {string} refGroup The 'id' of the <g> that corresponds to the calling JSON object (pointed to by the 'referrer').\n * @param {boolean} isMasked If 'true', then this group of shapes are masked.\n * @param {integer} depth The level of iteration of precompositions (1 if this is the root layers and their corresponding shape groups).\n * @returns \n */\nexport function getShapes(elementId, animationId, layerObj, referrer, refLabel, refGroup, isMasked, depth) {\n  let currentColor;\n  let currentStroke;\n  layerObj.currentTrim = {};\n  let stroked = false;\n  layerObj.trimmed = false;\n  for (let i = 0; i < layerObj.shapes.length; i++) {\n    layerObj._isGradient = false;\n    animation[animationId].shapeCount++;\n    if (layerObj.tt > 0) {\n      isMasked = layerObj.td;\n    }\n    if (layerObj.shapes[i].ty == 'gr') { // Shape group\n      layerObj.shapes[i]._group = animation[animationId].shapeCount;\n      const newGroup = document.createElementNS(xmlns, 'g');\n      newGroup.setAttribute('id', `${animationId}_group${animation[animationId].shapeCount}`);\n      newGroup.setAttribute('opacity', 1);\n      animation[animationId]._currentShapeGroup = animation[animationId].shapeCount;\n      referrer.prepend(newGroup);\n      layerObj.shapes[i] = getShapesGr(\n        elementId,\n        animationId,\n        layerObj.shapes[i],\n        newGroup,\n        `${animationId}_group${animation[animationId].shapeCount}`,\n        refGroup,\n        isMasked,\n        depth,\n        layerObj,\n      );\n\n    } else {\n      layerObj.shapes[i]._shape = animation[animationId].shapeCount;\n\n      //debug(() => ['RICO', layerObj.shapes[i]]);\n      layerObj.shapes[i] = prepShape(layerObj.shapes[i], referrer, animationId, isMasked);\n      //debug(() => ['FRICO', layerObj.shapes[i]]);\n      if (layerObj.shapes[i].ty == 'tr') { // Transformation\n        layerObj.shapes[i]._trIndex = i;\n        if (layerObj.shapes[i].p.hasOwnProperty('k')) {\n          if (layerObj.shapes[i].p.k > 1) {\n            document\n              .getElementById(`${animationId}_${depth}_layerGroup${layerObj._layer}`)\n              .setAttribute('transform', `translate(${layerObj.shapes[i].p.k[0]},${layerObj.shapes[i].p.k[1]})`);\n          }\n        }\n      }\n      if (layerObj.shapes[i].ty == 'fl') { // Fill shape\n        if (layerObj.shapes[i].c.k.length > 1) {\n          currentColor = getColorString(\n            layerObj.shapes[i].c.k[0],\n            layerObj.shapes[i].c.k[1],\n            layerObj.shapes[i].c.k[2],\n          );\n        }\n      }\n      if (layerObj.shapes[i].ty == 'st') { // Stroke shape\n        if (layerObj.shapes[i].c.k.length > 1) {\n          currentStroke = getStrokeString(\n            layerObj.shapes[i],\n            animationId,\n            depth,\n            layerObj.shapes,\n          );\n          stroked = true;\n        }\n      }\n      if (layerObj.shapes[i].ty == 'tm') { // Stroke shape\n        //if (layerObj.shapes[i].c.k.length > 1) {\n          layerObj.currentTrim = getTrim(\n            layerObj.shapes[i],\n            animationId,\n            depth,\n            layerObj.shapes,\n          );\n          //layerObj.shapes[i] = currentTrim;\n          layerObj.trimmed = true;\n        //}\n      }\n      if (layerObj.shapes[i].ty == 'gf') { // Gradient fill shape\n        layerObj._isGradient = true;\n        currentColor = createGradientDef(\n          layerObj.shapes[i].s,\n          layerObj.shapes[i].e,\n          layerObj.shapes[i].o,\n          layerObj.shapes[i].g,\n          layerObj.shapes[i].r,\n          animationId,\n          depth,\n        );\n      }\n    }\n  }\n  setShapeColors(layerObj.shapes, currentColor, animationId, layerObj._isGradient, isMasked); // Set the color for this group of shapes.\n  if (stroked) {\n    setShapeStrokes(layerObj.shapes, currentStroke, animationId); // Set the stroke for this group of shapes.\n  }\n  if (layerObj.trimmed) {\n    debug(() => ['CurrentTrim', layerObj.currentTrim]);\n    setTrim(layerObj.shapes, layerObj.currentTrim, animationId, depth); // Set the trim for this group of shapes.\n  }\n  return layerObj;\n}\n\nexport function findChildren(passedObj) {\n\n}\n\n/**\n * Create forward-linking to children of the layer item passed to this function, and create the child containers within the parent's.\n * \n * @param {integer} animationId The serial number of the current animation.\n * @param {integer} layerId The serial number of the current layer item to be processed.\n * @param {integer} lastMaskId The serial number of the last mask layer that was discovered.\n * @param {JSON} passedObj The JSON object that holds the group of layer items to peruse.\n * @param {string} passedKey The key that describes the array in 'passedObj' that holds a group of layer items.\n * @param {integer} depth An integer that describes the depth of the current layer group (1 for no iterations).\n * @returns \n */\nexport function resolveParents(animationId, layerId, lastMaskId, passedObj, passedKey, depth, level, addArray, passedLevel) {\n  let newGroup;\n  let newTranslateGroup;\n  let newLayer;\n\n  for (let j = 0; j < passedObj[passedKey].length; j++) {\n    if (passedObj[passedKey][j].ind == passedObj[passedKey][layerId].parent) {\n      if (passedObj[passedKey][j].tt > 0) {\n        for (let k = j - 1; k >= 0; k--) {\n          if (passedObj[passedKey][k].td > 0) {\n            passedObj[passedKey][j]._mask = `_${animationId}_${depth}_layerMask${passedObj[passedKey][k].ind}`;\n            passedObj[passedKey][j]._isMasked = true;\n            break;\n          }\n        }\n      }\n      addArray.push({\"item\": layerId, \"level\": passedLevel});\n\n      if (!passedObj[passedKey][j]._addedToDom) {\n        resolveParents(animationId, j, lastMaskId, passedObj, passedKey, depth, level + 1, addArray, passedLevel + 1);\n      }\n      animation[animationId].layerCount++;\n      passedObj[passedKey][layerId]._parent = passedObj[passedKey][j]._layer;\n      passedObj[passedKey][layerId]._parentIdx = j;\n      //if (!passedObj[passedKey][j]._addedToDom) {\n        passedObj[passedKey][layerId].domObj = {}\n        \n        passedObj[passedKey][layerId].domObj.newLayer = document.createElementNS(xmlns, 'g');\n        passedObj[passedKey][layerId].domObj.newLayer.setAttribute('id', `${animationId}_${depth}_layer${passedObj[passedKey][layerId]._layer}`);\n        passedObj[passedKey][layerId].domObj.newLayer.setAttribute('mask', lastMaskId);\n        passedObj[passedKey][layerId].domObj.newLayer.setAttribute('opacity', 1);\n\n        //document\n        //  .getElementById(`${animationId}_${depth}_layerTranslate${passedObj[passedKey][layerId]._parent}`)\n        //  .append(newLayer);\n        //passedObj[passedKey][j].domObj.newTranslateGroup.prepend(newLayer);\n        passedObj[passedKey][layerId].domObj.newTranslateGroup = document.createElementNS(xmlns, 'g');\n        passedObj[passedKey][layerId].domObj.newTranslateGroup.setAttribute(\n          'id',\n          `${animationId}_${depth}_layerTranslate${passedObj[passedKey][layerId]._layer}`,\n        );\n        passedObj[passedKey][layerId].domObj.newTranslateGroup.setAttribute('opacity', 1);\n        passedObj[passedKey][layerId].domObj.newLayer.prepend(newTranslateGroup);\n\n        if (passedObj[passedKey][layerId].w > 0) {\n          passedObj[passedKey][layerId].domObj.newLayer.style.width = passedObj[passedKey][layerId].w;\n        }\n        if (passedObj[passedKey][layerId].h > 0) {\n          passedObj[passedKey][layerId].domObj.newLayer.style.height = passedObj[passedKey][layerId].h;\n        }\n        passedObj[passedKey][layerId].domObj.newGroup = document.createElementNS(xmlns, 'g');\n        passedObj[passedKey][layerId].domObj.newGroup.setAttribute('id', `${animationId}_${depth}_layerGroup${passedObj[passedKey][layerId]._layer}`);\n        passedObj[passedKey][layerId].domObj.newGroup.setAttribute('opacity', 1);\n        passedObj[passedKey][layerId].domObj.newTranslateGroup.prepend(newGroup);\n\n        passedObj[passedKey][layerId]._addedToDom = true;\n        passedObj[passedKey][layerId].domObj.level = level;\n        passedObj[passedKey][layerId].processed = false;\n\n        // Push the child's 'id' into this item's ._child[] and the serial number of the child into ._childId[]\n        passedObj[passedKey][j]._child.push(`_layerGroup${passedObj[passedKey][layerId].parent}`);\n        passedObj[passedKey][j]._childId.push(layerId);\n\n      //}\n\n      return;\n    }\n  }\n}\n\n/**\n * Iterate through the layers of the animation, prepare the scaffolding needed to process the items in each one, and then trigger the respective functions to do the processing.\n * \n * @param {string} elementId The 'id' attribute of the DOMElement 'elementObj'.\n * @param {integer} animationId The serial number of this animation.\n * @param {DOMElement} elementObj The DOMElement describing the first Lottie layer element in the animation.\n * @param {JSON} passedObj The object that has 'layers', shapes group ('gr'), or 'assets'.\n * @param {string} passedKey The name of the array, in 'passedObj', that lists the target layer objects.\n * @param {integer} depth The depth of the current iteration of layer objects.\n * @returns \n */\nexport function getLayers(elementId, animationId, elementObj, passedObj, passedKey, depth) {\n  if (passedObj[passedKey] === undefined || passedObj[passedKey].length < 1) {\n    return;\n  }\n  animation[animationId].depth++;\n  depth = animation[animationId].depth;\n  let newLayer;\n  let newGroup;\n  let newMask;\n  let newTranslateGroup;\n  let posX;\n  let posY;\n  let lastMaskId = '';\n\n  //passedObj.myDepth = depth;\n  //if (depth < 1) {\n    for (var i = 0; i < passedObj[passedKey].length; i++) {\n      if (passedObj[passedKey][i].w > animation[animationId].w) {\n        animation[animationId]._maxWidth = passedObj[passedKey][i].w;\n      }\n      if (passedObj[passedKey][i].h > animation[animationId].h) {\n        animation[animationId]._maxHeight = passedObj[passedKey][i].h;\n      }\n      passedObj.layerCount++;\n      passedObj[passedKey][i]._layer = passedObj[passedKey][i].ind;\n      passedObj[passedKey][i]._child = [];\n      passedObj[passedKey][i]._childId = [];\n      if (passedObj[passedKey][i].parent > 0) {\n      } else {\n        if (passedObj[passedKey][i].td > 0) {\n          passedObj[passedKey][i]._isMask = true;\n          newMask = document.createElementNS(xmlns, 'mask');\n          lastMaskId = `_${animationId}_${depth}_layerMask${passedObj[passedKey][i].ind}`;\n          newMask.setAttribute('id', lastMaskId);\n          newMask.setAttribute('mask-type', 'alpha');\n          newMask.setAttribute('opacity', 1);\n          animation[animationId].defs.prepend(newMask);\n\n          newLayer = document.createElementNS(xmlns, 'g');\n          newLayer.setAttribute('id', `${animationId}_${depth}_layer${passedObj[passedKey][i].ind}`);\n          newLayer.setAttribute('style', 'display: block;');\n          newLayer.setAttribute('opacity', 1);\n          newMask.prepend(newLayer);\n        } else {\n          newLayer = document.createElementNS(xmlns, 'g');\n          newLayer.setAttribute('id', `${animationId}_${depth}_layer${passedObj[passedKey][i].ind}`);\n          newLayer.setAttribute('opacity', 1);\n          elementObj.prepend(newLayer);\n          if (passedObj[passedKey][i].tt > 0) {\n            passedObj[passedKey][i]._mask = lastMaskId;\n            passedObj[passedKey][i]._isMasked = true;\n          }\n        }\n        passedObj[passedKey][i]._addedToDom = true;\n\n        newTranslateGroup = document.createElementNS(xmlns, 'g');\n        newTranslateGroup.setAttribute('id', `${animationId}_${depth}_layerTranslate${passedObj[passedKey][i]._layer}`);\n        newTranslateGroup.setAttribute('opacity', 1);\n        newLayer.prepend(newTranslateGroup);\n        if (passedObj[passedKey][i].w > 0) {\n          newLayer.style.width = passedObj[passedKey][i].w;\n        }\n        if (passedObj[passedKey][i].h > 0) {\n          newLayer.style.height = passedObj[passedKey][i].h;\n        }\n        newGroup = document.createElementNS(xmlns, 'g');\n        newGroup.setAttribute('id', `${animationId}_${depth}_layerGroup${passedObj[passedKey][i]._layer}`);\n        newGroup.setAttribute('opacity', 1);\n        newTranslateGroup.prepend(newGroup);\n\n        passedObj[passedKey][i].processed = true;\n      }\n    }\n\n    let addArray = [];\n    let currentLevel = 1;\n    for (var i = 0; i < passedObj[passedKey].length; i++) {\n      passedObj.layerCount = passedObj[passedKey][i]._layer;\n      if (passedObj[passedKey][i].parent > 0) {\n        for (let j = 0; j < passedObj.layers.length; j++) {\n          if (passedObj[passedKey][j].ind == passedObj[passedKey][i].parent) {\n            if (passedObj[passedKey][i].tt > 0) {\n              for (let k = i - 1; k >= 0; k--) {\n                if (passedObj[passedKey][k].td > 0) {\n                  passedObj[passedKey][i]._mask = `_${animationId}_${depth}_layerMask${passedObj[passedKey][k].ind}`;\n                  break;\n                }\n              }\n            }\n            passedObj.layerCount++;\n            addArray.push({\"item\": i, \"level\": currentLevel});\n\n            if (!passedObj[passedKey][j]._addedToDom) {\n              resolveParents(animationId, j, lastMaskId, passedObj, passedKey, depth, 1, addArray, currentLevel + 1);\n            }\n            passedObj[passedKey][i]._parent = passedObj[passedKey][j]._layer;\n            passedObj[passedKey][i]._parentIdx = j;\n            //if (passedObj[passedKey][i]._addedToDom != true) {\n              passedObj[passedKey][i].domObj = {};\n              passedObj[passedKey][i].domObj.newLayer = document.createElementNS(xmlns, 'g');\n              passedObj[passedKey][i].domObj.newLayer.setAttribute('id', `${animationId}_${depth}_layer${passedObj[passedKey][i]._layer}`);\n              passedObj[passedKey][i].domObj.newLayer.setAttribute('opacity', 1);\n      \n              //document\n              //  .getElementById(`${animationId}_${depth}_layerTranslate${passedObj[passedKey][i]._parent}`)\n              //  .prepend(newLayer);\n              passedObj[passedKey][i].domObj.newTranslateGroup = document.createElementNS(xmlns, 'g');\n              passedObj[passedKey][i].domObj.newTranslateGroup.setAttribute(\n                'id',\n                `${animationId}_${depth}_layerTranslate${passedObj[passedKey][i]._layer}`,\n              );\n              passedObj[passedKey][i].domObj.newTranslateGroup.setAttribute('opacity', 1);\n              //newLayer.prepend(newTranslateGroup);\n              if (passedObj[passedKey][i].w > 0) {\n                passedObj[passedKey][i].domObj.newLayer.style.width = passedObj[passedKey][i].w;\n              }\n              if (passedObj[passedKey][i].h > 0) {\n                passedObj[passedKey][i].domObj.newLayer.style.height = passedObj[passedKey][i].h;\n              }\n              passedObj[passedKey][i].domObj.newGroup = document.createElementNS(xmlns, 'g');\n              passedObj[passedKey][i].domObj.newGroup.setAttribute('id', `${animationId}_${depth}_layerGroup${passedObj[passedKey][i]._layer}`);\n              passedObj[passedKey][i].domObj.newGroup.setAttribute('opacity', 1);\n              //newTranslateGroup.prepend(newGroup);\n\n              passedObj[passedKey][i].domObj.newLayer.prepend(passedObj[passedKey][i].domObj.newTranslateGroup);\n              passedObj[passedKey][i].domObj.newTranslateGroup.prepend(passedObj[passedKey][i].domObj.newGroup);\n              //document\n              //  .getElementById(`${animationId}_${depth}_layerTranslate${passedObj[passedKey][i]._parent}`)\n              //  .prepend(passedObj[passedKey][i].domObj.newLayer);\n\n              passedObj[passedKey][i]._addedToDom = true;\n              passedObj[passedKey][i].domObj.level = 1;\n              passedObj[passedKey][i].processed = false;\n\n              passedObj[passedKey][j]._child.push(`${animationId}_${depth}_layerGroup${passedObj[passedKey][i].parent}`);\n              passedObj[passedKey][j]._childId.push(i);\n\n            //}\n          }\n        }\n      }\n    }\n\n    let itemsThisLevel = 1;\n    let tempLevel = 1;\n    while (itemsThisLevel > 0) {\n      itemsThisLevel = 0;\n      let tempArray = [];\n      for (let j = 0; j < addArray.length; j++) {\n        if (addArray[j].level == tempLevel) {\n          tempArray.push(addArray[j].item);\n          itemsThisLevel++;\n        }\n      }\n      tempLevel++;\n      tempArray.sort(function(a, b){return a-b});\n      \n      /*\n      let tempHalf1 = [];\n      let tempHalf2 = [];\n      for (let i = 0; i < tempArray.length; i++) {\n        if (passedObj[passedKey][tempArray[i]].ind <= passedObj[passedKey][passedObj[passedKey][tempArray[i]]._parentIdx].ind) {\n          tempHalf1.push(tempArray[i]);\n        } else {\n          tempHalf2.push(tempArray[i]);\n        }\n      }\n      tempHalf2.sort(function(a, b){return b-a});\n      tempArray = [];\n      tempArray = tempArray.concat(tempHalf1, tempHalf2);\n      //tempArray.concat(tempHalf2);\n      */\n      \n      if (itemsThisLevel > 0) {\n        tempArray.forEach(i => {\n            if (passedObj[passedKey][passedObj[passedKey][i]._parentIdx].hasOwnProperty('domObj')) {\n              if (passedObj[passedKey][i].ind > passedObj[passedKey][passedObj[passedKey][i]._parentIdx].ind) {\n                passedObj[passedKey][passedObj[passedKey][i]._parentIdx].domObj.newTranslateGroup.prepend(passedObj[passedKey][i].domObj.newLayer);\n              } else {\n                passedObj[passedKey][passedObj[passedKey][i]._parentIdx].domObj.newTranslateGroup.append(passedObj[passedKey][i].domObj.newLayer);\n              }\n            } else {\n              if (passedObj[passedKey][i].ind >= passedObj[passedKey][i]._parent) {\n                document\n                  .getElementById(`${animationId}_${depth}_layerTranslate${passedObj[passedKey][i]._parent}`)\n                  .prepend(passedObj[passedKey][i].domObj.newLayer);\n              } else {\n                document\n                  .getElementById(`${animationId}_${depth}_layerTranslate${passedObj[passedKey][i]._parent}`)\n                  .append(passedObj[passedKey][i].domObj.newLayer);\n              }\n            }\n          }\n        );\n      }\n    }\n\n    for (var i = 0; i < passedObj[passedKey].length; i++) {\n      if (passedObj[passedKey][i].hasOwnProperty('domObj')) {\n        delete passedObj[passedKey][i].domObj;\n      }\n    }\n\n  //}\n\n\n  for (var i = 0; i < passedObj.layers.length; i++) {\n    passedObj[passedKey][i]._inPoint = -1;\n    passedObj[passedKey][i]._outPoint = -1;\n    if (passedObj[passedKey][i].hasOwnProperty('ip') && passedObj[passedKey][i].ip >= 0) {\n      passedObj[passedKey][i]._inPoint = passedObj[passedKey][i].ip;\n    }\n    if (passedObj[passedKey][i].hasOwnProperty('op') && passedObj[passedKey][i].op > 0) {\n      passedObj[passedKey][i]._outPoint = passedObj[passedKey][i].op;\n      if (passedObj[passedKey][i]._outPoint > passedObj._totalFrames) {\n        passedObj[passedKey][i]._outPoint = passedObj._totalFrames;\n      }\n    } else {\n      passedObj[passedKey][i]._outPoint = passedObj._totalFrames;\n    }\n    stageSequence(\n      animationId,\n      `${animationId}_${depth}_layerGroup${passedObj[passedKey][i]._layer}`,\n      passedObj[passedKey][i]._inPoint,\n      passedObj[passedKey][i]._outPoint,\n    );\n\n    passedObj.layerCount = passedObj[passedKey][i]._layer;\n    newLayer = document.getElementById(`${animationId}_${depth}_layer${passedObj[passedKey][i]._layer}`);\n    newGroup = document.getElementById(`${animationId}_${depth}_layerGroup${passedObj[passedKey][i]._layer}`);\n    if (passedObj[passedKey][i].tt > 0) {\n      document\n        .getElementById(`${animationId}_${depth}_layer${passedObj[passedKey][i]._layer}`)\n        .setAttribute('mask', `url(#${passedObj[passedKey][i]._mask})`);\n      document\n        .getElementById(`${animationId}_${depth}_layer${passedObj[passedKey][i]._layer}`)\n        .setAttribute('style', 'display: block;');\n    }\n    passedObj._currentLayer = { _layer: '', _inPoint: '', _outPoint: '' };\n    //passedObj._currentLayer = passedObj[passedKey][i]._layer;\n    passedObj._currentLayer._layer = passedObj[passedKey][i]._layer;\n    passedObj._currentLayer._inPoint = passedObj[passedKey][i]._inPoint;\n    passedObj._currentLayer._outPoint = passedObj[passedKey][i]._outPoint;\n    if (passedObj[passedKey][i].hasOwnProperty('refId')) {\n      let tempRef = -1;\n      for (let m = 0; m < animation[animationId].assets.length; m++) {\n        if (typeof animation[animationId].assets[m] != 'undefined' && animation[animationId].assets[m].id == passedObj[passedKey][i].refId) {\n          tempRef = m;\n          break;\n        }\n      }\n      if (tempRef >= 0) {\n        var tempDepth = depth;\n        animation[animationId].assets[tempRef] = getLayers(\n          elementId,\n          animationId,\n          newGroup,\n          animation[animationId].assets[tempRef],\n          'layers',\n          depth,\n        );\n        //animation[animationId].depth--;\n        depth = tempDepth;\n      }\n    }\n\n    if (passedObj[passedKey][i].hasOwnProperty('shapes')) {\n      passedObj._currentLayerGroup = { _layer: 0, _inPoint: '', _outPoint: '' };\n      //passedObj._currentLayerGroup = passedObj[passedKey][i]._layer;\n      passedObj._currentLayerGroup._layer = passedObj[passedKey][i]._layer;\n      passedObj._currentLayerGroup._inPoint = passedObj[passedKey][i]._inPoint;\n      passedObj._currentLayerGroup._outPoint = passedObj[passedKey][i]._outPoint;\n      passedObj[passedKey][i] = getShapes(\n        elementId,\n        animationId,\n        passedObj[passedKey][i],\n        newGroup,\n        `${animationId}_${depth}_layerGroup${passedObj[passedKey][i]._layer}`,\n        false,\n        passedObj[passedKey][i].td,\n        depth,\n      );\n      if (passedObj[passedKey][i].hasOwnProperty('shapes')) {\n        passedObj._boundingX = newGroup.getBoundingClientRect().width / 2;\n        passedObj._boundingY = newGroup.getBoundingClientRect().height / 2;\n      }\n    } else if (passedObj[passedKey][i]._inPoint > 0) {\n      // console.log(\"layer: \" + i);\n      // newLayer.style.display = 'none';\n    }\n\n    if (passedObj[passedKey][i].hasOwnProperty('ks')) {\n      if (passedObj[passedKey][i].ks.hasOwnProperty('a')) {\n        if (passedObj[passedKey][i].ks.a.hasOwnProperty('k')) {\n          if (passedObj[passedKey][i].ks.a.k.length > 1) {\n            passedObj[passedKey][i]._anchorX = passedObj[passedKey][i].ks.a.k[0];\n            passedObj[passedKey][i]._anchorY = passedObj[passedKey][i].ks.a.k[1];\n          }\n        }\n      }\n\n      if (passedObj[passedKey][i].ks.hasOwnProperty('p')) {\n        passedObj[passedKey][i].ks = getPosition(\n          passedObj[passedKey][i].ks,\n          null,\n          'p',\n          true,\n          animationId,\n          1,\n          passedObj[passedKey][i],\n          depth,\n        );\n        if (passedObj[passedKey][i].ks.p.hasOwnProperty('k')) {\n          if (passedObj[passedKey][i].ks.p.k.length > 1) {\n            if (passedObj[passedKey][i].ks.p.k[0].hasOwnProperty('s')) {\n            } else {\n              if (passedObj[passedKey][i]._anchorX != 0) {\n                posX = passedObj[passedKey][i].ks.p.k[0] - passedObj[passedKey][i]._anchorX;\n              } else {\n                posX = passedObj[passedKey][i].ks.p.k[0]; // passedObj._boundingX;\n              }\n              if (passedObj[passedKey][i]._anchorY != 0) {\n                posY = passedObj[passedKey][i].ks.p.k[1] - passedObj[passedKey][i]._anchorY;\n              } else {\n                posY = passedObj[passedKey][i].ks.p.k[1]; // passedObj._boundingY;\n              }\n              if (passedObj[passedKey][i].td > 0) {\n                document\n                  .getElementById(`${animationId}_${depth}_layerGroup${passedObj[passedKey][i]._layer}`)\n                  .setAttribute('transform', `translate(${posX},${posY})`);\n                  //.setAttribute('transform', `matrix(1,0,0,1,${posX},${posY})`);\n              } else {\n                document\n                  .getElementById(`${animationId}_${depth}_layer${passedObj[passedKey][i]._layer}`)\n                  .setAttribute('transform', `translate(${posX},${posY})`);\n                  //.setAttribute('transform', `matrix(1,0,0,1,${posX},${posY})`);\n              }\n              passedObj[passedKey][i]._posX = posX;\n              passedObj[passedKey][i]._posY = posY;\n            }\n          }\n        }\n      }\n\n      if (passedObj[passedKey][i].ks.hasOwnProperty('r')) {\n        if (passedObj[passedKey][i].ks.r.k.length > 1) {\n          if (passedObj[passedKey][i].ks.r.k[0].hasOwnProperty('s')) {\n            passedObj[passedKey][i].ks = getPosition(\n              passedObj[passedKey][i].ks,\n              null,\n              'r',\n              true,\n              animationId,\n              1,\n              passedObj[passedKey][i],\n              depth,\n            );\n          }\n        }\n      }\n      if (passedObj[passedKey][i].ks.hasOwnProperty('s')) {\n        if (passedObj[passedKey][i].ks.s.k.length > 1) {\n          if (passedObj[passedKey][i].ks.s.k[0].hasOwnProperty('s')) {\n            passedObj[passedKey][i].ks = getPosition(\n              passedObj[passedKey][i].ks,\n              null,\n              's',\n              true,\n              animationId,\n              1,\n              passedObj[passedKey][i],\n              depth,\n            );\n          }\n        }\n      }\n      if (passedObj[passedKey][i].ks.hasOwnProperty('o')) {\n        if (passedObj[passedKey][i].ks.o.k.length > 1) {\n          if (passedObj[passedKey][i].ks.o.k[0].hasOwnProperty('s')) {\n            passedObj[passedKey][i].ks = getPosition(\n              passedObj[passedKey][i].ks,\n              null,\n              'o',\n              true,\n              animationId,\n              1,\n              passedObj[passedKey][i],\n              depth,\n            );\n          }\n        }\n      }\n    }\n  }\n  return passedObj;\n}\n\n/**\n * Scale layer objects relative to the animation window size - needed because some layers have much bigger defined window dimensions.\n * \n * @param {string} elementId The 'id' attribute of the DOMElement 'elementObj'.\n * @param {integer} animationId The serial number of this animation.\n * @param {DOMElement} elementObj The DOMElement describing the first Lottie layer element in the animation.\n * @param {JSON} passedObj The object that has 'layers', shapes group ('gr'), or 'assets'.\n * @param {string} passedKey The name of the array, in 'passedObj', that lists the target layer objects.\n * @param {integer} depth The depth of the current iteration of layer objects.\n */\nexport function scaleLayers(elementId, animationId, elementObj, passedObj, passedKey, depth) {\n  var currentObj;\n  //alert(animation[animationId].currScale);\n  for (var i = 0; i < passedObj[passedKey].length; i++) {\n    if (passedObj[passedKey][i].parent > 0) {\n    } else {\n      if (passedObj[passedKey][i].td > 0) {\n      } else {\n        if (passedObj[passedKey][i].hasOwnProperty(\"parent\")) {\n        } else {\n          //alert(animationId + \"_\" + depth + \"_layer\" + passedObj[passedKey][i]._layer);\n          currentObj = document.getElementById(animationId + \"_\" + depth + \"_layer\" + passedObj[passedKey][i]._layer);\n          //currentObj.setAttributeNS(null, 'viewBox', `0 0 ${animation[animationId]._maxWidth} ${animation[animationId]._maxHeight}`);\n          currentObj.setAttribute(\"transform\", \"scale(\" + animation[animationId]._currScale + \")\");\n        }\n      }\n    }\n  }\n}\n\n/**\n * Initializes all the parameters for animation[animationId], which will contain the scene graph for this Lottie animation, before and after calling getLayers().\n * \n * @param {*} elementId The 'id' attribute of the DOMElement 'elementObj'.\n * @param {*} animationId The serial number of this animation.\n * @param {*} elementObj The DOMElement in which the animation should be rendered.\n * @param {*} autoplay If 'true', then start playing the animation upon being loaded.\n * @param {*} loop If 'true', then the animation keeps looping.\n * @param {*} customName A custom name given to this Lottie animation - for future use.\n */\nexport function buildGraph(elementId, animationId, elementObj, autoplay, loop, customName) {\n  animation[animationId]._loaded = false;\n  animation[animationId]._renderObj = elementObj;\n  try {\n    animation[animationId].depth = 0;\n    animation[animationId].shapeCount = 0;\n    animation[animationId].layerCount = 0;\n    animation[animationId]._removed = false;\n    animation[animationId]._totalFrames = parseInt(animation[animationId].op - animation[animationId].ip);\n    animation[animationId]._framesPerSec = animation[animationId]._totalFrames / animation[animationId].fr;\n    animation[animationId]._frameTime = (1 / animation[animationId].fr) * 1000;\n    animation[animationId]._currentFrame = -1;\n    animation[animationId]._lastTime = Date.now();\n    animation[animationId]._autoplay = autoplay;\n    animation[animationId]._loop = loop;\n    animation[animationId]._customName = customName;\n    if (autoplay) {\n      animation[animationId]._paused = false;\n    } else {\n      animation[animationId]._paused = true;\n    }\n    animation[animationId]._maxWidth = 0;\n    animation[animationId]._maxHeight = 0;\n    animation[animationId]._skewW = 0;\n    animation[animationId]._skewH = 0;\n    animation[animationId]._currScale = 1;\n    animation[animationId]._lastFrame = 0;\n    animation[animationId]._loopCount = 0;\n    //animation[animationId]._nextInterval = animation[animationId]._frameTime;\n    //animation[animationId]._timeout = 0;\n\n    if (smallestFrameTime > animation[animationId]._frameTime) {\n      smallestFrameTime = animation[animationId]._frameTime;\n    }\n\n    //for debugging\n    animation[animationId]._debugTimeElapsed = 0;\n    animation[animationId]._debugContainer = '';\n    //////\n\n    //elementObj.style.width = animation[animationId].w;\n    //elementObj.style.height = animation[animationId].h;\n    //elementObj.setAttribute('width', animation[animationId].w);\n    //elementObj.setAttribute('height', animation[animationId].h);\n\n    const newSVG = document.createElementNS(xmlns, 'svg');\n    newSVG.setAttribute('xmlns', xmlns);\n    // newSVG.setAttributeNS(null, 'width', animation[animationId].w);\n    // newSVG.setAttributeNS(null, 'height', animation[animationId].h);\n    newSVG.setAttributeNS(null, 'viewBox', `0 0 ${animation[animationId].w} ${animation[animationId].h}`);\n    newSVG.setAttributeNS(null, 'preserveAspectRatio', 'xMidYMid meet');\n    newSVG.style.contain = 'strict';\n    newSVG.style.width = '100%';\n    newSVG.style.height = '100%';\n    newSVG.setAttributeNS(null, 'id', `_svg${animationId}`);\n    elementObj.prepend(newSVG);\n\n    animation[animationId].defs = document.createElementNS(xmlns, 'defs');\n    animation[animationId].defs.setAttributeNS(null, 'id', `_defs${animationId}`);\n    animation[animationId].gradientCount = 0;\n    animation[animationId].maskCount = 0;\n    newSVG.prepend(animation[animationId].defs);\n\n    const newLayer = document.createElementNS(xmlns, 'g');\n    newLayer.setAttributeNS(null, 'id', `_lanim${animationId}`);\n    newSVG.append(newLayer);\n\n    const newCompute = document.createElementNS(xmlns, 'g');\n    newCompute.setAttributeNS(null, 'id', `_compute${animationId}`);\n    newCompute.style.display = 'none';\n    newLayer.prepend(newCompute);\n\n    animation[animationId]._scene = new Array(animation[animationId]._totalFrames + 10)\n      .fill(null)\n      .map(() => ({ _transform: [] }));\n    animation[animationId]._instated = {};\n    animation[animationId]._refObj = [];\n    animation[animationId]._objSize = {};\n\n    const clipPath = document.createElementNS(xmlns, 'clipPath');\n    clipPath.setAttributeNS(null, 'id', `_clip${animationId}`);\n    animation[animationId].defs.prepend(clipPath);\n    const clipPathRect = document.createElementNS(xmlns, 'rect');\n    clipPathRect.setAttribute('x', 0);\n    clipPathRect.setAttribute('y', 0);\n    clipPathRect.setAttribute('width', animation[animationId].w);\n    clipPathRect.setAttribute('height', animation[animationId].h);\n    clipPath.append(clipPathRect);\n\n    animation[animationId] = getLayers(elementId, animationId, newLayer, animation[animationId], 'layers', 0);\n\n    if (animation[animationId]._maxWidth > 0 || animation[animationId]._maxHeight > 0) {\n      var scaleW = animation[animationId].w / animation[animationId]._maxWidth;\n      var scaleH = animation[animationId].h / animation[animationId]._maxHeight;\n      //animation[animationId]._skewW = animation[animationId]\n\n      //clipPathRect.setAttribute('x', 0);\n      //clipPathRect.setAttribute('y', 0);\n      //clipPathRect.setAttribute('width', animation[animationId]._maxWidth);\n      //clipPathRect.setAttribute('height', animation[animationId]._maxHeight);\n    \n      if (scaleW > scaleH) {\n        animation[animationId]._currScale = scaleW;\n      } else {\n        animation[animationId]._currScale = scaleH;\n      }\n\n      //newSVG.setAttributeNS(null, 'viewBox', `0 0 ${animation[animationId]._maxWidth} ${animation[animationId]._maxHeight}`);\n\n      //newLayer.setAttribute(\"transform\", \"scale(\" + animation[animationId]._currScale + \")\");\n\n      scaleLayers(elementId, animationId, newLayer, animation[animationId], 'layers', 1);\n    }\n\n    newLayer.setAttributeNS(null, 'clip-path', `url(#_clip${animationId})`);\n    animation[animationId]._buildDone = true;\n    animationLoading -= 1;\n    animation[animationId]._loaded = true;\n    if (!animation[animationId]._autoplay) {\n      goToAndStop(1, '', animation[animationId]._elementId);\n    } else {\n      loadFrame(animationId, 1);\n    }\n    animation[animationId]._renderObj.dispatchEvent(new CustomEvent(\"DOMLoaded\", {bubbles: true, detail:{\"animation\": animationId} }));\n  } catch (e) {\n\t\t//console.error(`Failed to load animation.${e}`);\n\t\t//elementObj.style.height = 0;\n\t\t//elementObj.style.width = 0;\n    animation[animationId]._renderObj.dispatchEvent(new CustomEvent(\"onLoadError\", {bubbles: true, detail:{\"error\": e, \"animation\": animationId} }));\n    animation[animationId]._renderObj.dispatchEvent(new CustomEvent(\"loadError\", {bubbles: true, detail:{\"error\": e, \"animation\": animationId} }));\n\t\tanimationCount = animationCount - 1;\n\t\telementObj.innerHTML = e;\n\t\tanimation.splice(animationId, 1);\n\t}\n}\n\n/**\n * Load a Lottie JSON file from a URL and then pass to buildGraph().\n * \n * @param {string} src A URL that points to a Lottie JSON file.\n * @param {DOMElement} domElement The DOMElement object in which the Lottie animation will be animated.\n * @param {string} elementId The 'id' of the DOMElement pointed to by 'domElement'.\n * @param {boolean} _autoplay If 'true', then start playing the animation upon being loaded.\n * @param {boolean} _loop If 'true', then the animation keeps looping.\n * @param {boolean} _debugAnimation If 'true', then display debug information.\n * @param {DOMElement} _debugContainer The DOMElement in which debug information is to be displayed.\n */\nexport function getJson(\n  src,\n  domElement,\n  elementId,\n  _autoplay,\n  _loop,\n  _debugAnimation,\n  _debugContainer,\n  animationId\n) {\n  const http = new XMLHttpRequest();\n  http.withCredentials = false;\n  http.open('GET', src, true);\n  //http.setRequestHeader('Access-Control-Allow-Origin', '*');\n  http.onreadystatechange = function () {\n    if (http.readyState == 4 && http.status == 200) {\n      let received = http.responseText;\n      if (received.search(/(^(\"|'))|((\"|')$)/g) > -1) {\n        received = received.replace(/(^(\"|'))|((\"|')$)/g, \"\");\n        received = received.replace(/\\\\\"/g, '\"');\n      }\n      //animationCount += 1;\n      //const currentAnimation = animationCount;\n      const currentAnimation = animationId;\n      animation[currentAnimation] = JSON.parse(received);\n      animation[currentAnimation]._elementId = elementId;\n\n      if (_debugAnimation && typeof _debugContainer == 'object') {\n        animation[currentAnimation]._debugAnimation = _debugAnimation;\n        animation[currentAnimation]._debugContainer = _debugContainer;\n        animation[currentAnimation]._curFPS = 0;\n        animation[currentAnimation]._timeElapsed = 0;\n        animation[currentAnimation]._debugObj = document.createElement('div');\n        animation[currentAnimation]._debugObj.setAttribute('id', `__dbg__${currentAnimation}`);\n        animation[currentAnimation]._debugObj.style.display = 'block';\n        _debugContainer.prepend(animation[currentAnimation]._debugObj);\n      }\n\n      buildGraph(elementId, currentAnimation, domElement, _autoplay, _loop);\n    }\n  };\n  http.send();\n}\n\n/// ////////// CONTROL\n\n// var animationManager = (function () {\nconst jlottie = {};\n\n/**\n * Destroys and unloads the animation indicated by 'name'.\n * \n * @param {string} name The 'id' value of the container of this Lottie animation.\n */\nexport function destroy(name) {\n  if (animationCount < 0) {\n    return;\n  }\n  if (name === undefined) {\n    return;\n    /*const elements = [];\n    for (var i = 0; i <= animationCount; i++) {\n      elements.push(animation[i]._elementId);\n    }\n    animation = [];\n    for (var i = 0; i <= elements; i++) {\n      document.getElementById(elements[i]).innerHTML = '';\n      animationCount -= 1;\n    }*/\n  } else {\n    name.toString();\n    name = name.replace(/#/g, '');\n    if (name.length > 0) {\n      for (var i = 0; i <= animationCount; i++) {\n        if (animation[i]._elementId == name || animation[i]._customName == name) {\n          pause(name);\n          animationCount -= 1;\n          animation.splice(i, 1);\n          document.getElementById(name).innerHTML = '';\n          break;\n        }\n      }\n    }\n  }\n}\n\n/**\n * Plays the animation indicated by 'name'.\n * \n * @param {string} name The 'id' value of the container of this Lottie animation.\n */\nexport function play(name) {\n  if (animationCount < 0) {\n    return;\n  }\n  if (name === undefined) {\n    for (var i = 0; i <= animationCount; i++) {\n      animation[i]._paused = false;\n    }\n  } else {\n    name.toString();\n    name = name.replace(/#/g, '');\n    for (var i = 0; i <= animationCount; i++) {\n      if (animation[i]._elementId == name || animation[i]._customName == name) {\n        animation[i]._paused = false;\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Pauses the animation indicated by 'name'.\n * \n * @param {string} name The 'id' value of the container of this Lottie animation.\n */\n export function pause(name) {\n  if (name === undefined) {\n    for (var i = 0; i <= animationCount; i++) {\n      animation[i]._paused = true;\n    }\n  } else {\n    name.toString();\n    name = name.replace(/#/g, '');\n    for (var i = 0; i <= animationCount; i++) {\n      if (animation[i]._elementId == name || animation[i]._customName == name) {\n        animation[i]._paused = true;\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Stops the animation indicated by 'name'.\n * \n * @param {string} name The 'id' value of the container of this Lottie animation.\n */\nexport function stop(name) {\n  goToAndStop(1, false, name);\n}\n\n/**\n * Stops the animation, goes to the specified frame and freezes there.\n * \n * @param {integer} _frame The frame number.\n * @param {boolean} isFrame Indicates whether '_frame' represents time in number of frames (true) or milliseconds (false) - this is currently not implemented.\n * @param {string} name The 'id' value of the container of this Lottie animation.\n * \n */\nexport function goToAndStop(_frame, isFrame, name) {\n  if (typeof isFrame === 'string') {\n    name = isFrame;\n  }\n  if (animationCount < 0) {\n    return;\n  }\n  if (name === undefined) {\n    for (var i = 0; i <= animationCount; i++) {\n      animation[i]._paused = true;\n      animation[i]._currentFrame = _frame;\n      loadFrame(i, _frame);\n    }\n  } else {\n    name.toString();\n    name = name.replace(/#/g, '');\n    for (var i = 0; i <= animationCount; i++) {\n      if (animation[i]._elementId == name || animation[i]._customName == name) {\n        animation[i]._paused = true;\n        animation[i]._currentFrame = _frame;\n        //console.log(`${name} == ${_frame}`);\n        loadFrame(i, _frame);\n        break;\n      }\n    }\n  }\n}\n\n/** \n  * Lottie animation loader for jlottie.\n  *\n  * @param {JSON} obj Includes parameters that dictate how a Lottie is loaded.\n  * @param {DOMElement} obj.container A DOMElement object that will be used as the container for the Lottie animation.\n  * @param {boolean} obj.autoplay Instructs jlottie to immediately play the Lottie after it is loaded.\n  * @param {boolean} obj.loop Instructs jlottie to keep looping this animation.\n  * @param {boolean} obj.debugAnimation Instructs jlottie to display debug information (currently limited to just FPS data).\n  * @param {DOMElement} obj.debugContainer A DOMElement in which the debug data will be displayed.\n  *\n  */\nexport function loadAnimation(obj) {\n  if (obj.container === undefined && obj.path === undefined && obj.animationData === undefined) {\n    return;\n  }\n  let autoplay = true;\n  let loop = true;\n  let debugContainer;\n\n  if (!(obj.autoplay === undefined)) {\n    if (obj.autoplay === true || obj.autoplay === false) {\n      autoplay = obj.autoplay;\n    }\n  }\n\n  if (!(obj.loop === undefined)) {\n    if (obj.loop === true || obj.loop === false) {\n      loop = obj.loop;\n    }\n  }\n\n  if (!(obj.debug === undefined)) {\n    if (obj.debug === true) {\n      if (typeof obj.debugContainer != 'undefined') {\n        debugContainer = obj.debugContainer;\n      }\n    }\n  }\n\n  if (!(obj.debugAnimation === undefined)) {\n    if (obj.debugAnimation === true) {\n      debugAnimation = true;\n    }\n  }\n\n  animationCount += 1;\n  let currentAnimation = animationCount;\n  animation[currentAnimation] = {};\n  animation[currentAnimation]._loaded = false;\n  if (!(obj.animationData === undefined) && obj.animationData.length > 0) {\n    //currentAnimation = animationCount;\n    animation[currentAnimation] = JSON.parse(obj.animationData);\n    animation[currentAnimation]._elementId = obj.container.id;\n    animation[currentAnimation]._debugContainer = obj.debugContainer;\n    animation[currentAnimation]._debugAnimation = obj.debug;\n    buildGraph(obj.container.id, currentAnimation, obj.container, autoplay, loop);\n  } else if (!(obj.path === undefined) && obj.path) {\n    getJson(\n      obj.path, \n      obj.container,\n      obj.container.id,\n      autoplay,\n      loop,\n      obj.debug,\n      obj.debugContainer,\n      currentAnimation\n    );\n  }\n  if (!playStarted) {\n    playStarted = true;\n    timeoutObj = setTimeout(window.requestAnimationFrame(lottiemate), 0);\n  }\n\n  animation[currentAnimation]._elementId = obj.container.id;\n  animation[currentAnimation].destroy = function() {destroy(animation[currentAnimation]._elementId);}\n  animation[currentAnimation].play = function() {play(animation[currentAnimation]._elementId);}\n  animation[currentAnimation].pause = function() {pause(animation[currentAnimation]._elementId);}\n  animation[currentAnimation].stop = function() {stop(animation[currentAnimation]._elementId);}\n  animation[currentAnimation].goToAndStop = function(frame) {goToAndStop(frame, animation[currentAnimation]._elementId);}\n  return animation[currentAnimation];\n}\n"],"names":["xmlns","animation","timeoutObj","playStarted","smallestFrameTime","debugAnimation","debug","loggerFn","loggingArgs","Array","isArray","console","log","arcLength","p1","p2","Math","sqrt","pow","bezierCurve","c1","c2","fromT","toT","isLayer","animationId","refKey","addTransformation","objectId","depth","customFlag","newNodes","hasOwnProperty","length","x","y","timeTick","oneMinusT","frames","currentFrame","i","push","_comp","t","_frame","parseInt","s","m","n","o","v","k","addGroupPositionTransform","loadFrame","_currentFrame","ref","_refObj","refObj","nextObj","_scene","_transform","fillSet","isGradient","stops","document","getElementById","fillObj","querySelectorAll","setAttribute","offsets","styles","refObjSet","currentObj","currentObjOther","refObjOther","isTween","dataString","combined","fill","strokeWidth","opacity","hide","stageEvent","stageObj","style","display","show","lottiemate","currentDate","Date","now","animationCount","_loaded","_lastTime","_frameTime","_removed","_paused","_debugAnimation","_timeElapsed","_totalFrames","_loopCount","_renderObj","dispatchEvent","CustomEvent","bubbles","detail","_loop","goToAndStop","_elementId","j","postRender","debugDate","_curFPS","_debugObj","innerHTML","fr","clearTimeout","setTimeout","requestAnimationFrame","getEmptyTransform","transforms","getEmptyFillTransform","getEmptyStageTransform","findExistingTransform","frame","forFill","getIndex","undefined","updateTransform","existing","stageSequence","inPoint","outPoint","lastState","position","posX","_currentLayerGroup","_inPoint","_outPoint","_currentLayer","Number","isNaN","td","_layer","_currentShapeGroup","anchorX","_anchorX","anchorY","_anchorY","_instated","_objSize","getBoundingClientRect","width","height","sizeObjFromTransform","tempBoundingW","tempBoundingH","currentScaleX","currentScaleY","posY","rotateAngle","rotate","scaleFactorX","scaleFactorY","scale","paddingX","paddingY","paddingAnchorX","paddingAnchorY","translateX","translateY","translate","isTranslate","opacityFactor","isSet","extrapolateOffsetKeyframe","offsetKeyframeObj","objLength","oldLength","emptyPos","returnedKeyframeObj","e","splice","extrapolatePathPosition","parentObj","getPosition","prepShapeEl","shapeObj","referrer","newShape","createElementNS","p","_shape","classList","add","prepend","_isShape","prepShapeRc","prepShapeRcKeyframe","prepDataString","sourceObject","closed","setDataString","sourceObj","shapeId","pathClosed","hideThis","prepShapeSh","ks","totalK","kCount","c","_data","prepShapeShKeyframe","prepShape","isMasked","ty","a","_startI","createGradientDef","start","end","gradient","radial","gradientCount","newDef","newDefId","NaN","defs","firstRun","opacities","newStop","append","lcEnum","getStrokeString","shapeGroup","strokeString","color","lineCap","lineJoin","miterLimit","w","sCount","lc","lj","getColorString","redVal","greenVal","blueVal","setShapeStrokes","shapesGroup","strokeToSet","setShapeColors","colorToSet","getTrim","getSegment","t0","t1","u0","u1","qxa","qxb","qxc","qxd","qya","qyb","qyc","qyd","segment","getLength","shapeIdx","startIdx","endIdx","fullBezierLength","bezierLength","_l","setTrim","trimToSet","it","minT","maxT","sIndex","eIndex","tempK","Object","assign","curSL","curEL","startShapeIndex","endShapeIndex","startSegment","endSegment","initIdx","sourceK","JSON","parse","stringify","startToTrim","getShapesGr","elementId","layerObj","refLabel","refGroup","outer","currentColor","currentStroke","currentTrim","stroked","trimmed","_isGradient","shapeCount","tt","_group","newGroup","_trIndex","g","r","getShapes","shapes","resolveParents","layerId","lastMaskId","passedObj","passedKey","level","addArray","passedLevel","ind","parent","_mask","_isMasked","_addedToDom","layerCount","_parent","_parentIdx","domObj","newLayer","newTranslateGroup","h","processed","_child","_childId","getLayers","elementObj","newMask","_maxWidth","_maxHeight","_isMask","layers","currentLevel","itemsThisLevel","tempLevel","tempArray","item","sort","b","forEach","ip","op","tempRef","assets","id","refId","tempDepth","_boundingX","_boundingY","_posX","_posY","scaleLayers","_currScale","buildGraph","autoplay","loop","customName","_framesPerSec","_autoplay","_customName","_skewW","_skewH","_lastFrame","_debugTimeElapsed","_debugContainer","newSVG","setAttributeNS","contain","maskCount","newCompute","map","clipPath","clipPathRect","scaleW","scaleH","_buildDone","getJson","src","domElement","http","XMLHttpRequest","withCredentials","open","onreadystatechange","readyState","status","received","responseText","search","replace","currentAnimation","_typeof","createElement","send","destroy","name","toString","pause","play","stop","isFrame","valueKeyframeObj","obj","container","path","animationData","debugContainer","window"],"mappings":";;;+qFAAA,IAAMA,EAAQ,6BAEHC,EAAY,WACJ,qBACU,EAC7B,IAOIC,EAJAC,GAAc,EACdC,EAAoB,EAEpBC,GAAiB,EASd,SAASC,EAAMC,MACfF,SAECG,EAAcD,OAEhBE,MAAMC,QAAQF,MAChBG,SAAQC,cAAOJ,KAOZ,SAASK,EAAUC,EAAIC,UACfC,KAAKC,KAAKD,KAAKE,IAAKH,EAAG,GAAKD,EAAG,GAAK,GAAKE,KAAKE,IAAKH,EAAG,GAAKD,EAAG,GAAK,IAI3E,SAASK,EACdL,EACAM,EACAC,EACAN,EACAO,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,OAEMC,EAAW,GAEbX,EAAGY,eAAe,MACXZ,EAAGa,QAAU,IACtBb,EAAGc,EAAId,EAAG,GACI,KAAVM,GAA2B,KAAVA,IACnBN,EAAGe,EAAIf,EAAG,KAGVC,EAAGW,eAAe,MACXX,EAAGY,QAAU,IACtBZ,EAAGa,EAAId,EAAG,GACI,KAAVM,GAA2B,KAAVA,IACnBL,EAAGc,EAAIf,EAAG,KAGA,KAAVM,IACEN,EAAGc,EAAED,OAAS,IAChBb,EAAGc,EAAId,EAAGc,EAAE,GACZd,EAAGe,EAAIf,EAAGe,EAAE,IAEVd,EAAGa,EAAED,OAAS,IAChBZ,EAAGa,EAAIb,EAAGa,EAAE,GACZb,EAAGc,EAAId,EAAGc,EAAE,aAIZC,EACAC,EAFEC,EAASf,EAAMD,EAGjBiB,EAAejB,EACVkB,EAAI,EAAGA,EAAIF,EAAQE,IAAK,IAE/BH,EAAY,GADZD,EAAWI,EAAIF,GAEfP,EAASU,KAAK,CAAEC,MAAO,EAAGC,EAAG,IAC7BJ,IACAR,EAASA,EAASE,OAAS,GAAGW,OAASC,SAASN,GAChDR,EAASA,EAASE,OAAS,GAAGU,EAAIE,SAASN,GAC3CR,EAASA,EAASE,OAAS,GAAGa,EAAI,GACpB,MAAVpB,KACEZ,EAAGmB,OAAS,MACT,IAAIc,EAAI,EAAGA,EAAKjC,EAAGmB,OAAS,EAAIc,IAAK,CACxChB,EAASA,EAASE,OAAS,GAAGa,EAAEL,KAC9BzB,KAAKE,IAAImB,EAAW,GAAKvB,EAAO,EAAJiC,GAC1B,EAAI/B,KAAKE,IAAImB,EAAW,GAAKD,GAAYhB,EAAGc,EAAIpB,EAAO,EAAJiC,IACnD,EAAIV,EAAYrB,KAAKE,IAAIkB,EAAU,IAAMf,EAAGa,EAAInB,EAAO,EAAJgC,IACnD/B,KAAKE,IAAIkB,EAAU,GAAKrB,EAAO,EAAJgC,QAE1B,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACrBjB,EAASA,EAASE,OAAS,GAAGa,EAAEL,KAC9BzB,KAAKE,IAAImB,EAAW,GAAKvB,EAAQ,EAAJiC,EAASC,GACpC,EAAIhC,KAAKE,IAAImB,EAAW,GAAKD,GAAYhB,EAAGe,EAAIrB,EAAQ,EAAJiC,EAASC,IAC7D,EAAIX,EAAYrB,KAAKE,IAAIkB,EAAU,IAAMf,EAAGc,EAAIpB,EAAQ,EAAJgC,EAASC,IAC7DhC,KAAKE,IAAIkB,EAAU,GAAKrB,EAAQ,EAAJgC,EAASC,SAK7CjB,EAASA,EAASE,OAAS,GAAGa,EAAEL,KAChCzB,KAAKE,IAAImB,EAAW,GAAKvB,EAAG,GAC1B,EAAIE,KAAKE,IAAImB,EAAW,GAAKD,GAAYhB,EAAGc,EAAIpB,EAAG,IACnD,EAAIuB,EAAYrB,KAAKE,IAAIkB,EAAU,IAAMf,EAAGa,EAAInB,EAAG,IACnDC,KAAKE,IAAIkB,EAAU,GAAKrB,EAAG,IAEf,KAAVW,GAA2B,KAAVA,IACL,KAAVA,GAA2B,KAAVA,GACnBK,EAASA,EAASE,OAAS,GAAGa,EAAEL,KAC9BzB,KAAKE,IAAImB,EAAW,GAAKvB,EAAG,GAC1B,EAAIE,KAAKE,IAAImB,EAAW,GAAKD,GAAYhB,EAAGe,EAAIrB,EAAG,IACnD,EAAIuB,EAAYrB,KAAKE,IAAIkB,EAAU,IAAMf,EAAGc,EAAIpB,EAAG,IACnDC,KAAKE,IAAIkB,EAAU,GAAKrB,EAAG,SAKhC,CACLgB,EAASA,EAASE,OAAS,GAAGa,EAAEL,KAAK,CAAED,EAAG,GAAIS,EAAG,GAAIC,EAAG,aAE/CC,EAAI,EAAGA,EAAIrC,EADV,GACgB0B,EAAEP,OAAQkB,IAClCpB,EAASA,EAASE,OAAS,GAAGa,EAAEf,EAASA,EAASE,OAAS,GAAGa,EAAEb,OAAS,GAAGO,EAAEC,KAAK,CACjFzB,KAAKE,IAAImB,EAAW,GAAKvB,EAHnB,GAGyB0B,EAAEW,GAAG,GAClC,EAAInC,KAAKE,IAAImB,EAAW,GAAKD,GAAYhB,EAAGc,EAAIpB,EAJ5C,GAIkD0B,EAAEW,GAAG,IAC3D,EAAId,EAAYrB,KAAKE,IAAIkB,EAAU,IAAMf,EAAGa,EAAInB,EAL5C,GAKkDyB,EAAEW,GAAG,IAC3DnC,KAAKE,IAAIkB,EAAU,GAAKrB,EANpB,GAM0ByB,EAAEW,GAAG,GACrCnC,KAAKE,IAAImB,EAAW,GAAKvB,EAPnB,GAOyB0B,EAAEW,GAAG,GAClC,EAAInC,KAAKE,IAAImB,EAAW,GAAKD,GAAYhB,EAAGe,EAAIrB,EAR5C,GAQkD0B,EAAEW,GAAG,IAC3D,EAAId,EAAYrB,KAAKE,IAAIkB,EAAU,IAAMf,EAAGc,EAAIpB,EAT5C,GASkDyB,EAAEW,GAAG,IAC3DnC,KAAKE,IAAIkB,EAAU,GAAKrB,EAVpB,GAU0ByB,EAAEW,GAAG,KAGvCpB,EAASA,EAASE,OAAS,GAAGa,EAAEf,EAASA,EAASE,OAAS,GAAGa,EAAEb,OAAS,GAAGgB,EAAER,KAAK,CACjFzB,KAAKE,IAAImB,EAAW,GAAKvB,EAdnB,GAcyBmC,EAAEE,GAAG,GAClC,EAAInC,KAAKE,IAAImB,EAAW,GAAKD,GAAYhB,EAAGc,EAAIpB,EAf5C,GAekDmC,EAAEE,GAAG,IAC3D,EAAId,EAAYrB,KAAKE,IAAIkB,EAAU,IAAMf,EAAGa,EAAInB,EAhB5C,GAgBkDkC,EAAEE,GAAG,IAC3DnC,KAAKE,IAAIkB,EAAU,GAAKrB,EAjBpB,GAiB0BkC,EAAEE,GAAG,GACrCnC,KAAKE,IAAImB,EAAW,GAAKvB,EAlBnB,GAkByBmC,EAAEE,GAAG,GAClC,EAAInC,KAAKE,IAAImB,EAAW,GAAKD,GAAYhB,EAAGe,EAAIrB,EAnB5C,GAmBkDmC,EAAEE,GAAG,IAC3D,EAAId,EAAYrB,KAAKE,IAAIkB,EAAU,IAAMf,EAAGc,EAAIpB,EApB5C,GAoBkDkC,EAAEE,GAAG,IAC3DnC,KAAKE,IAAIkB,EAAU,GAAKrB,EArBpB,GAqB0BkC,EAAEE,GAAG,KAGvCpB,EAASA,EAASE,OAAS,GAAGa,EAAEf,EAASA,EAASE,OAAS,GAAGa,EAAEb,OAAS,GAAGiB,EAAET,KAAK,CACjFzB,KAAKE,IAAImB,EAAW,GAAKvB,EAzBnB,GAyByBoC,EAAEC,GAAG,GAClC,EAAInC,KAAKE,IAAImB,EAAW,GAAKD,GAAYhB,EAAGc,EAAIpB,EA1B5C,GA0BkDoC,EAAEC,GAAG,IAC3D,EAAId,EAAYrB,KAAKE,IAAIkB,EAAU,IAAMf,EAAGa,EAAInB,EA3B5C,GA2BkDmC,EAAEC,GAAG,IAC3DnC,KAAKE,IAAIkB,EAAU,GAAKrB,EA5BpB,GA4B0BmC,EAAEC,GAAG,GACrCnC,KAAKE,IAAImB,EAAW,GAAKvB,EA7BnB,GA6ByBoC,EAAEC,GAAG,GAClC,EAAInC,KAAKE,IAAImB,EAAW,GAAKD,GAAYhB,EAAGe,EAAIrB,EA9B5C,GA8BkDoC,EAAEC,GAAG,IAC3D,EAAId,EAAYrB,KAAKE,IAAIkB,EAAU,IAAMf,EAAGc,EAAIpB,EA/B5C,GA+BkDmC,EAAEC,GAAG,IAC3DnC,KAAKE,IAAIkB,EAAU,GAAKrB,EAhCpB,GAgC0BmC,EAAEC,GAAG,KAIvCxB,GAAqB,GAAe,MAAVD,GAAgC,UAAdI,GAC1CC,EAASA,EAASE,OAAS,GAAGD,eAAe,MAC/CoB,EACEb,EACAR,EAASA,EAASE,OAAS,GAAGa,EAC9BtB,EACAC,EACAC,EACAC,EACAC,EACAC,UAMDE,EAKF,SAASsB,EAAUb,EAAGc,OACtB,IAAIC,EAAM,EAAGA,EAAMtD,EAAUuC,GAAGgB,QAAQvB,OAAQsB,YAC7CE,EAASxD,EAAUuC,GAAGgB,QAAQD,GAChCG,GAAU,EACLX,EAAIO,EAAgB,EAAGP,GAAK,EAAGA,IAAK,KACtC,IAAIC,EAAI,EAAGA,EAAI/C,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAW3B,OAAQe,IAAK,IAmB7D/C,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAWZ,GAAGS,QAAUA,KAC7CxD,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAWZ,GAAGa,YACnC5D,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAWZ,GAAGc,mBACjCC,EAAQC,SAASC,eAAehE,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAWZ,GAAGkB,SAASC,iBAAiB,QAC5FlB,EAAI,EAAGA,EAAIc,EAAM9B,OAAQgB,IAChCc,EAAMd,GAAGmB,aAAa,SAAUnE,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAWZ,GAAGqB,QAAQtB,IAC7EgB,EAAMd,GAAGmB,aAAa,QAASnE,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAWZ,GAAGsB,OAAOvB,QAK1E,IACD9C,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAWZ,GAAGuB,UAAW,KAC5CC,EAAaR,SAASC,eAAehE,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAWZ,GAAGS,QAC1EgB,EAAkBT,SAASC,eAC/BhE,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAWZ,GAAG0B,aAEnCzE,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAWZ,GAAG2B,SACvCH,EAAWJ,aAAa,IAAKnE,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAWZ,GAAG4B,YAEhE3E,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAWZ,GAAG6B,SAAS5C,OAAS,GACzDuC,EAAWJ,aACT,YACAnE,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAWZ,GAAG6B,UAGrC5E,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAWZ,GAAGa,SACvCW,EAAWJ,aACT,OACAnE,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAWZ,GAAG8B,MAGrC7E,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAWZ,GAAG+B,aAAe,GACtDP,EAAWJ,aACT,eACAnE,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAWZ,GAAG+B,aAGzCN,EAAgBL,aACd,UACAnE,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAWZ,GAAGgC,SAEvCtB,GAAU,QAGRzD,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAWZ,GAAGiC,MAAQhF,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAWZ,GAAGkC,aACpFlB,SAASC,eACPhE,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAWZ,GAAGmC,UACrCC,MAAMC,QAAU,QAEhBpF,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAWZ,GAAGsC,MAAQrF,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAWZ,GAAGkC,aACpFlB,SAASC,eACPhE,EAAUuC,GAAGmB,OAAOZ,GAAGa,WAAWZ,GAAGmC,UACrCC,MAAMC,QAAU,YAKpB3B,EAAS,SAEXA,EAAS,OAMZ,SAAS6B,YACRC,EAAcC,KAAKC,MAChBlD,EAAI,EAAGA,GAAKmD,iBAAgBnD,OAC/BvC,EAAUuC,GAAGoD,SAAWJ,EAAcvF,EAAUuC,GAAGqD,WAAc5F,EAAUuC,GAAGsD,WAAa,GAAK,IAC9F7F,EAAUuC,GAAGuD,UAAY9F,EAAUuC,GAAGwD,oBAItC/F,EAAUuC,GAAGyD,kBAEfhG,EAAUuC,GAAG0D,aAAejG,EAAUuC,GAAG0D,cAAgBV,EAAcvF,EAAUuC,GAAGqD,YAGtF5F,EAAUuC,GAAGc,gBACTrD,EAAUuC,GAAGc,eAAiBrD,EAAUuC,GAAG2D,aAAc,IAC3DlG,EAAUuC,GAAG4D,aACbnG,EAAUuC,GAAG6D,WAAWC,cAAc,IAAIC,YAAY,iBAAkB,CAACC,SAAS,EAAMC,OAAQ,OAAUxG,EAAUuC,GAAG4D,qBAAyB5D,QAAYvC,EAAUuC,GAAGc,kBACzKrD,EAAUuC,GAAG6D,WAAWC,cAAc,IAAIC,YAAY,eAAgB,CAACC,SAAS,EAAMC,OAAQ,OAAUxG,EAAUuC,GAAG4D,qBAAyB5D,QAAYvC,EAAUuC,GAAGc,mBAClKrD,EAAUuC,GAAGkE,MAAO,CACvBzG,EAAUuC,GAAGc,gBACbrD,EAAUuC,GAAGwD,SAAU,EACvBW,GAAY1G,EAAUuC,GAAGc,cAAe,GAAIrD,EAAUuC,GAAGoE,qBAIzD3G,EAAUuC,GAAGc,cAAgB,MAK1B,IAAIuD,EAAI,EAAGA,EAAI5G,EAAUuC,GAAGmB,OAAO1D,EAAUuC,GAAGc,eAAeM,WAAW3B,OAAQ4E,OACjF5G,EAAUuC,GAAGmB,OAAO1D,EAAUuC,GAAGc,eAAeM,WAAWiD,GAAGhD,YAC5D5D,EAAUuC,GAAGmB,OAAO1D,EAAUuC,GAAGc,eAAeM,WAAWiD,GAAG/C,mBAC1DC,EAAQC,SAASC,eAAehE,EAAUuC,GAAGmB,OAAO1D,EAAUuC,GAAGc,eAAeM,WAAWiD,GAAG3C,SAASC,iBAAiB,QACrHpB,EAAI,EAAGA,EAAIgB,EAAM9B,OAAQc,IAChCgB,EAAMhB,GAAGqB,aAAa,SAAUnE,EAAUuC,GAAGmB,OAAO1D,EAAUuC,GAAGc,eAAeM,WAAWiD,GAAGxC,QAAQtB,IACtGgB,EAAMhB,GAAGqB,aAAa,QAASnE,EAAUuC,GAAGmB,OAAO1D,EAAUuC,GAAGc,eAAeM,WAAWiD,GAAGvC,OAAOvB,QAKnG,IACD9C,EAAUuC,GAAGmB,OAAO1D,EAAUuC,GAAGc,eAAeM,WAAWiD,GAAGtC,UAAW,KACrEC,EAAaR,SAASC,eAAehE,EAAUuC,GAAGmB,OAAO1D,EAAUuC,GAAGc,eAAeM,WAAWiD,GAAGpD,QACnGgB,EAAkBT,SAASC,eAC/BhE,EAAUuC,GAAGmB,OAAO1D,EAAUuC,GAAGc,eAAeM,WAAWiD,GAAGnC,aAE5DzE,EAAUuC,GAAGmB,OAAO1D,EAAUuC,GAAGc,eAAeM,WAAWiD,GAAGlC,SAChEH,EAAWJ,aAAa,IAAKnE,EAAUuC,GAAGmB,OAAO1D,EAAUuC,GAAGc,eAAeM,WAAWiD,GAAGjC,YAEzF3E,EAAUuC,GAAGmB,OAAO1D,EAAUuC,GAAGc,eAAeM,WAAWiD,GAAGhC,SAAS5C,OAAS,GAClFuC,EAAWJ,aACT,YACAnE,EAAUuC,GAAGmB,OAAO1D,EAAUuC,GAAGc,eAAeM,WAAWiD,GAAGhC,UAG9D5E,EAAUuC,GAAGmB,OAAO1D,EAAUuC,GAAGc,eAAeM,WAAWiD,GAAGhD,SAChEW,EAAWJ,aACT,OACAnE,EAAUuC,GAAGmB,OAAO1D,EAAUuC,GAAGc,eAAeM,WAAWiD,GAAG/B,MAG9D7E,EAAUuC,GAAGmB,OAAO1D,EAAUuC,GAAGc,eAAeM,WAAWiD,GAAG9B,aAAe,GAC/EP,EAAWJ,aACT,eACAnE,EAAUuC,GAAGmB,OAAO1D,EAAUuC,GAAGc,eAAeM,WAAWiD,GAAG9B,aAGlEN,EAAgBL,aACd,UACAnE,EAAUuC,GAAGmB,OAAO1D,EAAUuC,GAAGc,eAAeM,WAAWiD,GAAG7B,SAG9D/E,EAAUuC,GAAGmB,OAAO1D,EAAUuC,GAAGc,eAAeM,WAAWiD,GAAG5B,MAAQhF,EAAUuC,GAAGmB,OAAO1D,EAAUuC,GAAGc,eAAeM,WAAWiD,GAAG3B,aACtIlB,SAASC,eACPhE,EAAUuC,GAAGmB,OAAO1D,EAAUuC,GAAGc,eAAeM,WAAWiD,GAAG1B,UAC9DC,MAAMC,QAAU,QAEhBpF,EAAUuC,GAAGmB,OAAO1D,EAAUuC,GAAGc,eAAeM,WAAWiD,GAAGvB,MAAQrF,EAAUuC,GAAGmB,OAAO1D,EAAUuC,GAAGc,eAAeM,WAAWiD,GAAG3B,aACtIlB,SAASC,eACPhE,EAAUuC,GAAGmB,OAAO1D,EAAUuC,GAAGc,eAAeM,WAAWiD,GAAG1B,UAC9DC,MAAMC,QAAU,aAMtByB,EAAarB,KAAKC,SAClBzF,EAAUuC,GAAGyD,gBAAiB,KAE5Bc,EAAYtB,KAAKC,MACrBzF,EAAUuC,GAAG0D,aAAejG,EAAUuC,GAAG0D,cAAgBa,EAAYvB,GAEjEvF,EAAUuC,GAAG0D,cAAgB,MAC/BjG,EAAUuC,GAAGwE,QAAU,KAAQxB,EAAcvF,EAAUuC,GAAGqD,WAC1D5F,EAAUuC,GAAGyE,UAAUC,kCAA6BjH,EAAUuC,GAAG2E,6BAC/DlH,EAAUuC,GAAGwE,SAEf/G,EAAUuC,GAAG0D,aAAe,GAIhCjG,EAAUuC,GAAGqD,UAAYL,EAI7B4B,aAAalH,GACbmH,YAAW,WACTC,sBAAsB/B,KACpBnF,EAAoB,GAAM0G,EAAatB,IAMtC,SAAS+B,QACRC,EAAa,CACnBA,WAAwB,EACxBA,WAAwB,EACxBA,aAA0B,EAC1BA,aAA0B,EAC1BA,YAAyB,EACzBA,cAA2B,EAC3BA,QAAqB,EACrBA,QAAqB,EACrBA,SAAsB,EACtBA,SAAsB,EACtBA,eAA4B,EAC5BA,eAA4B,EAC5BA,aAAyB,EAEzBA,SAAqB,EAErBA,WAAwB,GACxBA,SAAqB,EACrBA,WAAwB,GACxBA,OAAoB,GACpBA,SAAsB,GACtBA,YAAyB,GACzBA,WAAuB,EAEvBA,MAAkB,EAClBA,MAAkB,EAClBA,YAAwB,EAExBA,UAAuB,GACvBA,OAAoB,GACpBA,MAAmB,GACnBA,QAAqB,EACrBA,SAAsB,EACtBA,UAAuB,EACvBA,SAAqB,EACrBA,SAAsB,GACtBA,OAAmB,EAGnBA,aAA0B,UAEnBA,EAGF,SAASC,QACRD,EAAa,CACnBA,SAAqB,EACrBA,YAAwB,EACxBA,KAAkB,GAClBA,aAA0B,GAC1BA,QAAqB,WACdA,EAGF,SAASE,QACRF,EAAa,CACnBA,SAAqB,EACrBA,SAAsB,GACtBA,OAAoB,GACpBA,MAAkB,EAClBA,MAAkB,UACXA,EAGF,SAASG,EAAsBH,EAAY/F,EAAamG,EAAOC,EAASC,WAEtBC,IAAnD9H,EAAUwB,GAAakC,OAAOd,SAAS+E,WAErCE,GACM,EAEHN,MAEJ,IAAIhF,EAAI,EAAGA,EAAIvC,EAAUwB,GAAakC,OAAOd,SAAS+E,IAAQhE,WAAW3B,OAAQO,OAChFqF,MACE5H,EAAUwB,GAAakC,OAAOd,SAAS+E,IAAQhE,WAAWpB,GAAG0B,SAAWsD,EAAWtD,QAAS,IAC1F4D,SACKtF,EAED,iBAINvC,EAAUwB,GAAakC,OAAOd,SAAS+E,IAAQhE,WAAWpB,GAAGiB,QAAU+D,EAAW/D,OAAQ,IACxFqE,SACKtF,EAETgF,EAAavH,EAAUwB,GAAakC,OAAOd,SAAS+E,IAAQhE,WAAWpB,GAC/D,eAKPgF,EAGF,SAASQ,EAAgBR,EAAY/F,EAAamG,EAAOC,OAC1DI,EAAWN,EAAsBH,EAAY/F,EAAamG,EAAOC,GAAS,IAE7D,GAAbI,EACFhI,EAAUwB,GAAakC,OAAOd,SAAS+E,IAAQhE,WAAWnB,KAAK+E,GAE/DvH,EAAUwB,GAAakC,OAAOd,SAAS+E,IAAQhE,WAAWqE,GAAYT,EAInE,SAASU,EAAczG,EAAa0D,EAAUgD,EAASC,GACxDA,EAAWnI,EAAUwB,GAAa0E,eACpCiC,EAAWnI,EAAUwB,GAAa0E,cAEhCgC,EAAU,IACZA,EAAU,GAERA,EAAUlI,EAAUwB,GAAa0E,eACnCgC,EAAUlI,EAAUwB,GAAa0E,kBAE/BqB,EAAaE,OAEbS,GAAW,EAAG,CAChBP,QAAQO,MACH,IAAI3F,EAAI,EAAGA,EAAIvC,EAAUwB,GAAakC,OAAOd,SAAS+E,UAAQhE,WAAW3B,OAAQO,OAChFvC,EAAUwB,GAAakC,OAAOd,SAAS+E,UAAQhE,WAAWpB,GAAG2C,UAAYA,EAAU,CACrFqC,EAAavH,EAAUwB,GAAakC,OAAOd,SAAS+E,UAAQhE,WAAWpB,GAC/D,QAIZgF,EAAWrC,SAAWA,EACtBqC,EAAWlC,MAAO,EAClBkC,EAAWtC,YAAa,EACxBjF,EAAUwB,GAAakC,OAAOd,SAAS+E,UAAQhE,WAAWnB,KAAK+E,MAGjEA,EAAaE,IACL,EACJU,GAAY,EAAG,CACjBR,QAAQQ,MACC5F,EAAI,EAAGA,EAAIvC,EAAUwB,GAAakC,OAAOd,SAAS+E,UAAQhE,WAAW3B,OAAQO,OAChFvC,EAAUwB,GAAakC,OAAOd,SAAS+E,UAAQhE,WAAWpB,GAAG2C,UAAYA,EAAU,CACrFqC,EAAavH,EAAUwB,GAAakC,OAAOd,SAAS+E,UAAQhE,WAAWpB,GAC/D,QAIZgF,EAAWrC,SAAWA,EACtBqC,EAAWvC,MAAO,EAClBuC,EAAWtC,YAAa,EACxBjF,EAAUwB,GAAakC,OAAOd,SAAS+E,UAAQhE,WAAWnB,KAAK+E,QAE/DI,QAAQ,KAGVJ,EAAaE,IACL,EACJU,GAAY,GAAKD,EAAU,EAAG,CAChCP,QAAQ,MACCpF,EAAI,EAAGA,EAAIvC,EAAUwB,GAAakC,OAAOd,SAAS+E,UAAQhE,WAAW3B,OAAQO,OAChFvC,EAAUwB,GAAakC,OAAOd,SAAS+E,UAAQhE,WAAWpB,GAAG2C,UAAYA,EAAU,CACrFqC,EAAavH,EAAUwB,GAAakC,OAAOd,SAAS+E,UAAQhE,WAAWpB,GAC/D,QAIZgF,EAAWrC,SAAWA,EACtBqC,EAAWvC,MAAO,EAClBuC,EAAWtC,YAAa,EACxBjF,EAAUwB,GAAakC,OAAOd,SAAS+E,UAAQhE,WAAWnB,KAAK+E,OAG7Da,EAAY,KACZT,QAAQ,MACL,IAAIf,EAAI,EAAGA,GAAK5G,EAAUwB,GAAa0E,aAAcU,QAC/CrE,EAAI,EAAGA,EAAIvC,EAAUwB,GAAakC,OAAOkD,GAAGjD,WAAW3B,OAAQO,IAClEvC,EAAUwB,GAAakC,OAAOkD,GAAGjD,WAAWpB,GAAG2C,UAAYA,IACzDlF,EAAUwB,GAAakC,OAAOkD,GAAGjD,WAAWpB,GAAG8C,OACjD+C,EAAY,GAEVpI,EAAUwB,GAAakC,OAAOkD,GAAGjD,WAAWpB,GAAGyC,OACjDoD,EAAY,GAEG,GAAbA,EACFpI,EAAUwB,GAAakC,OAAOkD,GAAGjD,WAAWpB,GAAG8C,MAAO,EAEtDrF,EAAUwB,GAAakC,OAAOkD,GAAGjD,WAAWpB,GAAGyC,MAAO,GAQ3D,SAAS7B,EACdwE,EACAU,EACA9G,EACAC,EACAC,EACAC,EACAC,EACAC,QAEI+F,EAAQ,GAAKjG,EAAoB,GAGjCiG,EAAQ3H,EAAUwB,GAAa0E,mBAG/BqB,EAAaD,IAEbgB,EAAO,KAEP/G,IACEI,EAASI,eAAe,uBAGtBJ,EAAS4G,mBAAmBC,UAAY,IAE1CjB,EAAWW,QAAUtF,SAASjB,EAAS4G,mBAAmBC,WAExD7G,EAAS4G,mBAAmBE,UAAY,IAC1ClB,EAAWY,SAAWvF,SAASjB,EAAS4G,mBAAmBE,aAGzD9G,EAASI,eAAe,mBACtBJ,EAAS+G,cAAcF,UAAY,IAErCjB,EAAWW,QAAUtF,SAASjB,EAAS+G,cAAcF,WAEnD7G,EAAS+G,cAAcD,UAAY,IACrClB,EAAWY,SAAWvF,SAASjB,EAAS+G,cAAcD,cAO1DlB,EAAWW,QAAU,GAAKX,EAAWY,SAAW,GAC9CR,GAASJ,EAAWW,SAAWP,GAASJ,EAAWY,YACjD3H,MAAMC,QAAQ4H,OAChBC,EAAOD,EAAS,GACZM,OAAOC,MAAMN,kBAIjBA,EAAOD,EACHM,OAAOC,MAAMN,KACfA,EAAOD,EAAS,GACZM,OAAOC,MAAMN,WAQrB/G,GACFgG,EAAWhG,SAAU,EACjBI,EAASkH,GAAK,EAChBtB,EAAW/D,iBAAYhC,cAAeI,wBAAmBD,EAASmH,QAElEvB,EAAW/D,iBAAYhC,cAAeI,4BAAuBD,EAASmH,QAExEvB,EAAW9C,sBAAiBjD,cAAeI,wBAAmBD,EAASmH,UAEvEvB,EAAWhG,SAAU,EACrBgG,EAAW/D,iBAAYhC,mBAAoBxB,EAAUwB,GAAauH,oBAClExB,EAAW9C,sBAAiBjD,mBAAoBxB,EAAUwB,GAAauH,qBAGzExB,EAAWyB,QAAUrH,EAASsH,SAC9B1B,EAAW2B,QAAUvH,EAASwH,SAE9B5B,EAAaG,EAAsBH,EAAY/F,EAAamG,GAExD3H,EAAUwB,GAAa4H,UAAUrH,eAAewF,EAAW/D,UAE7DxD,EAAUwB,GAAa+B,QAAQf,KAAK+E,EAAW/D,QAC/CxD,EAAUwB,GAAa6H,SAAS9B,EAAW/D,QAAU,GACrDxD,EAAUwB,GAAa6H,SAAS9B,EAAW/D,QAAQ,GAAKO,SACrDC,eAAeuD,EAAW/D,QAC1B8F,wBAAwBC,MAC3BvJ,EAAUwB,GAAa6H,SAAS9B,EAAW/D,QAAQ,GAAKO,SACrDC,eAAeuD,EAAW/D,QAC1B8F,wBAAwBE,YAEvBC,EAAuBzJ,EAAUwB,GAAa6H,SAAS9B,EAAW/D,QACjD,GAAnB7B,EAASmH,QACXzI,GAAM,iBAAM,CACV,kCACA,CAACoJ,EAAqB,GAAIA,EAAqB,IAC/C,CAAClC,EAAWyB,QAASzB,EAAW2B,aAGpC3B,EAAWjD,WAAY,MAcnBoF,EACAC,EAKEC,EACAC,EAnBFC,EAAO,KAEG,KAAVrI,IACF8F,EAAWwC,aAAezB,EACtB3G,EAASI,eAAe,aAAeJ,EAASI,eAAe,YACjEwF,EAAWyC,wBAAmBzC,EAAWwC,wBAAepI,EAASsH,qBAAYtH,EAASwH,eAEtF5B,EAAWyC,wBAAmBzC,EAAWwC,wBACvChG,SAASC,eAAeuD,EAAW/D,QAAQ8F,wBAAwBC,MAAQ,cACzExF,SAASC,eAAeuD,EAAW/D,QAAQ8F,wBAAwBE,OAAS,SAKtE,KAAV/H,EACF8F,EAAW0C,cAAgB3B,EAC3BoB,EAAgBD,EAAqB,GACrCE,EAAgBF,EAAqB,GAGjCpB,EAASrG,OAAS,GACpBuF,EAAW2C,cAAgB7B,EAAS,GACpCuB,EAAgB,EAAIrC,EAAW0C,aAAe,IAC9CJ,EAAgB,EAAItC,EAAW2C,aAAe,MAE9CN,EAAgB,EAAIrC,EAAW0C,aAAe,IAC9CJ,EAAgB,EAAItC,EAAW0C,aAAe,KAEhD1C,EAAW4C,sBAAiB5C,EAAW0C,aAAe,gBAAO1C,EAAW2C,aAAe,UACvF3C,EAAW6C,UAAY7C,EAAWyB,QAAUU,GAAiBE,EAAgBF,EAAgBE,EAC7FrC,EAAW8C,UAAY9C,EAAW2B,QAAUS,GAAiBE,EAAgBF,EAAgBE,EAC7FtC,EAAW+C,eAAiB/C,EAAWyB,QAAUY,EACjDrC,EAAWgD,eAAiBhD,EAAW2B,QAAUW,KAErC,KAAVpI,IACFqI,EAAOzB,EAAS,GACZ1G,EAASI,eAAe,cAC1BwF,EAAWiD,YAAclC,GAEvB3G,EAASI,eAAe,cAC1BwF,EAAWkD,YAAcX,GAE3BvC,EAAWmD,8BAAyBnD,EAAWiD,WAAajD,EAAWyB,oBACrEzB,EAAWkD,WAAalD,EAAW2B,cAErC3B,EAAWoD,aAAc,GAGtBpD,EAAWoD,cACdpD,EAAWmD,8BAAyBnD,EAAW6C,qBAAY7C,EAAW8C,eACtE9C,EAAWoD,aAAc,GAGb,KAAVlJ,IACF8F,EAAWqD,eAAiBtC,EAC5Bf,EAAWxC,QAAUwC,EAAWqD,cAAgB,KAGlDrD,EAAW3C,SAAW2C,EAAWmD,UAAYnD,EAAW4C,MAAQ5C,EAAWyC,OAC3EzC,EAAWsD,OAAQ,EACnB7K,EAAUwB,GAAakC,OAAOd,SAAS+E,IAAQhE,WAAWnB,KAAK+E,GAG3DI,EAAQ,UAEDpF,EAAIK,SAAS+E,GAAS,EAAGpF,EAAI,EAAGA,OACnCvC,EAAUwB,GAAakC,OAAOnB,GAAGoB,WAAWH,QAAU+D,EAAW/D,QAC/DxD,EAAUwB,GAAakC,OAAOnB,GAAGoB,WAAWgH,YAAa,EAC3C,QAYXpD,EAAW/D,OAEpBxD,EAAUwB,GAAa4H,UAAUrH,eAAewF,EAAW/D,UAE7DxD,EAAUwB,GAAa4H,UAAU7B,EAAW/D,QAAU,EACtDxD,EAAUwB,GAAakC,OAAO,GAAGC,WAAWnB,KAAK+E,KAU9C,SAASuD,EACdC,EACAtJ,EACAF,EACAC,EACAE,EACAC,EACAC,WAMId,EAJAyB,EAAI,EACJyI,EAAYD,EAAkBtJ,GAAQyB,EAAElB,OACxCiJ,EAAYD,EACVE,EAAW,CAAEjJ,EAAG,EAAGC,EAAG,GAMrBK,EAAIyI,EAAY,GAAG,KACjB,GACA,EAEHD,EAAkBtJ,GAAQyB,EAAEX,GAAGR,eAAe,cAC3C,KA4CDoJ,EA3CAzJ,GAAqB,IACnBqJ,EAAkBtJ,GAAQyB,EAAEX,GAAGR,eAAe,KAChDoB,EACE4H,EAAkBtJ,GAAQyB,EAAEX,GAAGG,EAC/BqI,EAAkBtJ,GAAQyB,EAAEX,GAAGM,EAC/BtB,EACAC,EACAC,EACAC,EACAC,EACAC,GAGEmJ,EAAkBtJ,GAAQyB,EAAEX,GAAGR,eAAe,MAChDoB,EACE4H,EAAkBtJ,GAAQyB,EAAEX,GAAGG,EAC/BqI,EAAkBtJ,GAAQyB,EAAEX,GAAG6I,EAC/B7J,EACAC,EACAC,EACAC,EACAC,EACAC,IAURd,EAAKiK,EAAkBtJ,GAAQyB,EAAEX,EAAI,GAAGM,EAEpCkI,EAAkBtJ,GAAQyB,EAAEX,EAAI,GAAGR,eAAe,MAAkB,MAAVN,GAAkBC,GAAqB,IAC/FqJ,EAAkBtJ,GAAQyB,EAAEX,EAAI,GAAGA,EAAEN,EAAI,IAAG8I,EAAkBtJ,GAAQyB,EAAEX,EAAI,GAAGA,EAAEN,EAAI,GACrF8I,EAAkBtJ,GAAQyB,EAAEX,EAAI,GAAGA,EAAEL,EAAI,IAAG6I,EAAkBtJ,GAAQyB,EAAEX,EAAI,GAAGA,EAAEL,EAAI,IAEvF6I,EAAkBtJ,GAAQyB,EAAEX,GAAGR,eAAe,MAAkB,MAAVN,GAAkBC,GAAqB,IAC3FqJ,EAAkBtJ,GAAQyB,EAAEX,GAAGS,EAAEf,EAAI,IAAG8I,EAAkBtJ,GAAQyB,EAAEX,GAAGS,EAAEf,EAAI,GAC7E8I,EAAkBtJ,GAAQyB,EAAEX,GAAGS,EAAEd,EAAI,IAAG6I,EAAkBtJ,GAAQyB,EAAEX,GAAGS,EAAEd,EAAI,QAwE9E,IAAIW,GAhEPsI,EAHAJ,EAAkBtJ,GAAQyB,EAAEX,GAAGR,eAAe,MAC9CgJ,EAAkBtJ,GAAQyB,EAAEX,GAAGR,eAAe,KAExBb,EACpB6J,EAAkBtJ,GAAQyB,EAAEX,GAAGM,EAC/BkI,EAAkBtJ,GAAQyB,EAAEX,GAAGS,EAC/B+H,EAAkBtJ,GAAQyB,EAAEX,GAAGA,EAC/BwI,EAAkBtJ,GAAQyB,EAAEX,GAAG6I,EAC/BL,EAAkBtJ,GAAQyB,EAAEX,GAAGG,EAC/BqI,EAAkBtJ,GAAQyB,EAAEX,EAAI,GAAGG,EACnCnB,EACAC,EACAC,EACAC,EACAC,EACAC,GAGFmJ,EAAkBtJ,GAAQyB,EAAEX,EAAI,GAAGR,eAAe,MAClDgJ,EAAkBtJ,GAAQyB,EAAEX,GAAGR,eAAe,KAGxBb,EACpB6J,EAAkBtJ,GAAQyB,EAAEX,GAAGM,EAC/BkI,EAAkBtJ,GAAQyB,EAAEX,GAAGS,EAC/B+H,EAAkBtJ,GAAQyB,EAAEX,EAAI,GAAGA,EACnCzB,EACAiK,EAAkBtJ,GAAQyB,EAAEX,GAAGG,EAC/BqI,EAAkBtJ,GAAQyB,EAAEX,EAAI,GAAGG,EACnCnB,EACAC,EACAC,EACAC,EACAC,EACAC,GAEOmJ,EAAkBtJ,GAAQyB,EAAEX,GAAGR,eAAe,KACjCb,EACpB6J,EAAkBtJ,GAAQyB,EAAEX,GAAGM,EAC/BkI,EAAkBtJ,GAAQyB,EAAEX,GAAGS,EAC/BkI,EACApK,EACAiK,EAAkBtJ,GAAQyB,EAAEX,GAAGG,EAC/BqI,EAAkBtJ,GAAQyB,EAAEX,EAAI,GAAGG,EACnCnB,EACAC,EACAC,EACAC,EACAC,EACAC,GAGoBV,EACpB6J,EAAkBtJ,GAAQyB,EAAEX,GAAGM,EAC/BqI,EACAA,EACApK,EACAiK,EAAkBtJ,GAAQyB,EAAEX,GAAGG,EAC/BqI,EAAkBtJ,GAAQyB,EAAEX,EAAI,GAAGG,EACnCnB,EACAC,EACAC,EACAC,EACAC,EACAC,IAG6BI,OAAS,EAAGa,GAAK,EAAGA,IACnDkI,EAAkBtJ,GAAQyB,EAAEmI,OAAO9I,EAAI,EAAG,EAAG4I,EAAoBtI,IAInEN,IADAyI,EAAYD,EAAkBtJ,GAAQyB,EAAElB,QACvBiJ,EACjBA,EAAYD,EAEdzI,GAAK,SAGAwI,EAGF,SAASO,EACd/G,EACAgH,EACA9J,EACAF,EACAC,EACAE,EACAC,EACAC,MAEA2C,EAAW9C,GAAQyB,EAAI,GACnBqB,EAAW9C,GAAQQ,EAAEiB,EAAElB,OAAS,IAClCuC,EAAW9C,GAAUqJ,EACnBvG,EAAW9C,GACX,IACAF,EACAC,GACA,EACAG,EACAC,IAIA2C,EAAW9C,GAAQS,EAAEgB,EAAElB,OAAS,IAClCuC,EAAW9C,GAAUqJ,EACnBvG,EAAW9C,GACX,IACAF,EACAC,GACA,EACAG,EACAC,KAKCpB,MAAMC,QAAQ8D,EAAW9C,GAAQQ,EAAEiB,OACjC,IAAIX,EAAI,EAAGA,EAAIgC,EAAW9C,GAAQS,EAAEgB,EAAElB,OAAQO,IAC7CgC,EAAW9C,GAAQS,EAAEgB,EAAEX,GAAGR,eAAe,MAC3CwC,EAAW9C,GAAQyB,EAAEV,KAAK,CACxBD,EAAG,CAAC,EAAG,EAAG,GACVS,EAAG,CAAC,EAAG,EAAG,GACVH,EAAG,CAAC0B,EAAW9C,GAAQQ,EAAEiB,EAAGqB,EAAW9C,GAAQS,EAAEgB,EAAEX,GAAGM,EAAE,GAAI,GAC5DH,EAAG6B,EAAW9C,GAAQS,EAAEgB,EAAEX,GAAGG,QAoChC6B,EAAW9C,GAAQS,EAAEgB,EAAEzC,YACjB8B,EAAI,EAAGA,EAAIgC,EAAW9C,GAAQQ,EAAEiB,EAAElB,OAAQO,IAC7CgC,EAAW9C,GAAQQ,EAAEiB,EAAEX,GAAGR,eAAe,MAC3CwC,EAAW9C,GAAQyB,EAAEV,KAAK,CACxBD,EAAG,CAAC,EAAG,EAAG,GACVS,EAAG,CAAC,EAAG,EAAG,GACVH,EAAG,CAAC0B,EAAW9C,GAAQQ,EAAEiB,EAAEX,GAAGM,EAAE,GAAI0B,EAAW9C,GAAQS,EAAEgB,EAAG,GAC5DR,EAAG6B,EAAW9C,GAAQQ,EAAEiB,EAAEX,GAAGG,OAoCjC6B,EAAW9C,GAAQQ,EAAEiB,EAAElB,OAASuC,EAAW9C,GAAQS,EAAEgB,EAAElB,OAAQ,KACxDO,EAAI,EAAGA,EAAIgC,EAAW9C,GAAQQ,EAAEiB,EAAElB,OAAQO,IACjDgC,EAAW9C,GAAQyB,EAAEV,KAAK,CACxBD,EAAG,CAAC,EAAG,EAAG,GACVS,EAAG,CAAC,EAAG,EAAG,GACVH,EAAG,CAAC0B,EAAW9C,GAAQQ,EAAEiB,EAAEX,GAAGM,EAAE,GAAI,EAAG,GACvCH,EAAG6B,EAAW9C,GAAQQ,EAAEiB,EAAEX,GAAGG,QAGxBH,EAAI,EAAGA,EAAIgC,EAAW9C,GAAQS,EAAEgB,EAAElB,OAAQO,IAC7CgC,EAAW9C,GAAQyB,EAAE,GAAGR,EAAI6B,EAAW9C,GAAQS,EAAEgB,EAAEX,GAAGG,EACxD6B,EAAW9C,GAAQyB,EAAEmI,OAAO9I,EAAG,EAAG,CAChCA,EAAG,CAAC,EAAG,EAAG,GACVS,EAAG,CAAC,EAAG,EAAG,GACVH,EAAG,CAAC,EAAG0B,EAAW9C,GAAQS,EAAEgB,EAAEX,GAAGM,EAAE,GAAI,GACvCH,EAAG6B,EAAW9C,GAAQS,EAAEgB,EAAEX,GAAGG,IAEtB6B,EAAW9C,GAAQyB,EAAE,GAAGR,EAAI6B,EAAW9C,GAAQS,EAAEgB,EAAEX,GAAGG,EAC/D6B,EAAW9C,GAAQyB,EAAEV,KAAK,CACxBD,EAAG,CAAC,EAAG,EAAG,GACVS,EAAG,CAAC,EAAG,EAAG,GACVH,EAAG,CAAC,EAAG0B,EAAW9C,GAAQS,EAAEgB,EAAEX,GAAGM,EAAE,GAAI,GACvCH,EAAG6B,EAAW9C,GAAQS,EAAEgB,EAAEX,GAAGG,IAEtB6B,EAAW9C,GAAQyB,EAAE,GAAGR,GAAK6B,EAAW9C,GAAQS,EAAEgB,EAAEX,GAAGG,IAChE6B,EAAW9C,GAAQyB,EAAEL,EAAE,GAAK0B,EAAW9C,GAAQS,EAAEgB,EAAEX,GAAGM,EAAE,OAkC1D0B,EAAW9C,GAAQQ,EAAEiB,EAAElB,OAASuC,EAAW9C,GAAQS,EAAEgB,EAAElB,OAAQ,KACxDO,EAAI,EAAGA,EAAIgC,EAAW9C,GAAQS,EAAEgB,EAAElB,OAAQO,IACjDgC,EAAW9C,GAAQyB,EAAEV,KAAK,CACxBD,EAAG,CAAC,EAAG,EAAG,GACVS,EAAG,CAAC,EAAG,EAAG,GACVH,EAAG,CAAC,EAAG0B,EAAW9C,GAAQS,EAAEgB,EAAEX,GAAGM,EAAE,GAAI,GACvCH,EAAG6B,EAAW9C,GAAQS,EAAEgB,EAAEX,GAAGG,QAGxBH,EAAI,EAAGA,EAAIgC,EAAW9C,GAAQQ,EAAEiB,EAAElB,OAAQO,IAC7CgC,EAAW9C,GAAQyB,EAAE,GAAGR,EAAI6B,EAAW9C,GAAQQ,EAAEiB,EAAEX,GAAGG,EACxD6B,EAAW9C,GAAQyB,EAAEmI,OAAO9I,EAAG,EAAG,CAChCA,EAAG,CAAC,EAAG,EAAG,GACVS,EAAG,CAAC,EAAG,EAAG,GACVH,EAAG,CAAC0B,EAAW9C,GAAQQ,EAAEiB,EAAEX,GAAGM,EAAE,GAAI,EAAG,GACvCH,EAAG6B,EAAW9C,GAAQQ,EAAEiB,EAAEX,GAAGG,IAEtB6B,EAAW9C,GAAQyB,EAAE,GAAGR,EAAI6B,EAAW9C,GAAQQ,EAAEiB,EAAEX,GAAGG,EAC/D6B,EAAW9C,GAAQyB,EAAEV,KAAK,CACxBD,EAAG,CAAC,EAAG,EAAG,GACVS,EAAG,CAAC,EAAG,EAAG,GACVH,EAAG,CAAC0B,EAAW9C,GAAQQ,EAAEiB,EAAEX,GAAGM,EAAE,GAAI,EAAG,GACvCH,EAAG6B,EAAW9C,GAAQQ,EAAEiB,EAAEX,GAAGG,IAEtB6B,EAAW9C,GAAQyB,EAAE,GAAGR,GAAK6B,EAAW9C,GAAQQ,EAAEiB,EAAEX,GAAGG,IAChE6B,EAAW9C,GAAQyB,EAAEL,EAAE,GAAK0B,EAAW9C,GAAQQ,EAAEiB,EAAEX,GAAGM,EAAE,QAmCrDN,EAAI,EAAGA,EAAIgC,EAAW9C,GAAQyB,EAAElB,OAAQO,IAC3CgC,EAAW9C,GAAQyB,EAAEX,GAAGR,eAAe,KACzCoB,EACEoB,EAAW9C,GAAQyB,EAAEX,GAAGG,EACxB6B,EAAW9C,GAAQyB,EAAEX,GAAGM,EACxBtB,EACAC,EACAC,EACAC,EACAC,EACAC,GAGE2C,EAAW9C,GAAQyB,EAAEX,GAAGR,eAAe,KACzCoB,EACEoB,EAAW9C,GAAQyB,EAAEX,GAAGG,EACxB6B,EAAW9C,GAAQyB,EAAEX,GAAG6I,EACxB7J,EACAC,EACAC,EACAC,EACAC,EACAC,GAGE2C,EAAW9C,GAAQyB,EAAEX,EAAI,GAAGR,eAAe,MAC7CoB,EACEoB,EAAW9C,GAAQyB,EAAEX,GAAGG,EACxB6B,EAAW9C,GAAQyB,EAAEX,EAAI,GAAG6I,EAC5B7J,EACAC,EACAC,EACAC,EACAC,EACAC,UAOH2C,EAGF,SAASiH,EAAYjH,EAAYgH,EAAW9J,EAAQF,EAASC,EAAaE,EAAmBC,EAAUC,UACxG2C,EAAWxC,eAAeN,KACxB8C,EAAW9C,GAAQM,eAAe,MAAQwC,EAAW9C,GAAQM,eAAe,OAC9EwC,EAAa+G,EACX/G,EACAgH,EACA9J,EACAF,EACAC,EACAE,EACAC,EACAC,IAGA2C,EAAW9C,GAAQM,eAAe,MAChCwC,EAAW9C,GAAQyB,EAAElB,OAAS,GAC5BuC,EAAW9C,GAAQyB,EAAE,GAAGnB,eAAe,OACzCwC,EAAauG,EACXvG,EACA9C,EACAF,EACAC,EACAE,EACAC,EACAC,KAMH2C,EAGF,SAASkH,EAAYC,EAAUC,EAAUnK,EAAaE,EAAmBE,OACxEgK,EAAW7H,SAAS8H,gBAAgB9L,EAAO,kBACjD6L,EAASzH,aAAa,KAAMuH,EAASI,EAAE5I,EAAE,IACzC0I,EAASzH,aAAa,KAAMuH,EAASI,EAAE5I,EAAE,IACzC0I,EAASzH,aAAa,KAAMuH,EAAS7I,EAAEK,EAAE,IACzC0I,EAASzH,aAAa,KAAMuH,EAAS7I,EAAEK,EAAE,IACzC0I,EAASzH,aAAa,OAAQ,eAC9ByH,EAASzH,aAAa,eAAS3C,mBAAoBkK,EAASK,SAC5DH,EAASI,UAAUC,IAAI,WACvBN,EAASO,QAAQN,GACjBF,EAASS,UAAW,EACbT,EAsBF,SAASU,EAAYV,EAAUC,EAAUnK,EAAaE,EAAmBE,OACxEgK,EAAW7H,SAAS8H,gBAAgB9L,EAAO,eACjD6L,EAASzH,aAAa,OAAQ,eAE9ByH,EAASzH,aAAa,QAASuH,EAAS7I,EAAEK,EAAE,IAC5C0I,EAASzH,aAAa,SAAUuH,EAAS7I,EAAEK,EAAE,IACzCwI,EAASI,EAAE5I,EAAElB,OAAS,IACxB4J,EAASzH,aAAa,IAAKuH,EAASI,EAAE5I,EAAE,GAAKwI,EAAS7I,EAAEK,EAAE,GAAK,GAC/D0I,EAASzH,aAAa,IAAKuH,EAASI,EAAE5I,EAAE,GAAKwI,EAAS7I,EAAEK,EAAE,GAAK,IAEjE0I,EAASzH,aAAa,eAAS3C,mBAAoBkK,EAASK,SAC5DH,EAASI,UAAUC,IAAI,aACvBN,EAASO,QAAQN,GACjBF,EAASS,UAAW,EACbT,EAGF,SAASW,EAAoBX,EAAUC,EAAUnK,EAAaE,EAAmBE,UAC/E8J,EAGF,SAASY,EAAeC,EAAcC,WACvC7H,aAAiB4H,EAAatJ,EAAE,GAAG,eAAMsJ,EAAatJ,EAAE,GAAG,IACtDV,EAAI,EAAGA,EAAIgK,EAAatJ,EAAEjB,OAAQO,IACzCoC,YAAgBA,eACd4H,EAAatJ,EAAEV,EAAI,GAAG,GAAKgK,EAAavJ,EAAET,EAAI,GAAG,eAC/CgK,EAAatJ,EAAEV,EAAI,GAAG,GAAKgK,EAAavJ,EAAET,EAAI,GAAG,eACnDgK,EAAatJ,EAAEV,GAAG,GAAKgK,EAAahK,EAAEA,GAAG,eACvCgK,EAAatJ,EAAEV,GAAG,GAAKgK,EAAahK,EAAEA,GAAG,eAC3CgK,EAAatJ,EAAEV,GAAG,eAChBgK,EAAatJ,EAAEV,GAAG,WAEpBiK,IACF7H,YAAgBA,eACd4H,EAAatJ,EAAEsJ,EAAatJ,EAAEjB,OAAS,GAAG,GAC1CuK,EAAavJ,EAAEuJ,EAAatJ,EAAEjB,OAAS,GAAG,eAE1CuK,EAAatJ,EAAEsJ,EAAatJ,EAAEjB,OAAS,GAAG,GAC1CuK,EAAavJ,EAAEuJ,EAAatJ,EAAEjB,OAAS,GAAG,eACxCuK,EAAatJ,EAAE,GAAG,GAAKsJ,EAAahK,EAAE,GAAG,eAC3CgK,EAAatJ,EAAE,GAAG,GAAKsJ,EAAahK,EAAE,GAAG,eACvCgK,EAAatJ,EAAE,GAAG,eAAMsJ,EAAatJ,EAAE,GAAG,IAC9C0B,GAAc,MAGTA,EAIT,SAAS8H,EAAcjL,EAAakL,EAAWC,EAASC,EAAYjF,EAAOkF,OACrEtF,EAAaD,WACjBC,EAAWhG,SAAU,EACfsL,IACJtF,EAAW7C,SAAU,GAEvB6C,EAAW/D,iBAAYhC,mBAAoBmL,GAC3CpF,EAAW9C,sBAAiBjD,mBAAoBmL,GAChDpF,EAAWjD,WAAY,EACvBiD,EAAaG,EAAsBH,EAAY/F,EAAamG,GACxDkF,EACFtF,EAAWvC,MAAO,EAElBuC,EAAW5C,WAAa2H,EAAeI,EAAWE,GAG7CrF,EAGF,SAASuF,EAAYpB,EAAUC,EAAUnK,EAAaE,EAAmBE,OAC1E8J,EAASqB,GAAG7J,EAAEnB,eAAe,KAC1B,IACD2J,EAASqB,GAAG7J,EAAE,GAAGnB,eAAe,KAAM,KAGpCiL,EADArI,EAAa,GAGfqI,GAJFtB,EAAWZ,EAA0BY,EAAU,MAAM,EAAOlK,GAAc,EAAGkK,EAAU9J,IAG1EmL,GAAG7J,EAAEwI,EAASqB,GAAG7J,EAAElB,OAAS,GAAGD,eAAe,KAChD2J,EAASqB,GAAG7J,EAAElB,OAEd0J,EAASqB,GAAG7J,EAAElB,OAAS,MAE7B,IAAIiL,EAAS,EAAGA,EAASD,EAAQC,IAAU,KAiC1C1F,EAAakF,EAAcjL,EAAakK,EAASqB,GAAG7J,EAAE+J,GAAQpK,EAAE,GAAI6I,EAASK,OAAQL,EAASqB,GAAG7J,EAAE,GAAGL,EAAE,GAAGqK,EAAGxB,EAASqB,GAAG7J,EAAE+J,GAAQvK,GAAG,MAC7H,GAAVuK,GACErB,EAAW7H,SAAS8H,gBAAgB9L,EAAO,SACtCoE,aAAa,OAAQ,eAC9ByH,EAASzH,aAAa,eAAS3C,mBAAoBkK,EAASK,SAC5DH,EAASzH,aAAa,IAAKQ,GAC3BiH,EAASI,UAAUC,IAAI,SACvBN,EAASO,QAAQN,GACjBF,EAASS,UAAW,KAGlBT,EAASqB,GAAG7J,EAAE+J,GAAQvK,EAAI1C,EAAUwB,GAAa0E,cAAgBwF,EAASqB,GAAG7J,EAAE+J,GAAQvK,EAAI,QAG/F1C,EAAUwB,GAAakC,OAAOd,SAAS8I,EAASqB,GAAG7J,EAAE+J,GAAQvK,IAAIiB,WAAWnB,KAAK+E,GACnE,GAAV0F,GACFjN,EAAUwB,GAAakC,OAAO,GAAGC,WAAWnB,KAAK+E,WAIhDmE,EAGL/G,aAAiB+G,EAASqB,GAAG7J,EAAED,EAAE,GAAG,eAAMyI,EAASqB,GAAG7J,EAAED,EAAE,GAAG,YACxDV,EAAI,EAAGA,EAAImJ,EAASqB,GAAG7J,EAAED,EAAEjB,OAAQO,IAC1CoC,YAAgBA,eAAe+G,EAASqB,GAAG7J,EAAED,EAAEV,EAAI,GAAG,GAAKmJ,EAASqB,GAAG7J,EAAEF,EAAET,EAAI,GAAG,eAChFmJ,EAASqB,GAAG7J,EAAED,EAAEV,EAAI,GAAG,GAAKmJ,EAASqB,GAAG7J,EAAEF,EAAET,EAAI,GAAG,eACjDmJ,EAASqB,GAAG7J,EAAED,EAAEV,GAAG,GAAKmJ,EAASqB,GAAG7J,EAAEX,EAAEA,GAAG,eAAMmJ,EAASqB,GAAG7J,EAAED,EAAEV,GAAG,GAAKmJ,EAASqB,GAAG7J,EAAEX,EAAEA,GAAG,eAC9FmJ,EAASqB,GAAG7J,EAAED,EAAEV,GAAG,eACjBmJ,EAASqB,GAAG7J,EAAED,EAAEV,GAAG,QAWrBqJ,SATAF,EAASqB,GAAG7J,EAAEgK,IAChBvI,YAAgBA,eACd+G,EAASqB,GAAG7J,EAAED,EAAEyI,EAASqB,GAAG7J,EAAED,EAAEjB,OAAS,GAAG,GAAK0J,EAASqB,GAAG7J,EAAEF,EAAE0I,EAASqB,GAAG7J,EAAED,EAAEjB,OAAS,GAAG,eAC3F0J,EAASqB,GAAG7J,EAAED,EAAEyI,EAASqB,GAAG7J,EAAED,EAAEjB,OAAS,GAAG,GAAK0J,EAASqB,GAAG7J,EAAEF,EAAE0I,EAASqB,GAAG7J,EAAED,EAAEjB,OAAS,GAAG,eAC/F0J,EAASqB,GAAG7J,EAAED,EAAE,GAAG,GAAKyI,EAASqB,GAAG7J,EAAEX,EAAE,GAAG,eACzCmJ,EAASqB,GAAG7J,EAAED,EAAE,GAAG,GAAKyI,EAASqB,GAAG7J,EAAEX,EAAE,GAAG,eAAMmJ,EAASqB,GAAG7J,EAAED,EAAE,GAAG,eAAMyI,EAASqB,GAAG7J,EAAED,EAAE,GAAG,IACjG0B,GAAc,MAEhB+G,EAASyB,MAAQxI,GACbiH,EAAW7H,SAAS8H,gBAAgB9L,EAAO,SACtCoE,aAAa,OAAQ,eAC9ByH,EAASzH,aAAa,eAAS3C,mBAAoBkK,EAASK,SAC5DH,EAASzH,aAAa,IAAKQ,GAC3BiH,EAASI,UAAUC,IAAI,SACvBN,EAASO,QAAQN,GACjBF,EAASS,UAAW,EACbT,EAGF,SAAS0B,EAAoB1B,EAAUC,EAAUnK,EAAaI,UAC5D8J,EAGF,SAAS2B,EAAU3B,EAAUC,EAAUnK,EAAa8L,EAAU1L,SAChD,MAAf8J,EAAS6B,IACP7B,EAASwB,EAAEhK,EAAEnB,eAAe,OAC9B2J,EAAWF,EAAYE,EAAU,EAAM,KAAK,EAAOlK,EAAa,EAAGkK,EAAU9J,IAG9D,MAAf8J,EAAS6B,KACP7B,EAAS3J,eAAe,OACtB2J,EAAS8B,EAAEtK,EAAEnB,eAAe,OAC9B2J,EAAWF,EAAYE,EAAU,EAAM,KAAK,EAAOlK,EAAa,EAAGkK,EAAU9J,IAChE4L,EAAEtK,EAAE,GAAGR,EAAI,IACtBgJ,EAAS+B,SAAU,GAGnB/B,EAAS8B,EAAEtK,EAAElB,OAAS,IACxB0J,EAASzC,SAAWyC,EAAS8B,EAAEtK,EAAE,GACjCwI,EAASvC,SAAWuC,EAAS8B,EAAEtK,EAAE,KAGjCwI,EAAS3J,eAAe,MACtB2J,EAASI,EAAE5I,EAAEnB,eAAe,OAC9B2J,EAAWF,EAAYE,EAAU,EAAM,KAAK,EAAOlK,EAAa,EAAGkK,EAAU9J,IAChEkK,EAAE5I,EAAE,GAAGR,EAAI,IACtBgJ,EAAS+B,SAAU,IAMR,MAAf/B,EAAS6B,KACP7B,EAAS3J,eAAe,OAAS2J,EAASqB,GAAG7J,EAAElB,OAAS,IAC1D0J,EAAW0B,EAAoB1B,IAEjCA,EAAWoB,EAAYpB,EAAUC,EAAUnK,IAG1B,MAAfkK,EAAS6B,KACP7B,EAAS3J,eAAe,OAAS2J,EAASqB,GAAG7J,EAAElB,OAAS,IAC1D0J,EAAWW,EAAoBX,IAEjCA,EAAWU,EAAYV,EAAUC,EAAUnK,IAG1B,MAAfkK,EAAS6B,KACP7B,EAAS3J,eAAe,OAAS2J,EAASqB,GAAG7J,EAAElB,OAAS,IAC1D0J,EAAWW,EAAoBX,IAEjCA,EAAWD,EAAYC,EAAUC,EAAUnK,IAGtCkK,EAGF,SAASgC,EAAkBC,EAAOC,EAAK7I,EAAS8I,EAAUC,EAAQtM,EAAaI,GACpF5B,EAAUwB,GAAauM,oBAEnBC,EADEC,YAAczM,sBAAuBxB,EAAUwB,GAAauM,kBAEpD,GAAVD,GACFE,EAASjK,SAAS8H,gBAAgB9L,EAAO,kBACrC8N,EAAS3K,EAAEA,EAAE,GAAGnB,eAAe,OAC5B4G,OAAOC,MAAoBsF,KAAdP,EAAMzK,EAAE,KACxB8K,EAAO7J,aAAa,KAAMwJ,EAAMzK,EAAE,IAE/ByF,OAAOC,MAAMgF,EAAI1K,EAAE,KACtB8K,EAAO7J,aAAa,KAAMyJ,EAAI1K,EAAE,IAE7ByF,OAAOC,MAAM+E,EAAMzK,EAAE,KACxB8K,EAAO7J,aAAa,KAAMwJ,EAAMzK,EAAE,IAE/ByF,OAAOC,MAAMgF,EAAI1K,EAAE,KACtB8K,EAAO7J,aAAa,KAAMyJ,EAAI1K,EAAE,OAIpC8K,EAASjK,SAAS8H,gBAAgB9L,EAAO,kBACrC8N,EAAS3K,EAAEA,EAAE,GAAGnB,eAAe,OACjCiM,EAAO7J,aAAa,eAAgB,OACpC6J,EAAO7J,aAAa,gBAAiB,kBAChCwE,OAAOC,MAAM+E,EAAMzK,EAAE,KACxB8K,EAAO7J,aAAa,KAAMwJ,EAAMzK,EAAE,IAE/ByF,OAAOC,MAAMgF,EAAI1K,EAAE,KACtB8K,EAAO7J,aAAa,KAAMyJ,EAAI1K,EAAE,IAE7ByF,OAAOC,MAAM+E,EAAMzK,EAAE,KACxB8K,EAAO7J,aAAa,KAAMwJ,EAAMzK,EAAE,IAE/ByF,OAAOC,MAAMgF,EAAI1K,EAAE,KACtB8K,EAAO7J,aAAa,KAAMyJ,EAAI1K,EAAE,MAItC8K,EAAO7J,aAAa,KAAM8J,GAC1BjO,EAAUwB,GAAa2M,KAAKjC,QAAQ8B,GAChCH,EAAS3K,EAAEA,EAAE,GAAGnB,eAAe,KAAM,KACnCqM,GAAW,EACfP,EAAW/C,EAA0B+C,EAAU,KAAK,EAAOrM,GAAc,EAAGqM,EAAUjM,OACjF,IAAIgF,EAAI,EAAGA,EAAIiH,EAAS3K,EAAEA,EAAElB,OAAS,EAAG4E,IAAK,KAC1CxC,EAAU,GACVC,EAAS,GACTgK,EAAY,GACd9G,EAAaC,OACjBD,EAAWnD,QAAU,GACrBmD,EAAWlD,OAAS,GAChBwJ,EAAS3K,EAAEA,EAAE0D,GAAG7E,eAAe,KAAM,KAClC,IAAIQ,EAAI,EAAGA,EAAIsL,EAAS/B,EAAGvJ,IACM,GAAhCsL,EAAS3K,EAAEA,EAAE0D,GAAG/D,EAAM,EAAJN,EAAQ,IAAWqG,MAAMiF,EAAS3K,EAAEA,EAAE0D,GAAG/D,EAAM,EAAJN,EAAQ,IACvE6B,EAAQ5B,KAAK,MAEb4B,EAAQ5B,eAAuC,IAA/BqL,EAAS3K,EAAEA,EAAE0D,GAAG/D,EAAM,EAAJN,EAAQ,SAE5C8B,EAAO7B,8BACaI,SAAwC,IAA/BiL,EAAS3K,EAAEA,EAAE0D,GAAG/D,EAAM,EAAJN,EAAQ,gBAAaK,SAAwC,IAA/BiL,EAAS3K,EAAEA,EAAE0D,GAAG/D,EAAM,EAAJN,EAAQ,gBAAaK,SACjF,IAA/BiL,EAAS3K,EAAEA,EAAE0D,GAAG/D,EAAM,EAAJN,EAAQ,WAG9B8L,EAAU7L,KAAK,sBAEbqL,EAAS3K,EAAEA,EAAE0D,GAAG/D,EAAEb,OAAsB,EAAb6L,EAAS/B,MAC7BvJ,EAAI,EAAGA,EAAIsL,EAAS/B,EAAGvJ,IAC9B8L,EAAU9L,0BAAqBsL,EAAS3K,EAAEA,EAAE0D,GAAG/D,EAAM,EAAJN,EAAqB,EAAbsL,EAAS/B,EAAQ,QAG9EvE,EAAWtD,QAAUgK,MACZ1L,EAAI,EAAGA,EAAIsL,EAAS/B,EAAGvJ,IAC9BgF,EAAWnD,QAAQ5B,KAAK4B,EAAQ7B,IAChCgF,EAAWlD,OAAO7B,KAAK6B,EAAO9B,GAAK8L,EAAU9L,OAE/CgF,EAAW1D,YAAa,EACxB7D,EAAUwB,GAAakC,OAAOd,SAASiL,EAAS3K,EAAEA,EAAE0D,GAAGlE,IAAIiB,WAAWnB,KAAK+E,GACvE6G,EAAU,KACH7L,EAAI,EAAGA,EAAIsL,EAAS/B,EAAGvJ,IAAK,KAC7B+L,EAAUvK,SAAS8H,gBAAgB9L,EAAO,QAChDuO,EAAQnK,aAAa,SAAUC,EAAQ7B,IACvC+L,EAAQnK,aAAa,QAASE,EAAO9B,GAAK8L,EAAU9L,IACpDyL,EAAOO,OAAOD,GAEhBF,GAAW,SAIZ,KACChK,EAAU,GACVC,EAAS,GACTgK,EAAY,OACT9L,EAAI,EAAGA,EAAIsL,EAAS/B,EAAGvJ,IAC1BsL,EAAS3K,EAAEA,EAAM,EAAJX,EAAQ,GAAK,EAC5B6B,EAAQ5B,eAAkC,IAA1BqL,EAAS3K,EAAEA,EAAM,EAAJX,EAAQ,SAErC6B,EAAQ5B,KAAK,MAEf6B,EAAO7B,8BACaI,SAAmC,IAA1BiL,EAAS3K,EAAEA,EAAM,EAAJX,EAAQ,gBAAaK,SAAmC,IAA1BiL,EAAS3K,EAAEA,EAAM,EAAJX,EAAQ,gBAAaK,SAC5E,IAA1BiL,EAAS3K,EAAEA,EAAM,EAAJX,EAAQ,WAGzB8L,EAAU7L,KAAK,sBAEbqL,EAAS3K,EAAEA,EAAElB,OAAsB,EAAb6L,EAAS/B,MACxBvJ,EAAI,EAAGA,EAAIsL,EAAS/B,EAAGvJ,IAC9B8L,EAAU9L,0BAAqBsL,EAAS3K,EAAEA,EAAM,EAAJX,EAAqB,EAAbsL,EAAS/B,EAAQ,YAGhEvJ,EAAI,EAAGA,EAAIsL,EAAS/B,EAAGvJ,IAAK,KAC7B+L,EAAUvK,SAAS8H,gBAAgB9L,EAAO,QAChDuO,EAAQnK,aAAa,SAAUC,EAAQ7B,IACvC+L,EAAQnK,aAAa,QAASE,EAAO9B,GAAK8L,EAAU9L,IACpDyL,EAAOO,OAAOD,yBAIHL,OAIjB,IAAMO,EAAS,GACV,SACA,UACA,UAqBE,SAASC,EAAgB/C,EAAUlK,EAAaI,EAAO8M,OACtDC,EAAe,CACnBC,MAAO,GACP7J,QAAS,EACTwE,MAAO,EACPsF,QAAS,QACTC,SAAU,QACVC,WAAY,MAGdJ,EAAaC,oBAAiC,IAAlBlD,EAASwB,EAAEhK,EAAE,eAA8B,IAAlBwI,EAASwB,EAAEhK,EAAE,eAA8B,IAAlBwI,EAASwB,EAAEhK,EAAE,QAC3FyL,EAAa5J,QAAU2G,EAAS1I,EAAEE,EAAI,IAClCwI,EAASsD,EAAE9L,EAAElB,OAAS,GAAK0J,EAASsD,EAAE9L,EAAE,GAAGnB,eAAe,KAAM,EAElE2J,EAAWZ,EAA0BY,EAAU,KAAK,EAAOlK,GAAc,EAAGkK,EAAU9J,IACzEoN,EAAE9L,EAAEwI,EAASsD,EAAE9L,EAAElB,OAAS,GAAGD,eAAe,KAC9C2J,EAASsD,EAAE9L,EAAElB,OAEb0J,EAASsD,EAAE9L,EAAElB,OAAS,MAE5B,IAAIiN,EAAS,EAAGA,EAASP,EAAW1M,OAAQiN,OAC3CP,EAAWO,GAAQ9C,aAChB,IAAIc,EAAS,EAAGA,EAASvB,EAASsD,EAAE9L,EAAElB,OAAQiL,IAAU,KACvD1F,EAAaD,OACjBC,EAAWhG,SAAU,EACrBgG,EAAW7C,SAAU,EACrB6C,EAAW/D,iBAAYhC,mBAAoBkN,EAAWO,GAAQlD,QAC9DxE,EAAW9C,sBAAiBjD,mBAAoBkN,EAAWO,GAAQlD,QACnExE,EAAWjD,WAAY,GAEvBiD,EAAaG,EAAsBH,EAAY/F,EAAakK,EAASsD,EAAE9L,EAAE+J,GAAQvK,IACtEoC,YAAc4G,EAASsD,EAAE9L,EAAE+J,GAAQpK,EAC1C6I,EAASsD,EAAE9L,EAAE+J,GAAQvK,EAAI1C,EAAUwB,GAAa0E,cAAgBwF,EAASsD,EAAE9L,EAAE+J,GAAQvK,EAAI,QAG7F1C,EAAUwB,GAAakC,OAAOd,SAAS8I,EAASsD,EAAE9L,EAAE+J,GAAQvK,IAAIiB,WAAWnB,KAAK+E,GAItFoH,EAAapF,MAAQmC,EAASsD,EAAE9L,EAAE,GAAGL,OAErC8L,EAAapF,MAAQmC,EAASsD,EAAE9L,SAElCyL,EAAaE,QAAUL,EAAO9C,EAASwD,IACvCP,EAAaG,SAAWN,EAAO9C,EAASyD,IACX,GAAzBR,EAAaG,WACfH,EAAaI,WAAaJ,EAAaG,UAElCH,EAWF,SAASS,EAAeC,EAAQC,EAAUC,uBACjB,IAATF,cAA2B,IAAXC,cAA4B,IAAVC,OAYlD,SAASC,EAAgBC,EAAaC,EAAalO,EAAaqC,OAChE,IAAItB,EAAI,EAAGA,EAAIkN,EAAYzN,OAAQO,IAClCkN,EAAYlN,GAAG4J,WACjBpI,SAASC,yBAAkBxC,mBAAoBiO,EAAYlN,GAAGwJ,SAAU5H,aAAa,SAAUuL,EAAYd,OAC3G7K,SACGC,yBAAkBxC,mBAAoBiO,EAAYlN,GAAGwJ,SACrD5H,aAAa,eAAgBuL,EAAYnG,OAC5CxF,SACGC,yBAAkBxC,mBAAoBiO,EAAYlN,GAAGwJ,SACrD5H,aAAa,iBAAkBuL,EAAYb,SAC9C9K,SACGC,yBAAkBxC,mBAAoBiO,EAAYlN,GAAGwJ,SACrD5H,aAAa,kBAAmBuL,EAAYZ,UAC/C/K,SACGC,yBAAkBxC,mBAAoBiO,EAAYlN,GAAGwJ,SACrD5H,aAAa,iBAAkBuL,EAAY3K,SAClB,GAAxB2K,EAAYZ,UACd/K,SACGC,yBAAkBxC,mBAAoBiO,EAAYlN,GAAGwJ,SACrD5H,aAAa,oBAAqBuL,EAAYX,aAelD,SAASY,EAAeF,EAAaG,EAAYpO,EAAaqC,EAAYyJ,OAC1E,IAAI/K,EAAI,EAAGA,EAAIkN,EAAYzN,OAAQO,IAClCkN,EAAYlN,GAAG4J,eAAkC,IAAfyD,IACpC7L,SAASC,yBAAkBxC,mBAAoBiO,EAAYlN,GAAGwJ,SAAU5H,aAAa,OAAQyL,GAC7F7L,SAASC,yBAAkBxC,mBAAoBiO,EAAYlN,GAAGwJ,SAAU5H,aAAa,eAAgB,IAM3G,SAAS0L,EAAQnE,EAAUlK,EAAaI,EAAO8M,UACzChD,EAASN,EAAElI,EAAElB,OAAS,GAAK0J,EAASN,EAAElI,EAAE,GAAGnB,eAAe,OAC5D2J,EAAWZ,EAA0BY,EAAU,KAAK,EAAOlK,GAAc,EAAGkK,EAAU9J,IAEpF8J,EAAS7I,EAAEK,EAAElB,OAAS,GAAK0J,EAAS7I,EAAEK,EAAE,GAAGnB,eAAe,OAC5D2J,EAAWZ,EAA0BY,EAAU,KAAK,EAAOlK,GAAc,EAAGkK,EAAU9J,IAGjF8J,EAMT,SAASoE,EAAWjP,EAAIM,EAAIC,EAAIN,EAAIiP,EAAIC,OAClCC,EAAK,EAAMF,EACXG,EAAK,EAAMF,EAEXG,EAAOtP,EAAG,GAAKoP,EAAKA,EAAyB,GAAjB9O,EAAG,GAAKN,EAAG,IAAUkP,EAAKE,GAAQ7O,EAAG,GAAKN,EAAG,IAAMiP,EAAKA,EACpFK,EAAOvP,EAAG,GAAKqP,EAAKA,EAAyB,GAAjB/O,EAAG,GAAKN,EAAG,IAAUmP,EAAKE,GAAQ9O,EAAG,GAAKN,EAAG,IAAMkP,EAAKA,EACpFK,GAAQlP,EAAG,GAAKN,EAAG,IAAMoP,EAAKA,EAAyB,GAAjB7O,EAAG,GAAKN,EAAG,IAAUiP,EAAKE,EAAOnP,EAAG,GAAKiP,EAAKA,EACpFO,GAAQnP,EAAG,GAAKN,EAAG,IAAMqP,EAAKA,EAAyB,GAAjB9O,EAAG,GAAKN,EAAG,IAAUkP,EAAKE,EAAOpP,EAAG,GAAKkP,EAAKA,EAEpFO,EAAO1P,EAAG,GAAKoP,EAAKA,EAAyB,GAAjB9O,EAAG,GAAKN,EAAG,IAAUkP,EAAKE,GAAQ7O,EAAG,GAAKN,EAAG,IAAMiP,EAAKA,EACpFS,EAAO3P,EAAG,GAAKqP,EAAKA,EAAyB,GAAjB/O,EAAG,GAAKN,EAAG,IAAUmP,EAAKE,GAAQ9O,EAAG,GAAKN,EAAG,IAAMkP,EAAKA,EACpFS,GAAQtP,EAAG,GAAKN,EAAG,IAAMoP,EAAKA,EAAyB,GAAjB7O,EAAG,GAAKN,EAAG,IAAUiP,EAAKE,EAAOnP,EAAG,GAAKiP,EAAKA,EACpFW,GAAQvP,EAAG,GAAKN,EAAG,IAAMqP,EAAKA,EAAyB,GAAjB9O,EAAG,GAAKN,EAAG,IAAUkP,EAAKE,EAAOpP,EAAG,GAAKkP,EAAKA,EAEpFW,EAAU,UACdA,EAAQnO,KAAM,CAAE2N,EAAMF,EAAOI,EAAMN,EAAMQ,EAAMN,EAAOQ,EAAMV,IACxDlP,EAAG,IAAMC,EAAG,IAAMK,EAAG,IAAMC,EAAG,KAChCuP,EAAQ,GAAG,GAAK9P,EAAG,IAEjBA,EAAG,IAAMC,EAAG,IAAMK,EAAG,IAAMC,EAAG,KAChCuP,EAAQ,GAAG,GAAK9P,EAAG,IAErB8P,EAAQnO,KAAM,CAAE2N,EAAMD,EAAOG,EAAML,EAAMO,EAAML,EAAOO,EAAMT,IAE5DW,EAAQnO,KAAM,CAAE4N,EAAMH,EAAOK,EAAMP,EAAMS,EAAMP,EAAOS,EAAMX,IAE5DY,EAAQnO,KAAM,CAAE4N,EAAMF,EAAOI,EAAMN,EAAMQ,EAAMN,EAAOQ,EAAMV,IACxDnP,EAAG,IAAMC,EAAG,IAAMK,EAAG,IAAMC,EAAG,KAChCuP,EAAQ,GAAG,GAAK9P,EAAG,IAEjBA,EAAG,IAAMC,EAAG,IAAMK,EAAG,IAAMC,EAAG,KAChCuP,EAAQ,GAAG,GAAK9P,EAAG,IAErB8P,EAAQ,GAAG,IAAMA,EAAQ,GAAG,GAC5BA,EAAQ,GAAG,IAAMA,EAAQ,GAAG,GAC5BA,EAAQ,GAAG,IAAMA,EAAQ,GAAG,GAC5BA,EAAQ,GAAG,IAAMA,EAAQ,GAAG,GAErBA,EAGT,SAASC,EAAUpP,EAAaI,EAAO6N,EAAaoB,EAAUC,EAAUC,EAAQ5F,EAAqB6F,OAC/FC,EAAe,EACnB9F,EAAsBjK,EACpBuO,EAAYoB,GAAU9D,GAAG7J,EAAED,EAAE6N,GAC7BrB,EAAYoB,GAAU9D,GAAG7J,EAAEF,EAAE8N,GAC7BrB,EAAYoB,GAAU9D,GAAG7J,EAAEX,EAAEwO,GAC7BtB,EAAYoB,GAAU9D,GAAG7J,EAAED,EAAE8N,GAC7B,EACA,IACA,EACAvP,EACA,KACC,EACDiO,EAAYoB,GAAU9D,GAAG7J,EACzBtB,EACA,cAEG,IAAIsB,EAAI,EAAGA,EAAIiI,EAAoBnJ,OAAS,EAAGkB,IAClD+N,GAA8BrQ,EAAUuK,EAAoBjI,GAAGL,EAAGsI,EAAoBjI,EAAI,GAAGL,UAG/FoO,GAA8BrQ,EAAU6O,EAAYoB,GAAU9D,GAAG7J,EAAED,EAAE6N,GAAW3F,EAAoB,GAAGtI,GAGvGmO,GADAC,GAA8BrQ,EAAUuK,EAAoBA,EAAoBnJ,OAAS,GAAGa,EAAG4M,EAAYoB,GAAU9D,GAAG7J,EAAED,EAAE8N,IAE5HtB,EAAYoB,GAAU9D,GAAG7J,EAAED,EAAE6N,GAAUI,GAAKD,EACrC,CAACxB,EAAatE,EAAqB6F,GAG5C,SAASG,EAAQ1B,EAAa2B,EAAW5P,EAAaI,GACpDvB,GAAM,iBAAM,CAAC,uFACJkC,MACkB,MAArBkN,EAAYlN,GAAGgL,GAEjB4D,EAAQ1B,EAAYlN,GAAG8O,GAAID,EAAW5P,EAAaI,WAE/C6N,EAAYlN,GAAG4J,SAAU,sBAEvB6E,EAAmB,EACnB7F,EAAsB,MACD,MAArBsE,EAAYlN,GAAGgL,IAAckC,EAAYlN,GAAGwK,GAAG7J,EAAEnB,eAAe,MAAQ0N,EAAYlN,GAAGwK,GAAG7J,EAAED,EAAEjB,OAAS,EAAG,kBAC5G3B,GAAM,iBAAM,CAAC,OAAQoP,EAAYlN,GAAGwK,WAC/B,IAAInG,EAAI,EAAGA,EAAI6I,EAAYlN,GAAGwK,GAAG7J,EAAED,EAAEjB,OAAS,EAAG4E,IAAK,SA8BvDgK,EAAUpP,EAAaI,EAAO6N,EAAalN,EAAGqE,EAAGA,EAAI,EAAGuE,EAAqB6F,MAD9EvB,OAAatE,OAAqB6F,UAIR,GAAzBvB,EAAYlN,GAAGwK,GAAG7J,EAAEgK,EAAW,SAE/B0D,EAAUpP,EAAaI,EAAO6N,EAAalN,EAAGkN,EAAYlN,GAAGwK,GAAG7J,EAAED,EAAEjB,OAAS,EAAG,EAAGmJ,EAAqB6F,MADzGvB,OAAatE,OAAqB6F,WAIjCM,GAAQ,EACRC,GAAQ,KACRH,EAAUvO,EAAEK,EAAElB,OAAS,GAAKoP,EAAUvO,EAAEK,EAAE,GAAGR,EAAI4O,IACnDA,EAAOF,EAAUvO,EAAEK,EAAE,GAAGR,IAEb,GAAT4O,GAAcF,EAAUvO,EAAEK,EAAElB,OAAS,IAEvCsP,EAAOF,EAAUvO,EAAEK,EAAE,GAAGR,IAEb,GAAT4O,GAAcF,EAAUhG,EAAElI,EAAElB,OAAS,IACvC3B,GAAM,iBAAM,CAAC,kBAAmB+Q,EAAUhG,EAAElI,EAAE,GAAGR,MACjD4O,EAAOF,EAAUhG,EAAElI,EAAE,GAAGR,GAEtB0O,EAAUvO,EAAEK,EAAElB,OAAS,GAAKoP,EAAUvO,EAAEK,EAAEkO,EAAUvO,EAAEK,EAAElB,OAAS,GAAGU,EAAI6O,IAC1EA,EAAOH,EAAUvO,EAAEK,EAAEkO,EAAUvO,EAAEK,EAAElB,OAAS,GAAGU,GAE7C0O,EAAUhG,EAAElI,EAAElB,OAAS,GAAKoP,EAAUhG,EAAElI,EAAEkO,EAAUhG,EAAElI,EAAElB,OAAS,GAAGU,EAAI6O,IAC1EA,EAAOH,EAAUhG,EAAElI,EAAEkO,EAAUhG,EAAElI,EAAElB,OAAS,GAAGU,IAGpC,GAAT4O,EAAY,IACVA,GAAQC,2BAGVD,EAAO,MAKPE,GAAU,EACVC,GAAU,EAEVC,EAAQC,OAAOC,OAAO,GAAInC,EAAYlN,GAAGwK,GAAG7J,GAChD7C,GAAM,iBAAM,CAAC,QAASkC,EAAG+O,EAAMC,EAAMP,EAAkBU,EAAON,MAElDE,qBACH5O,OAEHmP,EAAQ,EACRC,EAAQ,EACRC,GAAmB,EACnBC,GAAiB,EAEjBnF,GAAW,EAEXuE,EAAUvO,EAAEK,EAAElB,OAAS,GAAKwP,EAASJ,EAAUvO,EAAEK,EAAElB,OAAS,GAAKU,GAAK0O,EAAUvO,EAAEK,EAAE,GAAGR,GACzF8O,IAEEJ,EAAUhG,EAAElI,EAAElB,OAAS,GAAKyP,EAASL,EAAUhG,EAAElI,EAAElB,OAAS,GAAKU,GAAK0O,EAAUhG,EAAElI,EAAE,GAAGR,GACzF+O,QAGEQ,EAAe,GACfC,EAAa,MAEbV,GAAU,GAAKJ,EAAUvO,EAAEK,EAAElB,OAAS,GAAKoP,EAAUvO,EAAEK,EAAEsO,GAAQ9O,GAAKA,GAAK0O,EAAUvO,EAAEK,EAAEsO,GAAQzP,eAAe,iBAClH8P,EAAQb,EAAoBA,EAAoBI,EAAUvO,EAAEK,EAAEsO,GAAQ3O,EAAE,GAAM,IAC9ExC,GAAM,iBAAM,CAAC,QAASqC,EAAG0O,EAAWM,EAAOG,MACT,GAA9BT,EAAUvO,EAAEK,EAAEsO,GAAQ3O,EAAE,KAC1BxC,GAAM,iBAAM,CAAC,WACbwM,GAAW,GAEJuE,EAAUvO,EAAEK,EAAEsO,EAAS,GAAG9O,EAAI0O,EAAUvO,EAAEK,EAAEsO,GAAQ9O,MAEzDoO,EACAqB,EAAU,EACe,GAAzB1C,EAAYlN,GAAGwK,GAAG7J,EAAEgK,IACtBiF,EAAU,sBAEHvL,MAELkK,EADO,GAALlK,EACS8K,EAAMzO,EAAEjB,OAAS,EAEjB4E,EAAI,EAEjBvG,GAAM,iBAAM,CAAC,WAAYwR,EAAOH,EAAMzO,EAAE6N,GAAUI,OAC9CW,EAAQH,EAAMzO,EAAE6N,GAAUI,UAC5Ba,EAAkBnL,EAClBqL,EAAenC,EAAW4B,EAAMzO,EAAE6N,GAAWY,EAAM1O,EAAE8N,GAAWY,EAAMnP,EAAEqE,GAAI8K,EAAMzO,EAAE2D,IAAM8K,EAAMzO,EAAE6N,GAAUI,GAAKW,GAASH,EAAMzO,EAAE6N,GAAUI,GAAK,SACjJ7Q,GAAM,iBAAM,CAAC,MAAOqC,EAAGkE,EAAG8K,EAAMzO,EAAE2D,GAAGsK,GAAIe,EAAeP,EAAMnP,EAAEP,OAAS+P,EAAkBL,EAAOK,mBAGrEjK,IAAzB4J,EAAMzO,EAAE6N,GAAUI,KAEpBW,GAAgBH,EAAMzO,EAAE6N,GAAUI,KAf/BtK,EAAIuL,EAASvL,EAAI8K,EAAMzO,EAAEjB,OAAQ4E,IAAK,gBAAtCA,GAWL,UAaF6K,GAAU,GAAKL,EAAUhG,EAAElI,EAAElB,OAAS,GAAKoP,EAAUhG,EAAElI,EAAEuO,GAAQ/O,GAAKA,GAAK0O,EAAUhG,EAAElI,EAAEuO,GAAQ1P,eAAe,KAAM,CACxH1B,GAAM,iBAAM,CAAC,MAAOqC,EAAG0O,EAAUhG,EAAElI,EAAEuO,OACrCK,EAAQd,EAAoBA,GAAoBI,EAAUhG,EAAElI,EAAEuO,GAAQ5O,EAAE,GAAK,KAC3C,GAA9BuO,EAAUhG,EAAElI,EAAEuO,GAAQ5O,EAAE,KAC1BgK,GAAW,OAKTkE,EAHKK,EAAUhG,EAAElI,EAAEuO,EAAS,GAAG/O,EAAI0O,EAAUhG,EAAElI,EAAEuO,GAAQ/O,EAE7DrC,GAAM,iBAAM,CAAC,QAASqC,EAAG0O,EAAUhG,EAAElI,EAAEuO,GAAQ/O,EAAG0O,EAAUhG,EAAElI,EAAEuO,EAAS,GAAG/O,EAAGsO,EAAkBc,EAAOJ,UAEpGS,EAAUT,EAAMzO,EAAEjB,OAAS,EACF,GAAzByN,EAAYlN,GAAGwK,GAAG7J,EAAEgK,IACtBiF,EAAUT,EAAMzO,EAAEjB,OAAS,sBAGpB4E,MACPvG,GAAM,iBAAM,CAAC,eAEX0Q,EADEnK,GAAK8K,EAAMzO,EAAEjB,OAAS,EACf,EAEA4E,EAAI,EAEXkL,EAAQJ,EAAMzO,EAAE2D,GAAGsK,UACrBc,EAAgBpL,EAChBsL,EAAapC,EAAW4B,EAAMzO,EAAE2D,GAAI8K,EAAM1O,EAAE4D,GAAI8K,EAAMnP,EAAEwO,GAASW,EAAMzO,EAAE8N,GAAS,MAAYW,EAAMzO,EAAE2D,GAAGsK,GAAKY,GAASJ,EAAMzO,EAAE2D,GAAGsK,IAClI7Q,GAAM,iBAAM,CAAC,MAAOqC,EAAGkE,GAAK8K,EAAMzO,EAAE2D,GAAGsK,GAAKY,GAASJ,EAAMzO,EAAE2D,GAAGsK,GAAKgB,EAAaR,EAAMnP,EAAEP,OAASgQ,EAAgBN,EAAOM,cAG1HF,GAAgBJ,EAAMzO,EAAE2D,GAAGsK,IAbtBtK,EAAIuL,EAASvL,GAAK,EAAGA,IAAK,gBAA1BA,GAWL,WAOFwL,EAAUC,KAAKC,MAAMD,KAAKE,UAAUb,IACpCc,EAAcJ,EAAQnP,EAAEjB,OACxBgQ,GAAiB,IACnBQ,GAA6BA,EAAeR,EAC5CI,EAAQpP,EAAEgP,GAAiBE,EAAW,GACtCE,EAAQ7P,EAAE8I,OAAO2G,EAAgB,EAAKI,EAAQ7P,EAAEP,OAAS,EAAKgQ,EAAgBE,EAAW,IACzFE,EAAQpP,EAAEqI,OAAO2G,EAAgB,EAAKI,EAAQpP,EAAEhB,OAAS,EAAKgQ,EAAgB,CAAC,EAAE,IACjFI,EAAQnP,EAAEoI,OAAO2G,EAAgB,EAAKI,EAAQnP,EAAEjB,OAAS,EAAKgQ,EAAgBE,EAAW,IACzF7R,GAAM,iBAAM,CAAC,SAAUqC,EAAG0P,OAGxBL,GAAmB,IAKrBK,EAAQ7P,EAAE8I,OAAO,EAAG0G,EAAiB,CAAC,EAAG,IACzCK,EAAQpP,EAAEqI,OAAO,EAAG0G,EAAiBE,EAAa,IAClDG,EAAQnP,EAAEoI,OAAO,EAAG0G,EAAiBE,EAAa,IAClDG,EAAQ7P,EAAEwP,GAAmBE,EAAa,GAC1C5R,GAAM,iBAAM,CAAC,SAAUqC,EAAGqP,EAAiBK,OAG7CL,GAAmB,EACnBC,GAAiB,MAkCbzK,YACA6K,EAAQnP,EAAEjB,OAAS,IAAO6K,EAAU,IACtCxM,GAAM,iBAAM,CAAC,YAAa+R,EAAS1P,MAEjC6E,EADEkI,EAAYlN,GAAGwK,GAAG7J,EAAEgK,GAAKxK,GAAK6O,EACnB9E,EAAcjL,EAAa4Q,EAAS3C,EAAYlN,GAAGwJ,QAAQ,EAAMrJ,GAAG,GAEpE+J,EAAcjL,EAAa4Q,EAAS3C,EAAYlN,GAAGwJ,QAAQ,EAAOrJ,GAAG,GAGhFA,EAAI1C,EAAUwB,GAAa0E,cAAgBxD,EAAI,mBAG/CA,GAAK4O,GAAQ5O,GAAK,GAAK0O,EAAUvO,EAAEK,EAAElB,OAAS,GAAKoP,EAAUvO,EAAEK,EAAE,GAAGR,GAAKA,EAAG,CAC9ErC,GAAM,iBAAM,CAAC,QAAS+R,UACjB,IAAIrP,EAAI,EAAGA,EAAIL,EAAGK,IAErBgF,EAAgBR,EAAY/F,EAAauB,GAG7C/C,EAAUwB,GAAakC,OAAOd,SAASF,IAAIiB,WAAWnB,KAAK+E,OAEtD,IACLlH,GAAM,iBAAM,CAAC,UAAW+R,EAAS1P,MAG/B6E,EADEkI,EAAYlN,GAAGwK,GAAG7J,EAAEgK,GAAKxK,GAAK6O,EACnB9E,EAAcjL,EAAa4Q,EAAS3C,EAAYlN,GAAGwJ,QAAQ,EAAMrJ,GAAG,GAEpE+J,EAAcjL,EAAa4Q,EAAS3C,EAAYlN,GAAGwJ,QAAQ,EAAOrJ,GAAG,GAEhFA,GAAK4O,GAAQ5O,GAAK,EAAG,CACvBrC,GAAM,iBAAM,CAAC,SAAU+R,EAAS1P,UAC3B,IAAIK,EAAI,EAAGA,EAAIL,EAAGK,IAErBgF,EAAgBR,EAAY/F,EAAauB,GACzC1C,GAAM,iBAAM,CAAC,aAIjBL,EAAUwB,GAAakC,OAAOd,SAASF,IAAIiB,WAAWnB,KAAK+E,KA1LtD7E,EAAI4O,EAAM5O,GAAK6O,EAAM7O,IAAK,gBAA1BA,GA8JH,4EAnPLH,EAAI,EAAGA,EAAIkN,EAAYzN,OAAQO,MAA/BA,GAgTJ,SAASkQ,EAAYC,EAAWlR,EAAamR,EAAUhH,EAAUiH,EAAUC,EAAUvF,EAAU1L,EAAOkR,OACvGC,EACAC,EACJL,EAASM,gBACLC,GAAU,EACdP,EAASQ,SAAU,EACfL,EAAMK,UACRR,EAASQ,SAAU,EACnBR,EAASM,YAAcH,EAAMG,iBAE1B,IAAI1Q,EAAI,EAAGA,EAAIoQ,EAAStB,GAAGrP,OAAQO,OACtCoQ,EAASS,aAAc,EACvBpT,EAAUwB,GAAa6R,aACnBV,EAASW,GAAK,IAChBhG,EAAWqF,EAAS9J,IAEG,MAArB8J,EAAStB,GAAG9O,GAAGgL,GAAY,CAC7BoF,EAAStB,GAAG9O,GAAGgR,OAASvT,EAAUwB,GAAa6R,eACzCG,EAAWzP,SAAS8H,gBAAgB9L,EAAO,KACjDyT,EAASrP,aAAa,eAAS3C,mBAAoBxB,EAAUwB,GAAa6R,aAC1ErT,EAAUwB,GAAauH,mBAAqB/I,EAAUwB,GAAa6R,WACnE1H,EAASO,QAAQsH,GACjBb,EAAStB,GAAG9O,GAAKkQ,EACfC,EACAlR,EACAmR,EAAStB,GAAG9O,GACZiR,YACGhS,mBAAoBxB,EAAUwB,GAAa6R,YAC9CR,EACAvF,EACA1L,EACA+Q,OAEG,CACLA,EAAStB,GAAG9O,GAAGwJ,OAAS/L,EAAUwB,GAAa6R,WACnChB,KAAKC,MAAMD,KAAKE,UAAUI,EAAStB,GAAG9O,KAGlDoQ,EAAStB,GAAG9O,GAAK8K,EAAUsF,EAAStB,GAAG9O,GAAIoJ,EAAUnK,GAE5B,MAArBmR,EAAStB,GAAG9O,GAAGgL,KACjBoF,EAAStB,GAAG9O,GAAGkR,SAAWlR,EACtBoQ,EAAStB,GAAG9O,GAAGuJ,EAAE/J,eAAe,MAC9B4Q,EAAStB,GAAG9O,GAAGuJ,EAAE5I,EAAElB,OAAS,IAC1B2Q,EAAStB,GAAG9O,GAAGR,eAAe,KAChCgC,SACGC,eAAe4O,GACfzO,aACC,gCACawO,EAAStB,GAAG9O,GAAGuJ,EAAE5I,EAAE,GAAKyP,EAAStB,GAAG9O,GAAGiL,EAAEtK,EAAE,eACtDyP,EAAStB,GAAG9O,GAAGuJ,EAAE5I,EAAE,GAAKyP,EAAStB,GAAG9O,GAAGiL,EAAEtK,EAAE,SAIjDa,SACGC,eAAe4O,GACfzO,aAAa,gCAA0BwO,EAAStB,GAAG9O,GAAGuJ,EAAE5I,EAAE,eAAMyP,EAAStB,GAAG9O,GAAGuJ,EAAE5I,EAAE,WAKrE,MAArByP,EAAStB,GAAG9O,GAAGgL,IACboF,EAAStB,GAAG9O,GAAG2K,EAAEhK,EAAElB,OAAS,IAC9B+Q,EAAe3D,EAAeuD,EAAStB,GAAG9O,GAAG2K,EAAEhK,EAAE,GAAIyP,EAAStB,GAAG9O,GAAG2K,EAAEhK,EAAE,GAAIyP,EAAStB,GAAG9O,GAAG2K,EAAEhK,EAAE,KAG1E,MAArByP,EAAStB,GAAG9O,GAAGgL,IACboF,EAAStB,GAAG9O,GAAG2K,EAAEhK,EAAElB,OAAS,IAC9BgR,EAAgBvE,EACdkE,EAAStB,GAAG9O,GACZf,EACAI,EACA+Q,EAAStB,IAEX6B,GAAU,GAGW,MAArBP,EAAStB,GAAG9O,GAAGgL,KAEfoF,EAASM,YAAcpD,EACrB8C,EAAStB,GAAG9O,GACZf,EACAI,EACA+Q,EAAStB,IAGXsB,EAASQ,SAAU,GAGE,MAArBR,EAAStB,GAAG9O,GAAGgL,KACjBoF,EAASS,aAAc,EACvBL,EAAerF,EACbiF,EAAStB,GAAG9O,GAAGM,EACf8P,EAAStB,GAAG9O,GAAG6I,EACfuH,EAAStB,GAAG9O,GAAGS,EACf2P,EAAStB,GAAG9O,GAAGmR,EACff,EAAStB,GAAG9O,GAAGoR,EACfnS,EACAI,WAKR+N,EAAegD,EAAStB,GAAI0B,EAAcvR,EAAamR,EAASS,aAC5DF,GACF1D,EAAgBmD,EAAStB,GAAI2B,EAAexR,GAE1CmR,EAASQ,UACX9S,GAAM,iBAAM,CAAC,cAAesS,EAASM,gBACrC9B,EAAQwB,EAAStB,GAAIsB,EAASM,YAAazR,EAAaI,IAEnD+Q,EAeF,SAASiB,EAAUlB,EAAWlR,EAAamR,EAAUhH,EAAUiH,EAAUC,EAAUvF,EAAU1L,OAC9FmR,EACAC,EACJL,EAASM,YAAc,OACnBC,GAAU,EACdP,EAASQ,SAAU,MACd,IAAI5Q,EAAI,EAAGA,EAAIoQ,EAASkB,OAAO7R,OAAQO,OAC1CoQ,EAASS,aAAc,EACvBpT,EAAUwB,GAAa6R,aACnBV,EAASW,GAAK,IAChBhG,EAAWqF,EAAS9J,IAEO,MAAzB8J,EAASkB,OAAOtR,GAAGgL,GAAY,CACjCoF,EAASkB,OAAOtR,GAAGgR,OAASvT,EAAUwB,GAAa6R,eAC7CG,EAAWzP,SAAS8H,gBAAgB9L,EAAO,KACjDyT,EAASrP,aAAa,eAAS3C,mBAAoBxB,EAAUwB,GAAa6R,aAC1EG,EAASrP,aAAa,UAAW,GACjCnE,EAAUwB,GAAauH,mBAAqB/I,EAAUwB,GAAa6R,WACnE1H,EAASO,QAAQsH,GACjBb,EAASkB,OAAOtR,GAAKkQ,EACnBC,EACAlR,EACAmR,EAASkB,OAAOtR,GAChBiR,YACGhS,mBAAoBxB,EAAUwB,GAAa6R,YAC9CR,EACAvF,EACA1L,EACA+Q,QAIFA,EAASkB,OAAOtR,GAAGwJ,OAAS/L,EAAUwB,GAAa6R,WAGnDV,EAASkB,OAAOtR,GAAK8K,EAAUsF,EAASkB,OAAOtR,GAAIoJ,EAAUnK,GAEhC,MAAzBmR,EAASkB,OAAOtR,GAAGgL,KACrBoF,EAASkB,OAAOtR,GAAGkR,SAAWlR,EAC1BoQ,EAASkB,OAAOtR,GAAGuJ,EAAE/J,eAAe,MAClC4Q,EAASkB,OAAOtR,GAAGuJ,EAAE5I,EAAI,GAC3Ba,SACGC,yBAAkBxC,cAAeI,wBAAmB+Q,EAAS7J,SAC7D3E,aAAa,gCAA0BwO,EAASkB,OAAOtR,GAAGuJ,EAAE5I,EAAE,eAAMyP,EAASkB,OAAOtR,GAAGuJ,EAAE5I,EAAE,UAIvE,MAAzByP,EAASkB,OAAOtR,GAAGgL,IACjBoF,EAASkB,OAAOtR,GAAG2K,EAAEhK,EAAElB,OAAS,IAClC+Q,EAAe3D,EACbuD,EAASkB,OAAOtR,GAAG2K,EAAEhK,EAAE,GACvByP,EAASkB,OAAOtR,GAAG2K,EAAEhK,EAAE,GACvByP,EAASkB,OAAOtR,GAAG2K,EAAEhK,EAAE,KAIA,MAAzByP,EAASkB,OAAOtR,GAAGgL,IACjBoF,EAASkB,OAAOtR,GAAG2K,EAAEhK,EAAElB,OAAS,IAClCgR,EAAgBvE,EACdkE,EAASkB,OAAOtR,GAChBf,EACAI,EACA+Q,EAASkB,QAEXX,GAAU,GAGe,MAAzBP,EAASkB,OAAOtR,GAAGgL,KAEnBoF,EAASM,YAAcpD,EACrB8C,EAASkB,OAAOtR,GAChBf,EACAI,EACA+Q,EAASkB,QAGXlB,EAASQ,SAAU,GAGM,MAAzBR,EAASkB,OAAOtR,GAAGgL,KACrBoF,EAASS,aAAc,EACvBL,EAAerF,EACbiF,EAASkB,OAAOtR,GAAGM,EACnB8P,EAASkB,OAAOtR,GAAG6I,EACnBuH,EAASkB,OAAOtR,GAAGS,EACnB2P,EAASkB,OAAOtR,GAAGmR,EACnBf,EAASkB,OAAOtR,GAAGoR,EACnBnS,EACAI,WAKR+N,EAAegD,EAASkB,OAAQd,EAAcvR,EAAamR,EAASS,aAChEF,GACF1D,EAAgBmD,EAASkB,OAAQb,EAAexR,GAE9CmR,EAASQ,UACX9S,GAAM,iBAAM,CAAC,cAAesS,EAASM,gBACrC9B,EAAQwB,EAASkB,OAAQlB,EAASM,YAAazR,EAAaI,IAEvD+Q,EAkBF,SAASmB,EAAetS,EAAauS,EAASC,EAAYC,EAAWC,EAAWtS,EAAOuS,EAAOC,EAAUC,WAKpGzN,EAAI,EAAGA,EAAIqN,EAAUC,GAAWlS,OAAQ4E,OAC3CqN,EAAUC,GAAWtN,GAAG0N,KAAOL,EAAUC,GAAWH,GAASQ,OAAQ,IACnEN,EAAUC,GAAWtN,GAAG0M,GAAK,MAC1B,IAAIpQ,EAAI0D,EAAI,EAAG1D,GAAK,EAAGA,OACtB+Q,EAAUC,GAAWhR,GAAG2F,GAAK,EAAG,CAClCoL,EAAUC,GAAWtN,GAAG4N,iBAAYhT,cAAeI,uBAAkBqS,EAAUC,GAAWhR,GAAGoR,KAC7FL,EAAUC,GAAWtN,GAAG6N,WAAY,eAK1CL,EAAS5R,KAAK,MAASuR,QAAkBM,IAEpCJ,EAAUC,GAAWtN,GAAG8N,aAC3BZ,EAAetS,EAAaoF,EAAGoN,EAAYC,EAAWC,EAAWtS,EAAOuS,EAAQ,EAAGC,EAAUC,EAAc,GAE7GrU,EAAUwB,GAAamT,aACvBV,EAAUC,GAAWH,GAASa,QAAUX,EAAUC,GAAWtN,GAAGkC,OAChEmL,EAAUC,GAAWH,GAASc,WAAajO,EAEzCqN,EAAUC,GAAWH,GAASe,OAAS,GAEvCb,EAAUC,GAAWH,GAASe,OAAOC,SAAWhR,SAAS8H,gBAAgB9L,EAAO,KAChFkU,EAAUC,GAAWH,GAASe,OAAOC,SAAS5Q,aAAa,eAAS3C,cAAeI,mBAAcqS,EAAUC,GAAWH,GAASjL,SAC/HmL,EAAUC,GAAWH,GAASe,OAAOC,SAAS5Q,aAAa,OAAQ6P,GACnEC,EAAUC,GAAWH,GAASe,OAAOC,SAAS5Q,aAAa,UAAW,GAMtE8P,EAAUC,GAAWH,GAASe,OAAOE,kBAAoBjR,SAAS8H,gBAAgB9L,EAAO,KACzFkU,EAAUC,GAAWH,GAASe,OAAOE,kBAAkB7Q,aACrD,eACG3C,cAAeI,4BAAuBqS,EAAUC,GAAWH,GAASjL,SAEzEmL,EAAUC,GAAWH,GAASe,OAAOE,kBAAkB7Q,aAAa,UAAW,GAC/E8P,EAAUC,GAAWH,GAASe,OAAOC,SAAS7I,QAxChD8I,WA0CMf,EAAUC,GAAWH,GAAS/E,EAAI,IACpCiF,EAAUC,GAAWH,GAASe,OAAOC,SAAS5P,MAAMoE,MAAQ0K,EAAUC,GAAWH,GAAS/E,GAExFiF,EAAUC,GAAWH,GAASkB,EAAI,IACpChB,EAAUC,GAAWH,GAASe,OAAOC,SAAS5P,MAAMqE,OAASyK,EAAUC,GAAWH,GAASkB,GAE7FhB,EAAUC,GAAWH,GAASe,OAAOtB,SAAWzP,SAAS8H,gBAAgB9L,EAAO,KAChFkU,EAAUC,GAAWH,GAASe,OAAOtB,SAASrP,aAAa,eAAS3C,cAAeI,wBAAmBqS,EAAUC,GAAWH,GAASjL,SACpImL,EAAUC,GAAWH,GAASe,OAAOtB,SAASrP,aAAa,UAAW,GACtE8P,EAAUC,GAAWH,GAASe,OAAOE,kBAAkB9I,QApDzDsH,WAsDES,EAAUC,GAAWH,GAASW,aAAc,EAC5CT,EAAUC,GAAWH,GAASe,OAAOX,MAAQA,EAC7CF,EAAUC,GAAWH,GAASmB,WAAY,EAG1CjB,EAAUC,GAAWtN,GAAGuO,OAAO3S,0BAAmByR,EAAUC,GAAWH,GAASQ,cAChFN,EAAUC,GAAWtN,GAAGwO,SAAS5S,KAAKuR,IAoBvC,SAASsB,EAAU3C,EAAWlR,EAAa8T,EAAYrB,EAAWC,EAAWtS,aACrDkG,IAAzBmM,EAAUC,IAA4BD,EAAUC,GAAWlS,OAAS,QAKpE+S,EACAvB,EACA+B,EACAP,EACA1M,EACAwB,EAPJ9J,EAAUwB,GAAaI,QACvBA,EAAQ5B,EAAUwB,GAAaI,cAO3BoS,EAAa,GAINzR,EAAI,EAAGA,EAAI0R,EAAUC,GAAWlS,OAAQO,IAC3C0R,EAAUC,GAAW3R,GAAGyM,EAAIhP,EAAUwB,GAAawN,IACrDhP,EAAUwB,GAAagU,UAAYvB,EAAUC,GAAW3R,GAAGyM,GAEzDiF,EAAUC,GAAW3R,GAAG0S,EAAIjV,EAAUwB,GAAayT,IACrDjV,EAAUwB,GAAaiU,WAAaxB,EAAUC,GAAW3R,GAAG0S,GAE9DhB,EAAUU,aACVV,EAAUC,GAAW3R,GAAGuG,OAASmL,EAAUC,GAAW3R,GAAG+R,IACzDL,EAAUC,GAAW3R,GAAG4S,OAAS,GACjClB,EAAUC,GAAW3R,GAAG6S,SAAW,GAC/BnB,EAAUC,GAAW3R,GAAGgS,OAAS,IAE/BN,EAAUC,GAAW3R,GAAGsG,GAAK,GAC/BoL,EAAUC,GAAW3R,GAAGmT,SAAU,EAClCH,EAAUxR,SAAS8H,gBAAgB9L,EAAO,QAC1CiU,aAAiBxS,cAAeI,uBAAkBqS,EAAUC,GAAW3R,GAAG+R,KAC1EiB,EAAQpR,aAAa,KAAM6P,GAC3BuB,EAAQpR,aAAa,YAAa,SAClCoR,EAAQpR,aAAa,UAAW,GAChCnE,EAAUwB,GAAa2M,KAAKjC,QAAQqJ,IAEpCR,EAAWhR,SAAS8H,gBAAgB9L,EAAO,MAClCoE,aAAa,eAAS3C,cAAeI,mBAAcqS,EAAUC,GAAW3R,GAAG+R,MACpFS,EAAS5Q,aAAa,QAAS,mBAC/B4Q,EAAS5Q,aAAa,UAAW,GACjCoR,EAAQrJ,QAAQ6I,MAEhBA,EAAWhR,SAAS8H,gBAAgB9L,EAAO,MAClCoE,aAAa,eAAS3C,cAAeI,mBAAcqS,EAAUC,GAAW3R,GAAG+R,MACpFS,EAAS5Q,aAAa,UAAW,GACjCmR,EAAWpJ,QAAQ6I,GACfd,EAAUC,GAAW3R,GAAG+Q,GAAK,IAC/BW,EAAUC,GAAW3R,GAAGiS,MAAQR,EAChCC,EAAUC,GAAW3R,GAAGkS,WAAY,IAGxCR,EAAUC,GAAW3R,GAAGmS,aAAc,GAEtCM,EAAoBjR,SAAS8H,gBAAgB9L,EAAO,MAClCoE,aAAa,eAAS3C,cAAeI,4BAAuBqS,EAAUC,GAAW3R,GAAGuG,SACtGkM,EAAkB7Q,aAAa,UAAW,GAC1C4Q,EAAS7I,QAAQ8I,GACbf,EAAUC,GAAW3R,GAAGyM,EAAI,IAC9B+F,EAAS5P,MAAMoE,MAAQ0K,EAAUC,GAAW3R,GAAGyM,GAE7CiF,EAAUC,GAAW3R,GAAG0S,EAAI,IAC9BF,EAAS5P,MAAMqE,OAASyK,EAAUC,GAAW3R,GAAG0S,IAElDzB,EAAWzP,SAAS8H,gBAAgB9L,EAAO,MAClCoE,aAAa,eAAS3C,cAAeI,wBAAmBqS,EAAUC,GAAW3R,GAAGuG,SACzF0K,EAASrP,aAAa,UAAW,GACjC6Q,EAAkB9I,QAAQsH,GAE1BS,EAAUC,GAAW3R,GAAG2S,WAAY,OAIpCd,EAAW,OAEN7R,EAAI,EAAGA,EAAI0R,EAAUC,GAAWlS,OAAQO,OAC/C0R,EAAUU,WAAaV,EAAUC,GAAW3R,GAAGuG,OAC3CmL,EAAUC,GAAW3R,GAAGgS,OAAS,MAC9B,IAAI3N,EAAI,EAAGA,EAAIqN,EAAU0B,OAAO3T,OAAQ4E,OACvCqN,EAAUC,GAAWtN,GAAG0N,KAAOL,EAAUC,GAAW3R,GAAGgS,OAAQ,IAC7DN,EAAUC,GAAW3R,GAAG+Q,GAAK,MAC1B,IAAIpQ,EAAIX,EAAI,EAAGW,GAAK,EAAGA,OACtB+Q,EAAUC,GAAWhR,GAAG2F,GAAK,EAAG,CAClCoL,EAAUC,GAAW3R,GAAGiS,iBAAYhT,cAAeI,uBAAkBqS,EAAUC,GAAWhR,GAAGoR,WAKnGL,EAAUU,aACVP,EAAS5R,KAAK,MAASD,QAfZ,IAiBN0R,EAAUC,GAAWtN,GAAG8N,aAC3BZ,EAAetS,EAAaoF,EAAGoN,EAAYC,EAAWC,EAAWtS,EAAO,EAAGwS,EAAUwB,GAEvF3B,EAAUC,GAAW3R,GAAGqS,QAAUX,EAAUC,GAAWtN,GAAGkC,OAC1DmL,EAAUC,GAAW3R,GAAGsS,WAAajO,EAEnCqN,EAAUC,GAAW3R,GAAGuS,OAAS,GACjCb,EAAUC,GAAW3R,GAAGuS,OAAOC,SAAWhR,SAAS8H,gBAAgB9L,EAAO,KAC1EkU,EAAUC,GAAW3R,GAAGuS,OAAOC,SAAS5Q,aAAa,eAAS3C,cAAeI,mBAAcqS,EAAUC,GAAW3R,GAAGuG,SACnHmL,EAAUC,GAAW3R,GAAGuS,OAAOC,SAAS5Q,aAAa,UAAW,GAKhE8P,EAAUC,GAAW3R,GAAGuS,OAAOE,kBAAoBjR,SAAS8H,gBAAgB9L,EAAO,KACnFkU,EAAUC,GAAW3R,GAAGuS,OAAOE,kBAAkB7Q,aAC/C,eACG3C,cAAeI,4BAAuBqS,EAAUC,GAAW3R,GAAGuG,SAEnEmL,EAAUC,GAAW3R,GAAGuS,OAAOE,kBAAkB7Q,aAAa,UAAW,GAErE8P,EAAUC,GAAW3R,GAAGyM,EAAI,IAC9BiF,EAAUC,GAAW3R,GAAGuS,OAAOC,SAAS5P,MAAMoE,MAAQ0K,EAAUC,GAAW3R,GAAGyM,GAE5EiF,EAAUC,GAAW3R,GAAG0S,EAAI,IAC9BhB,EAAUC,GAAW3R,GAAGuS,OAAOC,SAAS5P,MAAMqE,OAASyK,EAAUC,GAAW3R,GAAG0S,GAEjFhB,EAAUC,GAAW3R,GAAGuS,OAAOtB,SAAWzP,SAAS8H,gBAAgB9L,EAAO,KAC1EkU,EAAUC,GAAW3R,GAAGuS,OAAOtB,SAASrP,aAAa,eAAS3C,cAAeI,wBAAmBqS,EAAUC,GAAW3R,GAAGuG,SACxHmL,EAAUC,GAAW3R,GAAGuS,OAAOtB,SAASrP,aAAa,UAAW,GAGhE8P,EAAUC,GAAW3R,GAAGuS,OAAOC,SAAS7I,QAAQ+H,EAAUC,GAAW3R,GAAGuS,OAAOE,mBAC/Ef,EAAUC,GAAW3R,GAAGuS,OAAOE,kBAAkB9I,QAAQ+H,EAAUC,GAAW3R,GAAGuS,OAAOtB,UAKxFS,EAAUC,GAAW3R,GAAGmS,aAAc,EACtCT,EAAUC,GAAW3R,GAAGuS,OAAOX,MAAQ,EACvCF,EAAUC,GAAW3R,GAAG2S,WAAY,EAEpCjB,EAAUC,GAAWtN,GAAGuO,OAAO3S,eAAQhB,cAAeI,wBAAmBqS,EAAUC,GAAW3R,GAAGgS,SACjGN,EAAUC,GAAWtN,GAAGwO,SAAS5S,KAAKD,WAQ5CsT,EAAiB,EACjBC,EAAY,EACTD,EAAiB,GAAG,CACzBA,EAAiB,UACbE,EAAY,GACPnP,EAAI,EAAGA,EAAIwN,EAASpS,OAAQ4E,IAC/BwN,EAASxN,GAAGuN,OAAS2B,IACvBC,EAAUvT,KAAK4R,EAASxN,GAAGoP,MAC3BH,KAGJC,IACAC,EAAUE,MAAK,SAASzI,EAAG0I,UAAU1I,EAAE0I,KAkBnCL,EAAiB,GACnBE,EAAUI,SAAQ,SAAA5T,GACV0R,EAAUC,GAAWD,EAAUC,GAAW3R,GAAGsS,YAAY9S,eAAe,UACtEkS,EAAUC,GAAW3R,GAAG+R,IAAML,EAAUC,GAAWD,EAAUC,GAAW3R,GAAGsS,YAAYP,IACzFL,EAAUC,GAAWD,EAAUC,GAAW3R,GAAGsS,YAAYC,OAAOE,kBAAkB9I,QAAQ+H,EAAUC,GAAW3R,GAAGuS,OAAOC,UAEzHd,EAAUC,GAAWD,EAAUC,GAAW3R,GAAGsS,YAAYC,OAAOE,kBAAkBzG,OAAO0F,EAAUC,GAAW3R,GAAGuS,OAAOC,UAGtHd,EAAUC,GAAW3R,GAAG+R,KAAOL,EAAUC,GAAW3R,GAAGqS,QACzD7Q,SACGC,yBAAkBxC,cAAeI,4BAAuBqS,EAAUC,GAAW3R,GAAGqS,UAChF1I,QAAQ+H,EAAUC,GAAW3R,GAAGuS,OAAOC,UAE1ChR,SACGC,yBAAkBxC,cAAeI,4BAAuBqS,EAAUC,GAAW3R,GAAGqS,UAChFrG,OAAO0F,EAAUC,GAAW3R,GAAGuS,OAAOC,iBAQ5CxS,EAAI,EAAGA,EAAI0R,EAAUC,GAAWlS,OAAQO,IAC3C0R,EAAUC,GAAW3R,GAAGR,eAAe,kBAClCkS,EAAUC,GAAW3R,GAAGuS,WAO5BvS,EAAI,EAAGA,EAAI0R,EAAU0B,OAAO3T,OAAQO,IAAK,IAChD0R,EAAUC,GAAW3R,GAAGiG,UAAY,EACpCyL,EAAUC,GAAW3R,GAAGkG,WAAa,EACjCwL,EAAUC,GAAW3R,GAAGR,eAAe,OAASkS,EAAUC,GAAW3R,GAAG6T,IAAM,IAChFnC,EAAUC,GAAW3R,GAAGiG,SAAWyL,EAAUC,GAAW3R,GAAG6T,IAEzDnC,EAAUC,GAAW3R,GAAGR,eAAe,OAASkS,EAAUC,GAAW3R,GAAG8T,GAAK,GAC/EpC,EAAUC,GAAW3R,GAAGkG,UAAYwL,EAAUC,GAAW3R,GAAG8T,GACxDpC,EAAUC,GAAW3R,GAAGkG,UAAYwL,EAAU/N,eAChD+N,EAAUC,GAAW3R,GAAGkG,UAAYwL,EAAU/N,eAGhD+N,EAAUC,GAAW3R,GAAGkG,UAAYwL,EAAU/N,aAEhD+B,EACEzG,YACGA,cAAeI,wBAAmBqS,EAAUC,GAAW3R,GAAGuG,QAC7DmL,EAAUC,GAAW3R,GAAGiG,SACxByL,EAAUC,GAAW3R,GAAGkG,WAG1BwL,EAAUU,WAAaV,EAAUC,GAAW3R,GAAGuG,OAC/CiM,EAAWhR,SAASC,yBAAkBxC,cAAeI,mBAAcqS,EAAUC,GAAW3R,GAAGuG,SAC3F0K,EAAWzP,SAASC,yBAAkBxC,cAAeI,wBAAmBqS,EAAUC,GAAW3R,GAAGuG,SAC5FmL,EAAUC,GAAW3R,GAAG+Q,GAAK,IAC/BvP,SACGC,yBAAkBxC,cAAeI,mBAAcqS,EAAUC,GAAW3R,GAAGuG,SACvE3E,aAAa,sBAAgB8P,EAAUC,GAAW3R,GAAGiS,YACxDzQ,SACGC,yBAAkBxC,cAAeI,mBAAcqS,EAAUC,GAAW3R,GAAGuG,SACvE3E,aAAa,QAAS,oBAE3B8P,EAAUvL,cAAgB,CAAEI,OAAQ,GAAIN,SAAU,GAAIC,UAAW,IAEjEwL,EAAUvL,cAAcI,OAASmL,EAAUC,GAAW3R,GAAGuG,OACzDmL,EAAUvL,cAAcF,SAAWyL,EAAUC,GAAW3R,GAAGiG,SAC3DyL,EAAUvL,cAAcD,UAAYwL,EAAUC,GAAW3R,GAAGkG,UACxDwL,EAAUC,GAAW3R,GAAGR,eAAe,SAAU,SAC/CuU,GAAW,EACNxT,EAAI,EAAGA,EAAI9C,EAAUwB,GAAa+U,OAAOvU,OAAQc,YACT,IAApC9C,EAAUwB,GAAa+U,OAAOzT,IAAqB9C,EAAUwB,GAAa+U,OAAOzT,GAAG0T,IAAMvC,EAAUC,GAAW3R,GAAGkU,MAAO,CAClIH,EAAUxT,WAIVwT,GAAW,EAAG,KACZI,EAAY9U,EAChB5B,EAAUwB,GAAa+U,OAAOD,GAAWjB,EACvC3C,EACAlR,EACAgS,EACAxT,EAAUwB,GAAa+U,OAAOD,GAC9B,SACA1U,GAGFA,EAAQ8U,GAIRzC,EAAUC,GAAW3R,GAAGR,eAAe,WACzCkS,EAAU1L,mBAAqB,CAAEO,OAAQ,EAAGN,SAAU,GAAIC,UAAW,IAErEwL,EAAU1L,mBAAmBO,OAASmL,EAAUC,GAAW3R,GAAGuG,OAC9DmL,EAAU1L,mBAAmBC,SAAWyL,EAAUC,GAAW3R,GAAGiG,SAChEyL,EAAU1L,mBAAmBE,UAAYwL,EAAUC,GAAW3R,GAAGkG,UACjEwL,EAAUC,GAAW3R,GAAKqR,EACxBlB,EACAlR,EACAyS,EAAUC,GAAW3R,GACrBiR,YACGhS,cAAeI,wBAAmBqS,EAAUC,GAAW3R,GAAGuG,SAC7D,EACAmL,EAAUC,GAAW3R,GAAGsG,GACxBjH,GAEEqS,EAAUC,GAAW3R,GAAGR,eAAe,YACzCkS,EAAU0C,WAAanD,EAASlK,wBAAwBC,MAAQ,EAChE0K,EAAU2C,WAAapD,EAASlK,wBAAwBE,OAAS,IAE1DyK,EAAUC,GAAW3R,GAAGiG,SAK/ByL,EAAUC,GAAW3R,GAAGR,eAAe,QACrCkS,EAAUC,GAAW3R,GAAGwK,GAAGhL,eAAe,MACxCkS,EAAUC,GAAW3R,GAAGwK,GAAGS,EAAEzL,eAAe,MAC1CkS,EAAUC,GAAW3R,GAAGwK,GAAGS,EAAEtK,EAAElB,OAAS,IAC1CiS,EAAUC,GAAW3R,GAAG0G,SAAWgL,EAAUC,GAAW3R,GAAGwK,GAAGS,EAAEtK,EAAE,GAClE+Q,EAAUC,GAAW3R,GAAG4G,SAAW8K,EAAUC,GAAW3R,GAAGwK,GAAGS,EAAEtK,EAAE,IAKpE+Q,EAAUC,GAAW3R,GAAGwK,GAAGhL,eAAe,OAC5CkS,EAAUC,GAAW3R,GAAGwK,GAAKvB,EAC3ByI,EAAUC,GAAW3R,GAAGwK,GACxB,EACA,KACA,EACAvL,EACA,EACAyS,EAAUC,GAAW3R,GACrBX,GAEEqS,EAAUC,GAAW3R,GAAGwK,GAAGjB,EAAE/J,eAAe,MAC1CkS,EAAUC,GAAW3R,GAAGwK,GAAGjB,EAAE5I,EAAElB,OAAS,IACtCiS,EAAUC,GAAW3R,GAAGwK,GAAGjB,EAAE5I,EAAE,GAAGnB,eAAe,OAGjDuG,EADsC,GAApC2L,EAAUC,GAAW3R,GAAG0G,SACnBgL,EAAUC,GAAW3R,GAAGwK,GAAGjB,EAAE5I,EAAE,GAAK+Q,EAAUC,GAAW3R,GAAG0G,SAE5DgL,EAAUC,GAAW3R,GAAGwK,GAAGjB,EAAE5I,EAAE,GAGtC4G,EADsC,GAApCmK,EAAUC,GAAW3R,GAAG4G,SACnB8K,EAAUC,GAAW3R,GAAGwK,GAAGjB,EAAE5I,EAAE,GAAK+Q,EAAUC,GAAW3R,GAAG4G,SAE5D8K,EAAUC,GAAW3R,GAAGwK,GAAGjB,EAAE5I,EAAE,GAEpC+Q,EAAUC,GAAW3R,GAAGsG,GAAK,EAC/B9E,SACGC,yBAAkBxC,cAAeI,wBAAmBqS,EAAUC,GAAW3R,GAAGuG,SAC5E3E,aAAa,gCAA0BmE,cAAQwB,QAGlD/F,SACGC,yBAAkBxC,cAAeI,mBAAcqS,EAAUC,GAAW3R,GAAGuG,SACvE3E,aAAa,gCAA0BmE,cAAQwB,QAGpDmK,EAAUC,GAAW3R,GAAGsU,MAAQvO,EAChC2L,EAAUC,GAAW3R,GAAGuU,MAAQhN,KAMpCmK,EAAUC,GAAW3R,GAAGwK,GAAGhL,eAAe,MACxCkS,EAAUC,GAAW3R,GAAGwK,GAAG4G,EAAEzQ,EAAElB,OAAS,GACtCiS,EAAUC,GAAW3R,GAAGwK,GAAG4G,EAAEzQ,EAAE,GAAGnB,eAAe,OACnDkS,EAAUC,GAAW3R,GAAGwK,GAAKvB,EAC3ByI,EAAUC,GAAW3R,GAAGwK,GACxB,EACA,KACA,EACAvL,EACA,EACAyS,EAAUC,GAAW3R,GACrBX,IAKJqS,EAAUC,GAAW3R,GAAGwK,GAAGhL,eAAe,MACxCkS,EAAUC,GAAW3R,GAAGwK,GAAGlK,EAAEK,EAAElB,OAAS,GACtCiS,EAAUC,GAAW3R,GAAGwK,GAAGlK,EAAEK,EAAE,GAAGnB,eAAe,OACnDkS,EAAUC,GAAW3R,GAAGwK,GAAKvB,EAC3ByI,EAAUC,GAAW3R,GAAGwK,GACxB,EACA,KACA,EACAvL,EACA,EACAyS,EAAUC,GAAW3R,GACrBX,IAKJqS,EAAUC,GAAW3R,GAAGwK,GAAGhL,eAAe,MACxCkS,EAAUC,GAAW3R,GAAGwK,GAAG/J,EAAEE,EAAElB,OAAS,GACtCiS,EAAUC,GAAW3R,GAAGwK,GAAG/J,EAAEE,EAAE,GAAGnB,eAAe,OACnDkS,EAAUC,GAAW3R,GAAGwK,GAAKvB,EAC3ByI,EAAUC,GAAW3R,GAAGwK,GACxB,EACA,KACA,EACAvL,EACA,EACAyS,EAAUC,GAAW3R,GACrBX,YAOLqS,GAaF,SAAS8C,GAAYrE,EAAWlR,EAAa8T,EAAYrB,EAAWC,EAAWtS,WAG3EW,EAAI,EAAGA,EAAI0R,EAAUC,GAAWlS,OAAQO,IAC3C0R,EAAUC,GAAW3R,GAAGgS,OAAS,GAE/BN,EAAUC,GAAW3R,GAAGsG,GAAK,GAE3BoL,EAAUC,GAAW3R,GAAGR,eAAe,WAG5BgC,SAASC,eAAexC,EAAc,IAAMI,EAAQ,SAAWqS,EAAUC,GAAW3R,GAAGuG,QAEzF3E,aAAa,YAAa,SAAWnE,EAAUwB,GAAawV,WAAa,KAiBvF,SAASC,GAAWvE,EAAWlR,EAAa8T,EAAY4B,EAAUC,EAAMC,GAC7EpX,EAAUwB,GAAamE,SAAU,EACjC3F,EAAUwB,GAAa4E,WAAakP,MAElCtV,EAAUwB,GAAaI,MAAQ,EAC/B5B,EAAUwB,GAAa6R,WAAa,EACpCrT,EAAUwB,GAAamT,WAAa,EACpC3U,EAAUwB,GAAasE,UAAW,EAClC9F,EAAUwB,GAAa0E,aAAetD,SAAS5C,EAAUwB,GAAa6U,GAAKrW,EAAUwB,GAAa4U,IAClGpW,EAAUwB,GAAa6V,cAAgBrX,EAAUwB,GAAa0E,aAAelG,EAAUwB,GAAa0F,GACpGlH,EAAUwB,GAAaqE,WAAc,EAAI7F,EAAUwB,GAAa0F,GAAM,IACtElH,EAAUwB,GAAa6B,eAAiB,EACxCrD,EAAUwB,GAAaoE,UAAYJ,KAAKC,MACxCzF,EAAUwB,GAAa8V,UAAYJ,EACnClX,EAAUwB,GAAaiF,MAAQ0Q,EAC/BnX,EAAUwB,GAAa+V,YAAcH,EAEnCpX,EAAUwB,GAAauE,SADrBmR,EAKJlX,EAAUwB,GAAagU,UAAY,EACnCxV,EAAUwB,GAAaiU,WAAa,EACpCzV,EAAUwB,GAAagW,OAAS,EAChCxX,EAAUwB,GAAaiW,OAAS,EAChCzX,EAAUwB,GAAawV,WAAa,EACpChX,EAAUwB,GAAakW,WAAa,EACpC1X,EAAUwB,GAAa2E,WAAa,EAIhChG,EAAoBH,EAAUwB,GAAaqE,aAC7C1F,EAAoBH,EAAUwB,GAAaqE,YAI7C7F,EAAUwB,GAAamW,kBAAoB,EAC3C3X,EAAUwB,GAAaoW,gBAAkB,OAQnCC,EAAS9T,SAAS8H,gBAAgB9L,EAAO,OAC/C8X,EAAO1T,aAAa,QAASpE,GAG7B8X,EAAOC,eAAe,KAAM,wBAAkB9X,EAAUwB,GAAawN,cAAKhP,EAAUwB,GAAayT,IACjG4C,EAAOC,eAAe,KAAM,sBAAuB,iBACnDD,EAAO1S,MAAM4S,QAAU,SACvBF,EAAO1S,MAAMoE,MAAQ,OACrBsO,EAAO1S,MAAMqE,OAAS,OACtBqO,EAAOC,eAAe,KAAM,mBAAatW,IACzC8T,EAAWpJ,QAAQ2L,GAEnB7X,EAAUwB,GAAa2M,KAAOpK,SAAS8H,gBAAgB9L,EAAO,QAC9DC,EAAUwB,GAAa2M,KAAK2J,eAAe,KAAM,oBAActW,IAC/DxB,EAAUwB,GAAauM,cAAgB,EACvC/N,EAAUwB,GAAawW,UAAY,EACnCH,EAAO3L,QAAQlM,EAAUwB,GAAa2M,UAEhC4G,EAAWhR,SAAS8H,gBAAgB9L,EAAO,KACjDgV,EAAS+C,eAAe,KAAM,qBAAetW,IAC7CqW,EAAOtJ,OAAOwG,OAERkD,EAAalU,SAAS8H,gBAAgB9L,EAAO,KACnDkY,EAAWH,eAAe,KAAM,uBAAiBtW,IACjDyW,EAAW9S,MAAMC,QAAU,OAC3B2P,EAAS7I,QAAQ+L,GAEjBjY,EAAUwB,GAAakC,OAAS,IAAIlD,MAAMR,EAAUwB,GAAa0E,aAAe,IAC7ErB,KAAK,MACLqT,KAAI,iBAAO,CAAEvU,WAAY,OAC5B3D,EAAUwB,GAAa4H,UAAY,GACnCpJ,EAAUwB,GAAa+B,QAAU,GACjCvD,EAAUwB,GAAa6H,SAAW,OAE5B8O,EAAWpU,SAAS8H,gBAAgB9L,EAAO,YACjDoY,EAASL,eAAe,KAAM,oBAActW,IAC5CxB,EAAUwB,GAAa2M,KAAKjC,QAAQiM,OAC9BC,EAAerU,SAAS8H,gBAAgB9L,EAAO,WACrDqY,EAAajU,aAAa,IAAK,GAC/BiU,EAAajU,aAAa,IAAK,GAC/BiU,EAAajU,aAAa,QAASnE,EAAUwB,GAAawN,GAC1DoJ,EAAajU,aAAa,SAAUnE,EAAUwB,GAAayT,GAC3DkD,EAAS5J,OAAO6J,GAEhBpY,EAAUwB,GAAe6T,EAAU3C,EAAWlR,EAAauT,EAAU/U,EAAUwB,GAAc,SAAU,GAEnGxB,EAAUwB,GAAagU,UAAY,GAAKxV,EAAUwB,GAAaiU,WAAa,EAAG,KAC7E4C,EAASrY,EAAUwB,GAAawN,EAAIhP,EAAUwB,GAAagU,UAC3D8C,EAAStY,EAAUwB,GAAayT,EAAIjV,EAAUwB,GAAaiU,WAS7DzV,EAAUwB,GAAawV,WADrBqB,EAASC,EACyBD,EAEAC,EAOtCvB,GAAYrE,EAAWlR,EAAauT,EAAU/U,EAAUwB,GAAc,SAAU,GAGlFuT,EAAS+C,eAAe,KAAM,gCAA0BtW,QACxDxB,EAAUwB,GAAa+W,YAAa,EAChB,EACpBvY,EAAUwB,GAAamE,SAAU,EAC5B3F,EAAUwB,GAAa8V,UAG1BlU,EAAU5B,EAAa,GAFvBkF,GAAY,EAAG,GAAI1G,EAAUwB,GAAamF,YAI5C3G,EAAUwB,GAAa4E,WAAWC,cAAc,IAAIC,YAAY,YAAa,CAACC,SAAS,EAAMC,OAAO,WAAchF,MAClH,MAAO4J,GAIPpL,EAAUwB,GAAa4E,WAAWC,cAAc,IAAIC,YAAY,cAAe,CAACC,SAAS,EAAMC,OAAO,OAAU4E,YAAgB5J,MAChIxB,EAAUwB,GAAa4E,WAAWC,cAAc,IAAIC,YAAY,YAAa,CAACC,SAAS,EAAMC,OAAO,OAAU4E,YAAgB5J,MAChIkE,iBAAiBA,iBAAiB,EAClC4P,EAAWrO,UAAYmE,EACvBpL,EAAUqL,OAAO7J,EAAa,IAezB,SAASgX,GACdC,EACAC,EACAhG,EACA4E,EACA7Q,EACAT,EACA4R,EACApW,OAEMmX,EAAO,IAAIC,eACjBD,EAAKE,iBAAkB,EACvBF,EAAKG,KAAK,MAAOL,GAAK,GAEtBE,EAAKI,mBAAqB,cACD,GAAnBJ,EAAKK,YAAkC,KAAfL,EAAKM,OAAe,KAC1CC,EAAWP,EAAKQ,aAChBD,EAASE,OAAO,uBAAyB,IAE3CF,GADAA,EAAWA,EAASG,QAAQ,qBAAsB,KAC9BA,QAAQ,OAAQ,UAIhCC,EAAmB9X,EACzBxB,EAAUsZ,GAAoBjH,KAAKC,MAAM4G,GACzClZ,EAAUsZ,GAAkB3S,WAAa+L,EAErC1M,GAA6C,UAA1BuT,EAAO3B,KAC5B5X,EAAUsZ,GAAkBtT,gBAAkBA,EAC9ChG,EAAUsZ,GAAkB1B,gBAAkBA,EAC9C5X,EAAUsZ,GAAkBvS,QAAU,EACtC/G,EAAUsZ,GAAkBrT,aAAe,EAC3CjG,EAAUsZ,GAAkBtS,UAAYjD,SAASyV,cAAc,OAC/DxZ,EAAUsZ,GAAkBtS,UAAU7C,aAAa,sBAAgBmV,IACnEtZ,EAAUsZ,GAAkBtS,UAAU7B,MAAMC,QAAU,QACtDwS,EAAgB1L,QAAQlM,EAAUsZ,GAAkBtS,YAGtDiQ,GAAWvE,EAAW4G,EAAkBZ,EAAYpB,EAAW7Q,KAGnEkS,EAAKc,OAaA,SAASC,GAAQC,QAClBjU,iBAAiB,SAGRoC,IAAT6R,IAYFA,EAAKC,YACLD,EAAOA,EAAKN,QAAQ,KAAM,KACjBrX,OAAS,OACX,IAAIO,EAAI,EAAGA,GAAKmD,iBAAgBnD,OAC/BvC,EAAUuC,GAAGoE,YAAcgT,GAAQ3Z,EAAUuC,GAAGgV,aAAeoC,EAAM,CACvEE,GAAMF,GACNjU,kBAAkB,EAClB1F,EAAUqL,OAAO9I,EAAG,GACpBwB,SAASC,eAAe2V,GAAM1S,UAAY,UAa7C,SAAS6S,GAAKH,QACfjU,iBAAiB,WAGRoC,IAAT6R,MACG,IAAIpX,EAAI,EAAGA,GAAKmD,iBAAgBnD,IACnCvC,EAAUuC,GAAGwD,SAAU,MAEpB,CACL4T,EAAKC,WACLD,EAAOA,EAAKN,QAAQ,KAAM,QACjB9W,EAAI,EAAGA,GAAKmD,iBAAgBnD,OAC/BvC,EAAUuC,GAAGoE,YAAcgT,GAAQ3Z,EAAUuC,GAAGgV,aAAeoC,EAAM,CACvE3Z,EAAUuC,GAAGwD,SAAU,UAYvB,SAAS8T,GAAMF,WACR7R,IAAT6R,MACG,IAAIpX,EAAI,EAAGA,GAAKmD,iBAAgBnD,IACnCvC,EAAUuC,GAAGwD,SAAU,MAEpB,CACL4T,EAAKC,WACLD,EAAOA,EAAKN,QAAQ,KAAM,QACjB9W,EAAI,EAAGA,GAAKmD,iBAAgBnD,OAC/BvC,EAAUuC,GAAGoE,YAAcgT,GAAQ3Z,EAAUuC,GAAGgV,aAAeoC,EAAM,CACvE3Z,EAAUuC,GAAGwD,SAAU,UAYxB,SAASgU,GAAKJ,GACnBjT,GAAY,GAAG,EAAOiT,GAWjB,SAASjT,GAAY/D,EAAQqX,EAASL,MACpB,iBAAZK,IACTL,EAAOK,KAELtU,iBAAiB,WAGRoC,IAAT6R,MACG,IAAIpX,EAAI,EAAGA,GAAKmD,iBAAgBnD,IACnCvC,EAAUuC,GAAGwD,SAAU,EACvB/F,EAAUuC,GAAGc,cAAgBV,EAC7BS,EAAUb,EAAGI,OAEV,CACLgX,EAAKC,WACLD,EAAOA,EAAKN,QAAQ,KAAM,QACjB9W,EAAI,EAAGA,GAAKmD,iBAAgBnD,OAC/BvC,EAAUuC,GAAGoE,YAAcgT,GAAQ3Z,EAAUuC,GAAGgV,aAAeoC,EAAM,CACvE3Z,EAAUuC,GAAGwD,SAAU,EACvB/F,EAAUuC,GAAGc,cAAgBV,EAE7BS,EAAUb,EAAGI,uOA15Ed,SAAkCsX,UAChCA,kBAskDF,SAAsBhG,2PAq2BtB,SAAuBiG,WACNpS,IAAlBoS,EAAIC,gBAAwCrS,IAAboS,EAAIE,WAA4CtS,IAAtBoS,EAAIG,mBAG7DnD,GAAW,EACXC,GAAO,OAGYrP,IAAjBoS,EAAIhD,YACa,IAAjBgD,EAAIhD,WAAsC,IAAjBgD,EAAIhD,WAC/BA,EAAWgD,EAAIhD,gBAIApP,IAAboS,EAAI/C,QACS,IAAb+C,EAAI/C,OAA8B,IAAb+C,EAAI/C,OAC3BA,EAAO+C,EAAI/C,YAIKrP,IAAdoS,EAAI7Z,QACU,IAAd6Z,EAAI7Z,YAC2B,IAAtB6Z,EAAII,gBACIJ,EAAII,oBAKExS,IAAvBoS,EAAI9Z,iBACmB,IAAvB8Z,EAAI9Z,iBACNA,GAAiB,GAIrBsF,kBAAkB,MACd4T,EAAmB5T,wBACvB1F,EAAUsZ,GAAoB,GAC9BtZ,EAAUsZ,GAAkB3T,SAAU,OACVmC,IAAtBoS,EAAIG,eAAgCH,EAAIG,cAAcrY,OAAS,GAEnEhC,EAAUsZ,GAAoBjH,KAAKC,MAAM4H,EAAIG,eAC7Cra,EAAUsZ,GAAkB3S,WAAauT,EAAIC,UAAU3D,GACvDxW,EAAUsZ,GAAkB1B,gBAAkBsC,EAAII,eAClDta,EAAUsZ,GAAkBtT,gBAAkBkU,EAAI7Z,MAClD4W,GAAWiD,EAAIC,UAAU3D,GAAI8C,EAAkBY,EAAIC,UAAWjD,EAAUC,SAChDrP,IAAboS,EAAIE,MAAuBF,EAAIE,MAC1C5B,GACE0B,EAAIE,KACJF,EAAIC,UACJD,EAAIC,UAAU3D,GACdU,EACAC,EACA+C,EAAI7Z,MACJ6Z,EAAII,eACJhB,GAGCpZ,IACHA,GAAc,EACdD,EAAamH,WAAWmT,OAAOlT,sBAAsB/B,GAAa,IAGpEtF,EAAUsZ,GAAkB3S,WAAauT,EAAIC,UAAU3D,GACvDxW,EAAUsZ,GAAkBI,QAAU,WAAYA,GAAQ1Z,EAAUsZ,GAAkB3S,aACtF3G,EAAUsZ,GAAkBQ,KAAO,WAAYA,GAAK9Z,EAAUsZ,GAAkB3S,aAChF3G,EAAUsZ,GAAkBO,MAAQ,WAAYA,GAAM7Z,EAAUsZ,GAAkB3S,aAClF3G,EAAUsZ,GAAkBS,KAAO,WAAYA,GAAK/Z,EAAUsZ,GAAkB3S,aAChF3G,EAAUsZ,GAAkB5S,YAAc,SAASiB,GAAQjB,GAAYiB,EAAO3H,EAAUsZ,GAAkB3S,aACnG3G,EAAUsZ,8HA1gEZ,SAA6B5N,EAAUC,EAAUnK,EAAaE,EAAmBE,UAC/E8J,iGAGF,SAAqBA,EAAUC,EAAUnK,EAAaE,EAAmBE,OACxEgK,EAAW7H,SAAS8H,gBAAgB9L,EAAO,eACjD6L,EAASzH,aAAa,IAAKQ,YAC3BiH,EAASzH,aAAa,OAAQ,eAC9ByH,EAASzH,aAAa,eAAS3C,mBAAoBkK,EAASK,SAC5DH,EAASI,UAAUC,IAAI,QACvBN,EAASO,QAAQN,GACjBF,EAASS,UAAW,EACbT,yBAGF,SAA6BA,EAAUC,EAAUnK,EAAaE,EAAmBE,UAC/E8J"}